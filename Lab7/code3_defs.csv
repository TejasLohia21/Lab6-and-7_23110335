Dk,var,line,block,stmt
D1,i,3,B1,int i = 0
D2,j,4,B1,int j = 0
D3,n,5,B1,int n = 60
D4,total,8,B1,int total = 0
D5,x,9,B1,int x = 3
D6,y,10,B1,int y = 7
D7,z,11,B1,int z = 9
D8,balance,12,B1,int balance = 0
D9,iteration,13,B1,int iteration = 0
D10,mode,14,B1,int mode = 1
D11,i,15,B2,for (i = 0
D12,arr[i],16,B3,arr[i] = (i * 13 + 5 * (i % 7) + 11) % 97
D13,i,18,B4,for (i = 0
D14,total,19,B5,total = total + arr[i]
D15,aux[i],20,B5,aux[i] = arr[i] % 10
D16,average,22,B6,int average = total / n
D17,pivot,23,B6,int pivot = (average % 20) + 10
D18,i,24,B7,for (i = 0
D19,value,25,B8,int value = arr[i]
D20,value,27,B10,value = value - (value / 5)
D21,arr[i],28,B10,arr[i] = value + (i % 7)
D22,aux[i],29,B10,aux[i] = aux[i] + (arr[i] % 3)
D23,x,30,B10,x = x + 2
D24,y,31,B10,y = y - 1
D25,z,32,B10,z = z + (x + y) % 5
D26,balance,33,B10,balance = balance + value - pivot
D27,j,34,B11,for (j = 0
D28,value,35,B12,value = (value + j + i) % 91
D29,balance,36,B12,balance = balance + (value % 4)
D30,value,38,B14,value = value + 2
D31,value,41,B16,value = value - 3
D32,arr[i],44,B17,arr[i] = value
D33,value,47,B19,value = value + (pivot - value) / 2
D34,x,48,B19,x = x + (value % 3)
D35,y,49,B19,y = y + (x % 4)
D36,z,50,B19,z = z - (y % 5)
D37,balance,51,B19,balance = balance - value + pivot
D38,j,52,B20,for (j = 0
D39,value,53,B21,value = (value + 5 + j) % 97
D40,x,55,B23,x = x + j
D41,y,58,B25,y = y + i
D42,x,61,B27,x = x / 2
D43,y,62,B27,y = y / 3
D44,z,63,B27,z = z / 4
D45,arr[i],66,B28,arr[i] = value
D46,aux[i],67,B28,aux[i] = (value + aux[i]) % 11
D47,round,70,B29,int round = 0
D48,sumPart,72,B31,int sumPart = 0
D49,i,73,B32,for (i = 0
D50,sumPart,74,B33,sumPart = sumPart + arr[i]
D51,i,77,B35,for (i = 0
D52,arr[i],78,B36,arr[i] = (arr[i] + i + round) % 100
D53,aux[i],79,B36,aux[i] = (aux[i] + arr[i]) % 17
D54,balance,81,B37,balance = balance + sumPart / 2
D55,x,82,B37,x = (x + y + z + balance) % 200
D56,y,83,B37,y = (y + x / 3 + balance / 4) % 180
D57,z,84,B37,z = (z + y / 2 + balance / 5) % 160
D58,i,87,B39,for (i = n - 1
D59,arr[i],88,B40,arr[i] = (arr[i] * 2 + i + round) % 101
D60,aux[i],89,B40,aux[i] = (aux[i] * 3 + arr[i]) % 19
D61,balance,91,B41,balance = balance - sumPart / 3
D62,balance,93,B43,balance = -balance / 2 + 17
D63,x,95,B44,x = (x + 5 * balance + y) % 210
D64,y,96,B44,y = (y + 7 * z + x) % 190
D65,z,97,B44,z = (z + 9 * x + y) % 170
D66,round,99,B45,round = round + 1
D67,mode,101,B47,mode = mode + 1
D68,mode,103,B49,mode = 1
D69,x,107,B51,x = (x + 2 * y) % 150
D70,y,108,B51,y = (y + 3 * z) % 140
D71,z,109,B51,z = (z + 5 * x) % 130
D72,x,112,B53,x = (x * 2 + y / 2) % 160
D73,y,113,B53,y = (y * 3 + z / 3) % 150
D74,z,114,B53,z = (z * 4 + x / 4) % 140
D75,x,117,B55,x = (x + y + z) % 180
D76,y,118,B55,y = (x * 2 - y) % 170
D77,z,119,B55,z = (z + 3 * y) % 160
D78,x,122,B57,x = (x + y / 2) % 155
D79,y,123,B57,y = (y + z / 2) % 145
D80,z,124,B57,z = (z + x / 2) % 135
D81,final_value,127,B58,int final_value = 0
D82,i,128,B59,for (i = 0
D83,final_value,129,B60,final_value = final_value + (arr[i] + aux[i]) % 99
D84,arr[i],131,B62,arr[i] = arr[i] + (final_value % 7)
D85,aux[i],132,B62,aux[i] = aux[i] - (final_value % 5)
D86,aux[i],134,B64,aux[i] = -aux[i]
D87,arr[i],138,B66,arr[i] = arr[i] - (final_value % 9)
D88,aux[i],139,B66,aux[i] = aux[i] + (final_value % 6)
D89,stability,142,B67,int stability = 0
D90,i,143,B68,for (i = 0
D91,stability,144,B69,stability = stability + (arr[i] * aux[i]) % 123
D92,stability,146,B71,stability = stability / 2
D93,verify,149,B72,int verify = 0
D94,i,150,B73,for (i = 0
D95,verify,151,B74,verify = (verify + x + y + z + i) % 201
D96,verify,153,B76,verify = verify / 2 + 7
D97,verify,157,B78,verify = verify + 5
D98,verify,160,B80,verify = verify - 90
D99,control,163,B81,int control = 0
D100,i,164,B82,for (i = 0
D101,control,165,B83,control = (control + i * x + y - z) % 300
D102,x,167,B85,x = (x + control / 3) % 160
D103,y,170,B87,y = (y + control / 2) % 150
D104,z,173,B89,z = (z + control / 4) % 140
D105,balance,176,B91,balance = balance + control / 5
D106,x,178,B93,x = (x + y) % 180
D107,y,179,B93,y = (y + z) % 170
D108,x,182,B95,x = (x - y) % 190
D109,z,183,B95,z = (z - x) % 160
D110,cycle,187,B96,int cycle = 0
D111,x,190,B99,x = (x + balance / 2 + cycle) % 210
D112,y,191,B99,y = (y + x / 3) % 200
D113,z,194,B101,z = (z + balance / 4 + y) % 190
D114,balance,195,B101,balance = (balance + z / 2) % 500
D115,result,200,B103,int result = (x + y + z + balance + total + stability + verify + average + pivot + control) % 1000
