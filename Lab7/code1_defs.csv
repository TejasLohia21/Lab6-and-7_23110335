Dk,var,line,block,stmt
D1,n,3,B1,int n = 200
D2,i,8,B1,"int i = 0, j = 0, k = 0"
D3,total,9,B1,int total = 0
D4,pos,10,B1,"int pos = 0, neg = 0, zero = 0"
D5,rangeLow,11,B1,int rangeLow = -150
D6,rangeHigh,12,B1,int rangeHigh = 150
D7,alpha,13,B1,"int alpha = 3, beta = 7, gamma = 5"
D8,mod,14,B1,int mod = 97
D9,balance,15,B1,int balance = 0
D10,flag,16,B1,int flag = 0
D11,adjust,17,B1,int adjust = 0
D12,iteration,18,B1,int iteration = 0
D13,offset,19,B1,int offset = 0
D14,shift,20,B1,int shift = 1
D15,rolling,21,B1,int rolling = 0
D16,bigSum,22,B1,int bigSum = 0
D17,result,23,B1,int result = 0
D18,value,24,B1,int value = 0
D19,current,25,B1,int current = 0
D20,next,26,B1,int next = 0
D21,limit,27,B1,int limit = 180
D22,i,29,B2,for (i = 0
D23,data[i],30,B3,data[i] = (i * alpha + i * i * beta + gamma) % mod
D24,temp[i],31,B3,temp[i] = (data[i] + i * 4) % 89
D25,aux[i],32,B3,aux[i] = (temp[i] - i * 3 + 17) % 77
D26,mirror[i],33,B3,mirror[i] = (aux[i] + data[i]) % 65
D27,data[i],36,B5,data[i] = data[i] - 30
D28,data[i],39,B7,data[i] = data[i] + 10
D29,data[i],42,B9,data[i] = data[i] + 5
D30,i,58,B17,for (i = 0
D31,t,59,B18,int t = data[i]
D32,t,60,B18,t = (t * 7 + 13) % 111
D33,t,63,B20,t = t - (i % 7)
D34,t,66,B22,t = t + (i % 11)
D35,t,69,B24,t = t * 2 - (i % 9)
D36,temp[i],72,B25,temp[i] = t
D37,iteration,76,B26,for (iteration = 0
D38,i,77,B27,for (i = 0
D39,m,78,B28,int m = (data[i] + iteration * 3 + i * 2) % 123
D40,m,80,B30,m = -m
D41,m,84,B32,m = m / 2
D42,m,87,B34,m = m * 3 + 1
D43,data[i],90,B35,data[i] = (data[i] + m - iteration) % 150
D44,data[i],92,B37,data[i] = -data[i]
D45,rolling,106,B44,rolling = (rolling + shift + iteration * 3) % 777
D46,i,109,B45,for (i = 0
D47,aux[i],110,B46,aux[i] = (data[i] + temp[i] + aux[i] + i * 2) % 201
D48,aux[i],113,B48,aux[i] = aux[i] / 2
D49,aux[i],116,B50,aux[i] = aux[i] + 15
D50,aux[i],119,B52,aux[i] = aux[i] + aux[i] % 9
D51,i,123,B53,for (i = 0
D52,sumBlock,124,B54,int sumBlock = 0
D53,j,125,B55,for (j = 0
D54,idx,126,B56,int idx = (i + j) % n
D55,data[i],131,B58,data[i] = data[i] - (sumBlock % 50)
D56,data[i],134,B60,data[i] = data[i] + (sumBlock % 20)
D57,data[i],137,B62,data[i] = data[i] + (sumBlock % 10)
D58,i,141,B63,for (i = 0
D59,data[i],143,B65,data[i] = rangeLow + (i % 5)
D60,data[i],146,B67,data[i] = rangeHigh - (i % 3)
D61,data[i],149,B69,data[i] = data[i] + (i % 2)
D62,counter,153,B70,int counter = 0
D63,i,155,B72,for (i = 0
D64,t,156,B73,int t = data[i]
D65,t,159,B75,t = t + counter
D66,t,162,B77,t = t - counter / 2
D67,t,165,B79,t = t + counter / 3
D68,t,169,B81,t = -t
D69,data[i],172,B82,data[i] = t
D70,i,178,B84,for (i = 0
D71,bigSum,191,B93,bigSum = bigSum / 2
D72,bigSum,194,B95,bigSum = bigSum * 2
D73,bigSum,197,B97,bigSum = bigSum + 200
D74,pass,202,B98,int pass = 0
D75,i,204,B100,for (i = 1
D76,tmp,206,B102,int tmp = data[i]
D77,data[i],207,B102,data[i] = data[i - 1]
D78,data[i - 1],208,B102,data[i - 1] = tmp
D79,flag,209,B102,flag = 1
D80,pass,214,B104,pass = 50
D81,flag,217,B106,flag = 0
D82,i,222,B107,for (i = 0
D83,adjust,226,B110,adjust = adjust / 2
D84,adjust,229,B112,adjust = adjust * 3
D85,adjust,232,B114,adjust = adjust + 5
D86,i,236,B115,for (i = 0
D87,val,237,B116,int val = (data[i] + temp[i] + aux[i]) % 199
D88,result,251,B125,result = result / 3
D89,result,254,B127,result = result * 2
D90,result,257,B129,result = result + 111
