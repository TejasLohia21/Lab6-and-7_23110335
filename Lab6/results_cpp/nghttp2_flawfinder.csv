File,Line,Column,DefaultLevel,Level,Category,Name,Warning,Suggestion,Note,CWEs,Context,Fingerprint,ToolVersion,RuleId,HelpUri
repos_cpp/nghttp2/src/shrpx.cc,423,9,5,5,race,chown,"This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).",Use fchown( ) instead.,,CWE-362,"    if (chown(pid_file.data(), config->uid, config->gid) == -1) {",1c5ec5823adf3cec2ce89cebd6f2cec6087baf5d251c87d3a817c821ddba7dbf,2.0.19,FF1031,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx.cc,1008,11,5,5,race,chown,"This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).",Use fchown( ) instead.,,CWE-362,"      if (chown(addr.host.data(), config->uid, config->gid) == -1) {",f199c86d813f0d15664af0634c2ce9451083ea11835c04c9ef382dd4a540eb31,2.0.19,FF1031,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx.cc,3354,13,5,5,race,chown,"This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).",Use fchown( ) instead.,,CWE-362,"        if (chown(path, config->uid, config->gid) == -1) {",b79f8ed2e884d5e1f7539092e82cc6ea0bad077ef29ddb4e52fd64e81e19c2b4,2.0.19,FF1031,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx.cc,3376,13,5,5,race,chown,"This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).",Use fchown( ) instead.,,CWE-362,"        if (chown(path, config->uid, config->gid) == -1) {",b79f8ed2e884d5e1f7539092e82cc6ea0bad077ef29ddb4e52fd64e81e19c2b4,2.0.19,FF1031,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/examples/libevent-client.c,32,34,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"#  define warnx(format, args...) fprintf(stderr, format ""\n"", ##args)",364203dd511253f8abbad8b4e876137d707904280d2c4893242486fe1f798afa,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/examples/libevent-server.c,32,34,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"#  define warnx(format, args...) fprintf(stderr, format ""\n"", ##args)",364203dd511253f8abbad8b4e876137d707904280d2c4893242486fe1f798afa,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/lib/nghttp2_debug.c,33,3,4,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  vfprintf(stderr, fmt, args);",6c25caac18e46a84a9dc5a0b738a92c77aaf3a185ee35d002035c3bd178c9cb5,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/lib/nghttp2_session.c,172,8,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"  rv = vsnprintf(NULL, 0, fmt, ap);",8058ce37f3fd1b19131666bb57cfc65e4dc4535cc67413bb926a1b4db7ae442a,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/lib/nghttp2_session.c,187,8,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"  rv = vsnprintf(buf, bufsize, fmt, ap);",ead2440becd15814cd4a57e261c94be926a47a00bc51b4f5b3723277f6af42fc,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/h2load_quic.cc,255,3,4,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx.cc,1782,36,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,    auto &accessconf = loggingconf.access;,a5c4b67fdef47d4bad861818a678dd83b81bd47f1b166c8821aa912170507fcc,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx.cc,3305,19,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,  if (loggingconf.access.syslog || loggingconf.error.syslog) {,70f36d2c9605dbed3c8462257f8289ac71c501c153ce8acaaea4c84bfb5dd8ce,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx.cc,3305,26,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,  if (loggingconf.access.syslog || loggingconf.error.syslog) {,70f36d2c9605dbed3c8462257f8289ac71c501c153ce8acaaea4c84bfb5dd8ce,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx.cc,3305,54,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,  if (loggingconf.access.syslog || loggingconf.error.syslog) {,70f36d2c9605dbed3c8462257f8289ac71c501c153ce8acaaea4c84bfb5dd8ce,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_client_handler.cc,1232,21,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"    config->logging.access.format,",1f258bee8338671b79a637a48c45c0b85cd777a84d968418e1236e26b4a2a4c3,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_config.cc,3100,21,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"    config->logging.access.file = make_string_ref(config->balloc, optarg);",15c900dea6f82c0525b654e44579180e87d6da69f58124006902b567f212fefb,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_config.cc,3104,21,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"    config->logging.access.syslog = util::strieq(""yes""sv, optarg);",4e55834f8848c789f37b797745481b097be01b55951c28db0874b1584bba5e15,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_config.cc,3108,21,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"    config->logging.access.format = parse_log_format(config->balloc, optarg);",4b7a422135d05df94219b57721d2c12db790dd8e8217fe67861645e7487e1bab,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_config.cc,3986,21,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"    config->logging.access.write_early = util::strieq(""yes""sv, optarg);",35a543164c0898973ca5f8168dcd6e357999795563d8696ebcd32ab5321bd626,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_config.h,900,10,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,    bool syslog;,c250787b1ef2a8ec2dc22f1544e1d0733c74b14de48e65b4e1b1fd7856dc372d,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_config.h,904,5,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,  } access;,0f94b3ccfdd9ecc0e80e605f088ef2c62a0b8ecbe31b6fd8067f90ae001ca2de,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_config.h,908,10,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,    bool syslog;,c250787b1ef2a8ec2dc22f1544e1d0733c74b14de48e65b4e1b1fd7856dc372d,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_http2_session.cc,1180,19,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,  if (loggingconf.access.write_early && downstream->accesslog_ready()) {,2ace4e6dacb2e03e7a2c68f36ed8aea7f16e4decbe7105b94a880917d967fe54,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_http3_upstream.cc,177,17,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"  auto nwrite = vsnprintf(buf.data(), buf.size(), fmt, ap);",7df7f080bcbe9d4facaaced4fd7e5fc84e294816c557a317e1a4fe5f79f5c515,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_http_downstream_connection.cc,1025,19,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,  if (loggingconf.access.write_early && downstream->accesslog_ready()) {,2ace4e6dacb2e03e7a2c68f36ed8aea7f16e4decbe7105b94a880917d967fe54,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_log.cc,135,48,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,      (lgconf->errorlog_fd == -1 && !errorconf.syslog)) {,f3979041769a4e41a462bf60b30fc46baea05f8b15bf73b04032ccb938ba80b8,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_log.cc,140,17,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,  if (errorconf.syslog) {,2f232ac981f37292a196702bb0edc0f1835f5f1b2e52030d68529a60642123c7,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_log.cc,188,17,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,  if (errorconf.syslog) {,2f232ac981f37292a196702bb0edc0f1835f5f1b2e52030d68529a60642123c7,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_log.cc,488,44,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,  auto &accessconf = get_config()->logging.access;,efb3f33c5e0ab40a84c4175c1e4842376938afec0cd6e8025cb2e559e63a3a18,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_log.cc,490,49,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,  if (lgconf->accesslog_fd == -1 && !accessconf.syslog) {,310d41d8e02b1b676c3c9b512b2bec62762e739bcf7ead68c21de92bcc6a7fec,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_log.cc,759,18,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,  if (accessconf.syslog) {,a1cbe6c563a9a2b07308b2478a672602d4529a5c8d0e0643405c543d01d57073,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_log.cc,783,34,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,  auto &accessconf = loggingconf.access;,a5c4b67fdef47d4bad861818a678dd83b81bd47f1b166c8821aa912170507fcc,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/nghttp2/src/shrpx_log.cc,786,19,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,  if (!accessconf.syslog && !accessconf.file.empty()) {,0f6fcecf80f03f5e1768067a129b912ab5125fae24d71bb7a934bf748190de04,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_log.cc,795,18,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,  if (!errorconf.syslog && !errorconf.file.empty()) {,77fc367c346acd8da9426547274ea26e94d4e4af11677e4ed431bf899fcb60b9,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/shrpx_log.cc,849,17,4,4,format,syslog,"If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant format string for syslog.,,CWE-134,  if (errorconf.syslog || lgconf->errorlog_fd == -1) {,bf8e3ec898d86d742c14e0e541b410a1ae9bfc2491d2abb7c55c76baa5abecd9,2.0.19,FF1018,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/nghttp2/src/deflatehd.cc,396,13,3,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).","Check implementation on installation, or limit the size of all string inputs.",,"CWE-120, CWE-20","    int c = getopt_long(argc, argv, ""S:dhs:t"", long_options, &option_index);",52642e28c8cdcfdaae7863861d053336cf9ef19715e2061eb55c7f8ef13b7279,2.0.19,FF1027,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/h2load.cc,2422,14,3,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).","Check implementation on installation, or limit the size of all string inputs.",,"CWE-120, CWE-20","    auto c = getopt_long(argc, argv,",218234b413d22584d7d7b29f6cc554d233cdb0b03be89140bbf909db4c017b99,2.0.19,FF1027,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/inflatehd.cc,265,13,3,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).","Check implementation on installation, or limit the size of all string inputs.",,"CWE-120, CWE-20","    int c = getopt_long(argc, argv, ""dh"", long_options, &option_index);",0254804da70b17c0e32dc7de0367605beae87354f5f489f08b79588550144c26,2.0.19,FF1027,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/nghttp.cc,2728,7,3,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).","Check implementation on installation, or limit the size of all string inputs.",,"CWE-120, CWE-20","      getopt_long(argc, argv, ""M:Oab:c:d:m:np:r:hH:vst:uw:yW:"", long_options,",1130ef474c1de89038fa011ed6313e4d3d7c04635063fcfe6c0684b808a007f6,2.0.19,FF1027,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/nghttpd.cc,229,13,3,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).","Check implementation on installation, or limit the size of all string inputs.",,"CWE-120, CWE-20","    int c = getopt_long(argc, argv, ""DVb:c:d:ehm:n:p:va:w:W:"", long_options,",f8007b9ed7fffb0c608b0524fb8bbe7e8284ab792773f253261abe2ca00e6b44,2.0.19,FF1027,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx.cc,821,16,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",    auto env = getenv(name.c_str());,b491075b31d5556b7552e85cc0d8808c9d42b1478bc3c27a296d13aecd947762,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/nghttp2/src/shrpx.cc,892,12,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",  auto s = getenv(ENV_ORIG_PID.data());,a57f372d2cc5ef5e878828f5c77bac7671b6e9acc31979950ea83ba96b2b7cdb,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/nghttp2/src/shrpx.cc,914,16,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",    auto env = getenv(name.c_str());,b491075b31d5556b7552e85cc0d8808c9d42b1478bc3c27a296d13aecd947762,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/nghttp2/src/shrpx.cc,1024,23,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","  if (sd_booted() && (getenv(""NOTIFY_SOCKET"") != nullptr)) {",47f6c1e022d2c8de64a81f862960f59b0c9908bbef371a6b06cf5c767a7436a4,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/nghttp2/src/shrpx.cc,3978,7,3,3,buffer,getopt_long,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).","Check implementation on installation, or limit the size of all string inputs.",,"CWE-120, CWE-20","      getopt_long(argc, argv, ""DL:b:c:f:hkn:opsv"", long_options, &option_index);",b4729ade8323f44eed0e30c999c9f732aba8282078245b4ae7d2991ddc675eb6,2.0.19,FF1027,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/tls.cc,205,26,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","  auto keylog_filename = getenv(""SSLKEYLOGFILE"");",cd55ab38a5534bcf4280f50b2e22cad54f44121c64a82fc806c9064b3cf121ea,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/nghttp2/src/util_test.cc,725,13,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","  auto tz = getenv(""TZ"");",ea6da0c33ef6635a62ed72a9951da4bbfeb2d134f9687d9bedd109fad0f95fb9,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/nghttp2/examples/client.c,122,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(dst, s, len);",e5f7b25fc6923f91b23c4bf800371485403be62589a03865ab557d7dda2b03ec,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/examples/client.c,383,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char service[NI_MAXSERV];,da76c0d2a15f199d661a6e6bebff106c877647c4b5ff423a4a6db2294b99dd2e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/examples/libevent-client.c,110,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(stream_data->authority, &uri[u->field_data[URLPARSE_HOST].off],",a237d1615eb7bf583923366f7409af092f69fd30fd1186cd719a607d251a09bd,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/examples/libevent-client.c,130,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(stream_data->path, &uri[u->field_data[URLPARSE_PATH].off],",d017b90e16111e02b5b74464b0da451e2af1d3ca069ff6675c212f47d03eb716,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/examples/libevent-client.c,139,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,    memcpy(stream_data->path + stream_data->pathlen -,1a448a51163533e4afcdb5575cd469e3a509cb5e136b547866db38e33c713ca2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/examples/libevent-server.c,226,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char host[NI_MAXHOST];,39e4110daecae371d593a92420fb3cb011f0a5f109b1130d2790868765b7a024,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/examples/libevent-server.c,365,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(&res[j], &value[i], 2);",7e29f2873de1b66fcc12595388993f750f74b6403a9847d0ded1ae1c34996196,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/examples/libevent-server.c,368,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(res, value, valuelen);",29a69463ad561245d6cbb723f64afc2a13ce5a5a2fce5218ffb33c311c5ae865,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/examples/libevent-server.c,532,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  fd = open(rel_path, O_RDONLY);",131d928094ecc20192f93aff246f9fef5f836eb19dd039c7c43f62e8ff27f4e2,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/fuzz/fuzz_frames.cc,16,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(n, s1.c_str(), s1.size());",0adc93b4a68705a2f876d9c3df86e3fcfc973d895be30e18c87b4f913bbedecf,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/fuzz/fuzz_frames.cc,19,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(v, s2.c_str(), s2.size());",6bf424038c2abe42280aac546ebf0db89c49b9329d2c98434e7971b4ce84de34,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_frame.c,682,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(var_gift_payload, payload + 8, var_gift_payloadlen);",5d6b5ac3f568510fc08e0814fdcb7bccabe0940d8dd55fcee2d6238095e3d2a3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_frame.c,955,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(iv_copy, iv, len);",6b438386ba2db51290471bc62ed18df114faea7211ad19d4f6e43949f5e9fac3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_frame.c,1077,9,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        memcpy(data, nva[i].name, nva[i].namelen);",2cc030bc17c1f11e095acebf7b4903c01d19abfaa68c435762bef5ff7d367c7d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_frame.c,1091,9,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        memcpy(data, nva[i].value, nva[i].valuelen);",2d300ce27a0382a8f09836b4abddbdce400d1da829d06d7de0ea571baf8021a2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_hd_huffman.c,66,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy(bufs->cur->buf.last, &x, 4);",19b1b3e68510fecaf74993b8f539c64a69403599785a6a4bb0d19c83834c4913,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_helper.c,34,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(buf, &x, sizeof(uint16_t));",e507f808fc08bbeb3c296d32f8c46e31aa561a19938e283e60867cf5d470d5c3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_helper.c,39,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(buf, &x, sizeof(uint32_t));",3b13bba0ae91c955215ab0502c0e5cbc1671b89a25a36d37d7777e5e09ff092a,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_helper.c,44,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&n, data, sizeof(uint16_t));",b3cc201c41a9bfb7fa5fac410a889f91983ffbf125907743ce80572ca6787470,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_helper.c,50,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&n, data, sizeof(uint32_t));",f18b7b9b1a58ea0899092bef54a45b1dc970b01c14f72392f15d02e8480a6d08,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_helper.c,767,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(dest, src, len);",8e4587614949fa66048cfb7f2c18f117f914b9833a35ebcacdf241f1a142ed67,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_session.c,527,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy((*session_ptr)->user_recv_ext_types, option->user_recv_ext_types,",e549a84f94d9beec240f8b807912cf389f95d1c205f7eaf39c1dcddb83a5e062,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_session.c,7100,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(opaque_data_copy, opaque_data, opaque_data_len);",3cf9cb346bcfd9871e35476a8c3273371a98fd9be65e31e6f49ee580578c78d5,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/sfparse.c,1637,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy(o, p, len);",ff600ff5e7068053fad50b4dedbb0004998e680ceb9015a8a630f175e64ab0a8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/sfparse.c,1646,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(o, p, slen);",f6dfc76525cd758aa8d132bcb2f00940215d01c15cf1c217eba16259871cb5ba,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/sfparse.c,1769,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy(o, p, len);",ff600ff5e7068053fad50b4dedbb0004998e680ceb9015a8a630f175e64ab0a8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/sfparse.c,1778,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(o, p, slen);",f6dfc76525cd758aa8d132bcb2f00940215d01c15cf1c217eba16259871cb5ba,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/HttpServer.cc,1199,13,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,  auto fd = mkstemp(tempfn);,46129b389afd26a2e77b9620ca9cb35e930ee3975834bc671d99601ebbb2dca1,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/nghttp2/src/HttpServer.cc,1332,16,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    int file = open(file_path.c_str(), O_RDONLY | O_BINARY);",e6448760e928e5da465189bd346d7788be3b964de4561e7efbf46f10163188bf,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/HttpServer.cc,1963,12,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,  int fd = mkstemp(tempfn);,5118e0c4d861d4338a1e2ebcf2f0cfe73c9f9d178c279b6ff62c421e7047233c,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/nghttp2/src/comp_helper.c,105,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(cname, name, namelen);",7522620a38540eea89c8c1f9fc6f7e6968876a010ab219b800dd8cb055cdfa58,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/deflatehd.cc,246,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char line[1 << 14];,44fd915fbc9ce7f6e21fb35e2ce413889a47d71baf35c9f3599e1b7e16167c57,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/src/h2load.cc,1508,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(CMSG_DATA(cm), &n, sizeof(n));",ec03b5959732eb96d8624af619817bf5dad7c30e135740d960b647f5e56fd315,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/h2load.cc,2930,22,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    config.data_fd = open(datafile.c_str(), O_RDONLY | O_BINARY);",34ffdf9d1b2a97b19b6dd2750f33222718b715a17e0b9f29a7166acaf917c7fb,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/h2load.cc,2951,21,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    config.log_fd = open(logfile.c_str(), O_WRONLY | O_CREAT | O_APPEND,",64567ecabd76b12f8a7e46daf505a058f19563bfb5562741aa05d687194cbc4f,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/h2load_quic.cc,422,22,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    quic.qlog_file = fopen(path.c_str(), ""w"");",bd96f9e710b480da1d298a0fd2f021d346f0b90c0515e33065b64a89748fe4f5,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/h2load_quic.cc,797,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&p.remote_addr.su, remote_addr.addr, remote_addr.addrlen);",a84127e8c090b770783ee561cbc5f5ff6ca00ef8f82f9239002c7d445c118d66,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/memchunk_test.cc,131,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buf[16];,f8bd72609fcf9e1123e74ed2ab5aa38f49593871255165d3086feea1a0957480,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/src/memchunk_test.cc,162,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buf[16];,f8bd72609fcf9e1123e74ed2ab5aa38f49593871255165d3086feea1a0957480,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/src/nghttp.cc,2294,19,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"        outfile = fopen(config.harfile.c_str(), ""wb"");",bbf171b0c67fdabe89bd3985a3456c682f87024e44e6b94f851dd133999e812a,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/nghttp.cc,2442,19,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,        data_fd = mkstemp(tempfn);,a8435d73e6b6338f4af624a888b7b6cebecc3a07aedfe9456528ccf6687889b0,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/nghttp2/src/nghttp.cc,2481,17,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"      data_fd = open(config.datafile.c_str(), O_RDONLY | O_BINARY);",3f6bb9b4c6bb705121c2e78539e54e3abb898349eed5d698d8feb2847fb24a38,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx.cc,386,13,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,  auto fd = mkstemp(temp_path);,ac034aa8d0900cbcf0cb1d63566c0d8433ce61f48c2ab54f5c29df965ec1f73c,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/nghttp2/src/shrpx.cc,3684,23,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  suconfig.argv = new char *[static_cast<size_t>(argc)];,2f977482415ba507f4556f7bbe347ce7f3fdde66f355c68820da77ac7e64e24e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/src/shrpx_api_downstream_connection.cc,239,11,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,    fd_ = mkstemp(tempname);,76a1b9e8859dfec62bf4d3477a330558eea963741d15c2a3212ea555af76b474,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/nghttp2/src/shrpx_config.cc,327,5,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    open(filename, O_WRONLY | O_CLOEXEC | O_CREAT | O_TRUNC, S_IRUSR | S_IWUSR);",83133009126ccdafffa5aeb16ea089113b0ae5a847d7bf413d8d1fa15a9c29e4,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_config.cc,329,13,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  auto fd = open(filename, O_WRONLY | O_CREAT | O_TRUNC, S_IRUSR | S_IWUSR);",b7fd1eafff6ba889cd615a6312a338fbf50816f1975f490950112f72302db58e,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_config.cc,1436,13,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  auto fd = open(path.data(), O_RDONLY);",90ebd1eca9be87b295a3d04e600721fcc880db372d7258a8b8042b9ba9fe29ae,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_config.cc,1569,15,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    auto fd = open(path.c_str(), O_RDONLY);",30a6ea970482609a62a748935bebf34cb94793bab44168c5787fa96bb9e37a39,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_config.cc,4808,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&addr->su, res->ai_addr, res->ai_addrlen);",9452d4e440741eaeace71bf3ae01d0c5c81d6418ade5966e77e89e4eff39b8c2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,180,14,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,  auto fd1 = mkstemp(file1);,1bedac1214e6577f147d0ef24b949e077648a2c25c6f2d892b258568165466c9,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,185,14,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,  auto fd2 = mkstemp(file2);,9e02dacd684f7f4e128cf1daf4c6478ce79e830d2f2c6bee15bf859e614a622f,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,218,14,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,  auto fd1 = mkstemp(file1);,1bedac1214e6577f147d0ef24b949e077648a2c25c6f2d892b258568165466c9,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,226,14,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,  auto fd2 = mkstemp(file2);,9e02dacd684f7f4e128cf1daf4c6478ce79e830d2f2c6bee15bf859e614a622f,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/nghttp2/src/shrpx_connection_handler.cc,794,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&pkt->remote_addr.su, p, remote_addrlen);",499eee4e8180a4f184921775baba1a223a2f989fd658d0573a41420479b77082,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_connection_handler.cc,814,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&pkt->local_addr.su, p, local_addrlen);",239d3e3046b9ca59b5e2bbcfb84ed2578d5b03fa6a5a4abf96d5dff78ccdbaff,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_dns_resolver.cc,241,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(result, &result_, sizeof(result_));",0c69e9ac8b7a7fa2a86792c9ef94e1ff38ba7d9dc36afe375b2ac6caf8d39a22,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_dns_tracker.cc,248,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy(result, &ent.result, sizeof(*result));",d8b46fb724e9c5556ffcab932d187db6b68f5cd6400180930c84ad4edf2e251b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_http3_upstream.cc,1909,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&p.local_addr.su, path.local.addr, path.local.addrlen);",f12695faec162ff3631212f6db6f6ee829e00c7b143565121cc7baec24755b8c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_http3_upstream.cc,1910,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&p.remote_addr.su, path.remote.addr, path.remote.addrlen);",59b13eada7d9dc4fd39f07e9b8d9a5f892f71dce91a7149341188085db2326e6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_http3_upstream.cc,2896,16,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  while ((fd = open(path.c_str(), O_WRONLY | O_CREAT | O_TRUNC | O_CLOEXEC,",faac3757ef5bc001c96f7d858b6caaee1d4624b1eb9f0c8d669536fc566c4b26,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_http3_upstream.cc,2901,16,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  while ((fd = open(path.c_str(), O_WRONLY | O_CREAT | O_TRUNC,",bad9ebcd40657b0c389f0e0b11969b5d3e124c0e1e79bc8d89ef4a147b896200,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_log.cc,890,13,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  auto fd = open(path, O_WRONLY | O_APPEND | O_CREAT | O_CLOEXEC,",d8f67d9f33db6bc052367c7449b18f3e32af8a40439a9ec17c1bda16e3cde47d,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_log.cc,895,5,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    open(path, O_WRONLY | O_APPEND | O_CREAT, S_IRUSR | S_IWUSR | S_IRGRP);",49cbd8727b97250bde766c6ffcc9d92c682cec3fafabff4db4b34ef33a6d964a,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_mruby.cc,147,17,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  auto infile = fopen(filename.data(), ""rb"");",2f25adfed49f847da713fdfa5d9ebb792d300944000cd945972d83180e9e311d,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_quic.cc,107,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(CMSG_DATA(cm), &pktinfo, sizeof(pktinfo));",b001fbb454a6c346e6af28ffb043658a6ab5a36d58b7acb7d50543abccc275f7,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_quic.cc,121,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(CMSG_DATA(cm), &pktinfo, sizeof(pktinfo));",b001fbb454a6c346e6af28ffb043658a6ab5a36d58b7acb7d50543abccc275f7,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_quic.cc,137,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(CMSG_DATA(cm), &n, sizeof(n));",ec03b5959732eb96d8624af619817bf5dad7c30e135740d960b647f5e56fd315,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_quic.cc,145,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(CMSG_DATA(cm), &tos, sizeof(tos));",e4872104782b4827e24b06846e5bbbcf91516b8331e041a48375797eb56b91ff,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_tls.cc,171,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(buf, config->tls.private_key_passwd.data(), len + 1);",98b9a8ace66c77762160cd45cf551346bc81f7fa1c39b705ecead02b61fb0f1d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_tls_test.cc,222,12,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  auto f = fopen(path, ""r"");",6f5a74eafd2400c1955e7e721c7d0fb0008a106f94a62662674539549c6e4451,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/shrpx_tls_test.cc,248,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&addr.su, res->ai_addr, res->ai_addrlen);",c9e017c24133732376ab6ceade031068454dcc3c671a951476d2719ea34fc2dd,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_worker.cc,1422,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&faddr.sockaddr, rp->ai_addr, rp->ai_addrlen);",19d251979f8acdaf435b73008e2cb08b5abe00fd670355847a378a69ad97ec8c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/siphash_test.cc,55,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(key.data(), key_bytes.data(), key_bytes.size());",12927c253d4d6e123653d2c88f634f334ce1b54b2e16e6594c685f88caaba217,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/tls.cc,210,15,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  keylog_file.open(keylog_filename, std::ios_base::app);",3d046d1b7a215808ef992fc3d3dbee3a2376c8bac5e07b82147359a3c2130405,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/nghttp2/src/util.cc,97,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char addr[INET6_ADDRSTRLEN + 1];,1607bbdd249e339ed2f09f48c4f8233788ea95d23d72a6e75ee51d8d66dd4c43,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/src/util.cc,954,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(path, argv0, len + 1);",f7c65717ffb2b9f0a4bf337bfb74c9c0f20f391518abfdb7bacb4ed345391051,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/util.cc,961,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(path, cwd, cwdlen);",963dba5173db2aa920d8f3121b62f15686894e22c76d995eb06aeaafa4593d15,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/util.cc,963,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(path + cwdlen + 1, argv0, len + 1);",0235a2b3d7e4f13a45f574eb6277868ac34178c5dc648d2a499dfd2ee6afaafc,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/util.cc,1606,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(buf, &x, sizeof(uint16_t));",e507f808fc08bbeb3c296d32f8c46e31aa561a19938e283e60867cf5d470d5c3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/util.cc,1611,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(buf, &x, sizeof(uint32_t));",3b13bba0ae91c955215ab0502c0e5cbc1671b89a25a36d37d7777e5e09ff092a,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/util.cc,1616,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&n, data, sizeof(uint16_t));",b3cc201c41a9bfb7fa5fac410a889f91983ffbf125907743ce80572ca6787470,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/util.cc,1622,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(&n, data, sizeof(uint32_t));",f18b7b9b1a58ea0899092bef54a45b1dc970b01c14f72392f15d02e8480a6d08,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/util_test.cc,406,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/tests/failmalloc_test.c,70,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(df->data, buf->pos, data_length);",08454844fa660ccbc4d22217ddfcaad7589a3ff22fcb94706dc875970adc82b8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/failmalloc_test.c,95,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(data, df->datamark, wlen);",f1803de5698f3caa73e02b8aa867d4643789eaf5f631d46f0ab238f70cd99ed5,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_assertion.h,43,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(a, sa, alloclen);                                                   \",b7dd5fce417bf7a2ab5ea060b8e4d2c651deda8b0ade494facda5483d2ac426a,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_assertion.h,44,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(b, sb, alloclen);                                                   \",137451929f9ad2212ab866c0ba2b4fd4db5cf5dd1c09b49c1df3de46b1450ea8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_frame_test.c,208,34,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    big_hds[i].namelen = strlen((char *)big_hds[i].name);,10cd47d4f93a9a8d96d4a041fbf30091b7b403c38334e93bc66f527511d1f424,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/tests/nghttp2_frame_test.c,412,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(opaque_data, ""0123456789abcdef"", opaque_data_len);",72b22768b14f1e790ae783243074b09c0dcc729e77bb8c4a25b63307a3ceeefa,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_hd_test.c,727,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(nv.value, &i, sizeof(i));",f69422ef1bee50d3e3ed2969d86fa04fa5666c38d861147371e16deeb83b9a2d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,305,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(data, df->datamark, wlen);",f1803de5698f3caa73e02b8aa867d4643789eaf5f631d46f0ab238f70cd99ed5,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,333,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(acc->buf + acc->length, buf, len);",a369acf233b4ad40ac97e146a56ebf97749a5e0c097cde38482d049d2afbfabb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,574,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(acc->buf + acc->length, framehd, NGHTTP2_FRAME_HDLEN);",27f1936c351b7b71fcd3bfa9c60626ec0e0eebfc538168b6ef8a63991165a2df,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,762,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(buf, p->pos, nghttp2_buf_len(p));",6b0f33d3ebc39592406da724966956b93da808c7ec5a716b9d2ca324851acf83,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,1446,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(data, buf->pos, NGHTTP2_FRAME_HDLEN + 1);",731e015f19a3268df9f4b9dd4bf944c5411b2ee7ebb9129a46b2e5ce60286025,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,1459,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(data + datalen, buf->pos, cont_hd.length);",0673fa4f9de3aa3233b31c9cf05b25f21a56f6992b1196ec4bac65ee1e11df66,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,1470,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(data + datalen, buf->pos, cont_hd.length);",0673fa4f9de3aa3233b31c9cf05b25f21a56f6992b1196ec4bac65ee1e11df66,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,1509,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(data, buf->pos, NGHTTP2_FRAME_HDLEN);",a496dd7b0ea5a9f3e436e4b671d26a908e215df4b9e10a48a0d27b39ff0b8374,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,1526,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(data + datalen, buf->pos, cont_hd.length);",0673fa4f9de3aa3233b31c9cf05b25f21a56f6992b1196ec4bac65ee1e11df66,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,1566,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(data, buf->pos, nghttp2_buf_len(buf));",8e021be80c672140cec51e7cf06903a9a74b95e8efffe046e2a42749c94ca060,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,1579,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(data + datalen, buf->pos, nghttp2_buf_len(buf));",3b5598e46ebcb9bad3e124c8013c3a694a1941c77c1afb6d923f282816cc068d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,3153,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(large_field_value, field_value, sizeof(field_value) - 1);",3a2217a32ce84840703a07e813cafd5cb2cefe7655bc23128d6bfae2609ee395,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,5005,35,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    nv[i].namelen = strlen((const char *)nv[i].name);,20727681a505bea5a997c779ac0e18bd76aa71505d11248a5b7bd8e9329c6819,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/nghttp2/tests/nghttp2_test_helper.c,138,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(onv->name, nv->name, nv->namelen);",650900f13d3527f50b3c40959777d92628305395bd6dd244af69eb6835ceeb16,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/tests/nghttp2_test_helper.c,144,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(onv->value, nv->value, nv->valuelen);",6aed05af876a5d35622111fa6d6e597537969dcda9e7abd9a53cee04dd304641,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/examples/client.c,77,5,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"    strlen(VALUE),   NGHTTP2_NV_FLAG_NONE,                                     \",0a62dc8331aed87c5470b6089b9c7c7597bcee18e3bd32091093c938099565a8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/examples/client.c,606,9,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  len = strlen(uri);,1dcae45d950771fcd9cbb1f8d1aa3cbbcddd575d3235ec2e26ec099dd0254bda,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/examples/libevent-client.c,556,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"  rv = urlparse_parse_url(uri, strlen(uri), 0, &u);",58964a5a91f2278f1ab1dfc4a96913ac5be4a4b54fd3943f6fe550faf6188520,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/examples/libevent-server.c,323,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  size_t slen = strlen(s);,90d4eb9920d303ed41ae338a3de2f670823871a25a16b452efb7c72de210b738,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/examples/libevent-server.c,324,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  size_t sublen = strlen(sub);,6248bf6402ee4306012bf072a9a214a05e22546c7cb86949612be2f51a272f91,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/examples/libevent-server.c,385,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  while ((r = read(fd, buf, length)) == -1 && errno == EINTR)",912f80cd5e0e96c7569e43c3d68c62c8bec37c558fd8d789c3bb032c1c44ab6d,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/lib/nghttp2_session.c,236,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,    debug_datalen = strlen(reason);,a4cf5c5ca31836da38c012699572a71543bab3b6f11c10691c695a078574a109,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/HttpServer.cc,641,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  while ((nread = read(fd_, buf.data(), buf.size())) == -1 && errno == EINTR)",9f0b7fed9af2755ee9f20908a8ccd3f57081579248a9b6a56080f13df35b92d3,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/deflatehd.cc,166,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,      nva[i].namelen = strlen(name);,8e3a8ab4b8ad61b746af09074d34a6f5fd59a98ad2610cb09c2e2d072ccf31bd,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/deflatehd.cc,174,25,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,      nva[i].valuelen = strlen(json_string_value(value));,92a46688d4ac9af92b2144aeb55c26dde6d32e31b974f493b95444752e0c9a2a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/deflatehd.cc,283,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,      nv.namelen = strlen(line);,b0dac2a91bfbbae6c51a09888ff397e5f0b99948ac6b468b077c2d0879682b4f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/deflatehd.cc,284,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,      nv.valuelen = strlen(val);,015d496d88bbd16e3461e436ae601ba66b585a73db3ad89d1e381bc90b34a94e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/h2load.cc,1287,21,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    while ((nread = read(fd, buf, sizeof(buf))) == -1 && errno == EINTR)",40861ff8b66ae29fd70059a5160b1c1ee033ee9947804c613cc3309257a51495,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/http2.cc,1031,24,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"         !std::ranges::equal(s.substr(0, pat.size()), pat, util::CaseCmp()) ||",bb3332d6041e14a72581dc36c9fe263cec1649cef0f1054a01ef44b71236f190,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/http2.cc,1049,25,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"    return std::ranges::equal(s, pat, util::CaseCmp());",ecc084e5a18a593126f22f80a8f88bd4d8bb4796f29a51bff3597bbe03473cc2,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/http2.cc,1055,25,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"    return std::ranges::equal(s.substr(0, pat.size()), pat, util::CaseCmp());",308d3c5906718edd0eb1a5672655f62885b20f458b82b3db97188aec1c071366,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/inflatehd.cc,134,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  auto inputlen = strlen(json_string_value(wire));,fa2128c066d2bedba5109ffcf68b1177a1037610e2e9ed418d38e3997b15e032,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/nghttp.cc,734,21,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    while ((nread = read(fd, buf.data(), buf.size())) == -1 && errno == EINTR)",dd9fe2c9a78510dbdcb54709616d3ac0cdabc8ca0a24d95ede281cdc63b979ef,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/nghttp.cc,2455,26,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","          while ((rret = read(0, buf.data(), buf.size())) == -1 &&",14eb6c8cea4a686079006a438fa7064ecfdf581bdc2e2baac55959248d066966,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/nghttp.cc,2985,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,              strlen(optarg)) != 0) {,80e3c99e55744082a6e49b70efc255fcb459ddf8d8872ab3184fb4fba69675e4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/nghttpd.cc,56,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  auto optarg_end = optarg + strlen(optarg);,382729037b8295d22bde4427d7838e7498783c4e9f755fcbdd46403ee382e22b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx.cc,854,9,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,    if (strlen(path) == 0) {,2163216d749660da927b6b5dbaa8857fa116847bc1435746e9e7b1458762a7fc,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx.cc,923,25,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,    auto envend = env + strlen(env);,e4b6475eb6862eeb0ffb82a1dd369f083b31f66fac786055d59033600275aee0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx.cc,1212,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  while ((nread = read(w->fd, buf.data(), buf.size())) == -1 && errno == EINTR)",449df7c983148db6b1a9f242c27c314036a83d8a34885e62156a886cf21beea8,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx.cc,2221,42,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      << config->conn.upstream.ratelimit.read.rate << R""(",b873bdf7d18cdda34f2579f47f2dbb612497a539c3a4f817df365e7be278230e,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx.cc,2227,42,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      << config->conn.upstream.ratelimit.read.burst << R""(",35926fe9d56e704730c640c6070489f4c5e30fdfdb41b1471fb7b31b54c3d0fa,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx.cc,2357,62,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      << util::duration_str(config->conn.downstream->timeout.read) << R""(",e45727949752a1c9ced89fc6e64c6337a64c40cbfbd5a8a17e4c041f8c59281b,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_client_handler.cc,465,49,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","          get_config()->conn.upstream.ratelimit.read, writecb, readcb,",b8bae5e611d36d9824edf39ec33b146e2253ae5d263c3f02fb367c5ebc2f11e1,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.cc,217,7,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    f.read(buf.data(), static_cast<std::streamsize>(expectedlen));",41521b8ef61268fa1d56c5c332e83d94e181995e4d4f7eb7dfae4ec949c918e1,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.cc,1323,23,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",        if (g.timeout.read < 1e-9) {,b2b16f694cefa25e78657aef049020a428a119926b8fe9d516cb20ef6a478d76,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.cc,1448,14,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    auto n = read(fd, buf.data(), buf.size());",5362bcc2fa69db7bd61d7e136cc9a7df3cafc1e3c8a09b8fc2af6f08807797e6,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.cc,1587,23,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      while ((nread = read(fd, buf.data(), buf.size())) == -1 && errno == EINTR)",dd9fe2c9a78510dbdcb54709616d3ac0cdabc8ca0a24d95ede281cdc63b979ef,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.cc,3089,61,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    return parse_duration(&config->conn.downstream->timeout.read, opt, optarg);",35fb5456e2de1f76009b310ab267b849ea2ad08bafc33a0cd6f5680a47abc344,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.cc,3383,66,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    return parse_uint_with_unit(&config->conn.upstream.ratelimit.read.rate, opt,",b58b2ea7676bf8a684f49eec766645f56882e9830a6ceb53b79017d6bf2eda79,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.cc,3386,66,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    return parse_uint_with_unit(&config->conn.upstream.ratelimit.read.burst,",6de8391277a3aba22d148a8300d17ac37e0a766b017eb29d240118c8e15600c8,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.cc,4749,17,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    if (timeout.read < 1e-9) {,e8c0940c2b698afe458f751ea5faaccfc5416517e7e0e099519ab46fce453ca6,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.cc,4750,45,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      timeout.read = downstreamconf.timeout.read;,8390156ff9303b8d73cfa7326599ff07b60328f0188d5ddd14c7e46164efd67e,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.h,583,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    ev_tstamp read;,9d7fbe39a2de4b2a2fd844be7dfe89591a58f1e5914d41c9581c9c86c741c455,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.h,965,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    ev_tstamp read;,9d7fbe39a2de4b2a2fd844be7dfe89591a58f1e5914d41c9581c9c86c741c455,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config.h,1015,23,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      RateLimitConfig read;,5a2d3e25b1bdb97f928de185ddae992ca546e4a17d13f0eea80401f518665707,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,200,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(key->data.name, ""0..............1""sv));",c98b2e7e61b4b1e59e76c1a52d381813f45fb17ab1b2c1ecfb64b906f559f204,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,201,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(std::span{key->data.enc_key}.first(16),",e6752778005ac3e5d86e24cf53afe8fe49790a351f211780751e45b7e2d1cff2,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,203,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(std::span{key->data.hmac_key}.first(16),",8113d4d3e3b2b5ccd2160c51347a242f3a2a49123f60ace9688f82abed55b880,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,208,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(key->data.name, ""6..............7""sv));",84a9ce3f54558a74d2394653789829a2158fee6d97fe18030d7362d68ba8907b,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,209,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(std::span{key->data.enc_key}.first(16),",e6752778005ac3e5d86e24cf53afe8fe49790a351f211780751e45b7e2d1cff2,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,211,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(std::span{key->data.hmac_key}.first(16),",8113d4d3e3b2b5ccd2160c51347a242f3a2a49123f60ace9688f82abed55b880,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,244,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(key->data.name, ""0..............1""sv));",c98b2e7e61b4b1e59e76c1a52d381813f45fb17ab1b2c1ecfb64b906f559f204,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,245,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(key->data.enc_key,",d0be9236afb10813b2f1cf7ad7ac624123c46b1d84bc2ce3219c453d514ddf22,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,247,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(key->data.hmac_key,",a75f9b066fc6ab3c5934c66e4e693c5e70fb0db6d5706b13d486028645f53db9,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,251,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(key->data.name, ""6..............7""sv));",84a9ce3f54558a74d2394653789829a2158fee6d97fe18030d7362d68ba8907b,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,252,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(key->data.enc_key,",d0be9236afb10813b2f1cf7ad7ac624123c46b1d84bc2ce3219c453d514ddf22,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_config_test.cc,254,28,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  assert_true(std::ranges::equal(key->data.hmac_key,",a75f9b066fc6ab3c5934c66e4e693c5e70fb0db6d5706b13d486028645f53db9,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_connection.cc,774,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  while ((nread = read(fd, data, len)) == -1 && errno == EINTR)",757c4ab3998e7cc93d4bdeb277c55f106e03c84d78317d7e8fb3619fd793118d,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_connection.cc,794,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  while ((nread = read(fd, data, len)) == -1 && errno == EINTR)",757c4ab3998e7cc93d4bdeb277c55f106e03c84d78317d7e8fb3619fd793118d,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_dns_resolver.cc,37,43,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","void sock_state_cb(void *data, int s, int read, int write) {",6d418fece5d9f1ebfec826abe8f58cb1b48e9aba2cbb97627221c86d849f88bd,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_dns_resolver.cc,44,7,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  if (read) {,d58cfa001b6e568413fb478c10193215c168a01046650ab3c433e1e18c5bfad5,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_http2_session.cc,195,74,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","          group->shared_addr->timeout.write, group->shared_addr->timeout.read,",fb292dbefb29dee276a597eefe76605aa9ec2cbbfe3fce8fd99f3b7540bd4c55,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_http_downstream_connection.cc,214,74,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","          group->shared_addr->timeout.write, group->shared_addr->timeout.read,",fb292dbefb29dee276a597eefe76605aa9ec2cbbfe3fce8fd99f3b7540bd4c55,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_http_downstream_connection.cc,438,59,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    if (conn_.read_timeout < group_->shared_addr->timeout.read) {,153efd6d2b7d60a8c095ba7063142c1acc5d3928903f1e3ad075bfadf4cb3624,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_http_downstream_connection.cc,439,57,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      conn_.read_timeout = group_->shared_addr->timeout.read;,78a4d6059c206a1da7c9069a50987702a3b76d819fdd6ab6c95ce448cb135153,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_http_downstream_connection.cc,442,51,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      conn_.again_rt(group_->shared_addr->timeout.read);,2c6dc985e7a2ef8346bc3d35d2e88abcb67dc69a6f3cfc408d2b6e79266a7048,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_live_check.cc,107,52,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","          worker->get_downstream_config()->timeout.read, {}, {}, writecb,",2cca67dd51424d2632b0bd621149c7ecdf012534abecaad0815b97096c5c4cbc,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_tls.cc,470,22,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"    if (std::ranges::equal(key.data.name,",8a87a8dd2b2dd9782e1e65727314de91c2f066898314157a0af1d22d880b91a9,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_worker.cc,169,31,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  std::get<7>(dkey) = timeout.read;,dcbed635a1125d3bd8f7b7ce49000a7e0f935c87bd2cbba9a0507a01bace79b7,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_worker.cc,322,45,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    shared_addr->timeout.read = src.timeout.read;,b165830f68b1c68ce1609ecf1a7314c22004b7b6b0eec19321f6ba311c139904,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_worker.cc,425,24,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"          std::ranges::equal(shared_addr->wgs,",d4ee42fa735c6c0aecb9e2d5bb8eca0c37aad1f343f7166bed9dc767edd4773f,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/shrpx_worker.h,246,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    ev_tstamp read;,9d7fbe39a2de4b2a2fd844be7dfe89591a58f1e5914d41c9581c9c86c741c455,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/shrpx_worker_process.cc,163,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  while ((nread = read(w->fd, buf.data(), buf.size())) == -1 && errno == EINTR)",449df7c983148db6b1a9f242c27c314036a83d8a34885e62156a886cf21beea8,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/template.h,319,23,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  return std::ranges::equal(lhs, rhs);",56869fafe8a428b02a203b3dafb2e13f32e97b1ad7c016501ddfa7c305b39d38,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/template.h,333,23,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  return std::ranges::equal(lhs, rhs);",56869fafe8a428b02a203b3dafb2e13f32e97b1ad7c016501ddfa7c305b39d38,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/tls.cc,198,56,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"  keylog_file.write(line, static_cast<std::streamsize>(strlen(line)));",17bfd423bbb0e5e136f286b054c1bd4997b67d3f3cfcaa54e3e960d0bd645121,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/util.cc,98,3,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"  strncpy(addr, src, sizeof(addr));",2e9e63979c5a970d22b6cc57232ae969faf088d4745e6c2b1a69a55bcc0dad68,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/nghttp2/src/util.cc,945,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  auto len = strlen(argv0);,680cbc1c5af39320266a65027bb22384b422330e4afe2ee7be347ca97247a90c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/util.cc,956,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,    auto cwdlen = strlen(cwd);,da281dc5de7ede420da37a4576da4096e00a48a27fc7fa54f0fe4d4ef172039f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/util.cc,991,22,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"    if (std::ranges::equal(key, as_string_view(p, key.size()))) {",d05db3996b2e743c3ea8f21d3fc003d2c041cd972140de0cb688b34d56cb275e,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/util.h,650,23,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"         std::ranges::equal(std::views::take(std::forward<R1>(s), prefixlen),",36db88c5e93881a68bc8280e1351138af30eae0540b467dda21bde678b90d7ae,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/util.h,664,23,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"         std::ranges::equal(std::views::take(std::forward<R1>(s), prefixlen),",36db88c5e93881a68bc8280e1351138af30eae0540b467dda21bde678b90d7ae,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/util.h,673,23,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,         std::ranges::equal(,35baa841433aa6e6cbf9c5800a592da69d01845df1c5c53c453586b6b2dfe654,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/util.h,683,23,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,         std::ranges::equal(,35baa841433aa6e6cbf9c5800a592da69d01845df1c5c53c453586b6b2dfe654,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/util.h,690,23,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  return std::ranges::equal(std::forward<R1>(a), std::forward<R2>(b),",96c7934fbbf9e5b53df53c1e2be52f2472cd23bb555f346271904c7933fa1043,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/src/util.h,696,23,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  return std::ranges::equal(std::forward<R1>(a), std::forward<R2>(b));",026a09ce1b3b3fbaa836d8c411677e93e66af3108f6f8e6e18b461e659aa5135,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/tests/nghttp2_frame_test.c,63,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  nv.namelen = strlen(name);,9f54516ba16f055fb9c959ad26003f2ccdc1decd53821ff94460557ad65ead8c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/tests/nghttp2_frame_test.c,64,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  nv.valuelen = strlen(value);,8dfed0253bac23a3ea976ccf67ec248aa2866a32f01a51685de65bf790ff8ece,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/tests/nghttp2_frame_test.c,208,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,    big_hds[i].namelen = strlen((char *)big_hds[i].name);,10cd47d4f93a9a8d96d4a041fbf30091b7b403c38334e93bc66f527511d1f424,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/tests/nghttp2_frame_test.c,660,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"  bignv.namelen = strlen(""echo"");",be43484f563131ca853821a54eecbcfe08750d7f096e818ba3ad97651f227483,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/tests/nghttp2_hd_test.c,492,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  nv.namelen = strlen((char *)nv.name);,b8c6a3af07331afe22a3f1dcc1482f1d86af33320eb24c03cb27d58cb060030c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/tests/nghttp2_hd_test.c,715,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  nv.namelen = strlen((const char *)nv.name);,bf733b8cbad1579cd7e760ff4109094132d191d1dd7d37485bc5b9730dec2ffa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,5005,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,    nv[i].namelen = strlen((const char *)nv[i].name);,20727681a505bea5a997c779ac0e18bd76aa71505d11248a5b7bd8e9329c6819,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,8818,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"                                     strlen(""u=3""));",dc4b1a289d5dbf3e78c4a30a638b5fa61b996cf13e6ac00024aae465240dba3f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/nghttp2/tests/nghttp2_session_test.c,8847,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"                                     strlen(""u=3""));",dc4b1a289d5dbf3e78c4a30a638b5fa61b996cf13e6ac00024aae465240dba3f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
