File,Line,Column,DefaultLevel,Level,Category,Name,Warning,Suggestion,Note,CWEs,Context,Fingerprint,ToolVersion,RuleId,HelpUri
repos_cpp/libgit2/src/libgit2/repository.c,2631,8,5,5,race,chmod,"This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).",Use fchmod( ) instead.,,CWE-362,			if (chmod),d7c38e575be12e9cac9ff6cf52c7f46cfa5f2b4cedc617601272acf1960091d4,2.0.19,FF1033,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/src/libgit2/streams/openssl_dynamic.c,30,50,5,5,buffer,gets,"Does not check for buffer overflows (CWE-120, CWE-20).",Use fgets() instead.,,"CWE-120, CWE-20","int (*BIO_meth_set_gets)(BIO_METHOD *biom, int (*gets) (BIO *, char *, int));",2aba46dbde6fa2c614086b366b02296f1c10ac53f3e09172bdeb40fe1fd6ebda,2.0.19,FF1014,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl_dynamic.h,133,57,5,5,buffer,gets,"Does not check for buffer overflows (CWE-120, CWE-20).",Use fgets() instead.,,"CWE-120, CWE-20","extern int (*BIO_meth_set_gets)(BIO_METHOD *biom, int (*gets) (BIO *, char *, int));",c437703e287226ac60d322b8f07c86f85a7bb952a12eb3f845d91374f981bcb9,2.0.19,FF1014,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl_legacy.c,75,55,5,5,buffer,gets,"Does not check for buffer overflows (CWE-120, CWE-20).",Use fgets() instead.,,"CWE-120, CWE-20","int BIO_meth_set_gets__legacy(BIO_METHOD *biom, int (*gets) (BIO *, char *, int))",b6d259e4fade414836c094b6058fa778b6e2a1691e281ac92f285ef0e44a8b48,2.0.19,FF1014,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl_legacy.c,78,16,5,5,buffer,gets,"Does not check for buffer overflows (CWE-120, CWE-20).",Use fgets() instead.,,"CWE-120, CWE-20",	biom->bgets = gets;,65f0593d049796457ae5fc279444bd58089b4cd8e01800260da624b42c29e17b,2.0.19,FF1014,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl_legacy.h,50,62,5,5,buffer,gets,"Does not check for buffer overflows (CWE-120, CWE-20).",Use fgets() instead.,,"CWE-120, CWE-20","extern int BIO_meth_set_gets__legacy(BIO_METHOD *biom, int (*gets) (BIO *, char *, int));",cf4a2fe389958fe1fb9d9a9303f3b38e413e82253dc141ce1708b5eb0bade699,2.0.19,FF1014,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/unix/posix.h,40,29,5,5,race,readlink,"This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).",Reconsider approach.,,"CWE-362, CWE-20","#define p_readlink(a, b, c) readlink(a, b, c)",fc9c4a17abe65983eeef18e4d243932276ad8bffd342da3253be8b5b12569027,2.0.19,FF1035,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/src/util/unix/posix.h,74,23,5,5,race,chmod,"This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).",Use fchmod( ) instead.,,CWE-362,"# define p_chmod(p,m) chmod(p, m)",442caca6617ae56d6c16b05de0a3af13a71a18be2c018b8295be62c462fe2583,2.0.19,FF1033,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/deps/pcre/pcre_internal.h,99,20,4,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,#define DPRINTF(p) printf p,8178f0f924f45b0deb3ae32e61de373acec2ebd426c20d54bea6821305269228,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/deps/pcre/pcreposix.c,216,5,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"    sprintf(errbuf, ""%s%s%-6d"", message, addmessage, (int)preg->re_erroffset);",4671e254a2fb0a6bef7b3a93d78e75cb77e75c8af364ab5212d3468cdd9add89,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/zlib/gzguts.h,85,18,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#    if !defined(vsnprintf) && !defined(NO_vsnprintf),bc5bb6d0cb1b951fd5f55f4f8900f760759ee094bc5eaeef43b1b57cd1397c82,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/deps/zlib/gzguts.h,87,18,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#         define vsnprintf _vsnprintf,197887a60a134f995ecee3ce4d7828d57c205b73516fcb9707829cb59998439f,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/deps/zlib/gzguts.h,109,11,4,4,format,snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#  define snprintf _snprintf,9f7593fdd775e2003be6eaa1b64286effc84b869b196921410bc0814394c3afc,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/deps/zlib/gzguts.h,109,20,4,4,format,_snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#  define snprintf _snprintf,9f7593fdd775e2003be6eaa1b64286effc84b869b196921410bc0814394c3afc,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/deps/zlib/zutil.h,225,39,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,#  define Trace(x) {if (z_verbose>=0) fprintf x ;},8f0bdc31de64baa354438ef3558c107051682e9aac495902d807568411ed28aa,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/deps/zlib/zutil.h,226,39,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,#  define Tracev(x) {if (z_verbose>0) fprintf x ;},0a7aa57d6a6d0eb0ac13df81f5311ef7baa6037a3c24508122f3994522f9700b,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/deps/zlib/zutil.h,227,40,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,#  define Tracevv(x) {if (z_verbose>1) fprintf x ;},2237dbb4e8b18144071bea55ba90b4d0b23468af8fadecbb9eccba05a38e5d72,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/deps/zlib/zutil.h,228,48,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"#  define Tracec(c,x) {if (z_verbose>0 && (c)) fprintf x ;}",49d42ea47a4b5623f57d95be592333bc0d7ca8395af7188c532aee475a2354d6,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/deps/zlib/zutil.h,229,49,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"#  define Tracecv(c,x) {if (z_verbose>1 && (c)) fprintf x ;}",626f9d90d19e97f0d23dd37837f1c0bfee294a2824bce558f7c87381a9eca86b,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/examples/blame.c,84,2,4,4,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused).",,CWE-120,"	strcat(spec, o.path);",5c8194189d2d343bcdb086a6cdf292194eca9094ad34e4f58160c3c7b9c9bbc5,2.0.19,FF1005,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/blame.c,199,3,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"		sprintf(spec, ""%s..%s"", bare_args[0], bare_args[1]);",39aaefafa4b53fb8899b77c1405d5a0d43712cf77c2a081e120b8373c33f162a,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/common.h,48,9,4,4,format,snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#define snprintf _snprintf,194a915f111996f097c32cb39c273aa0eb69cf4c05382cee6ec1635f362440a9,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/examples/common.h,48,18,4,4,format,_snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#define snprintf _snprintf,194a915f111996f097c32cb39c273aa0eb69cf4c05382cee6ec1635f362440a9,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/examples/general.c,759,2,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"	sprintf(config_path, ""%s/config"", repo_path);",af57af876e8f732528a9e33baa9e492909e24720a5c629d00e999e530d6d167c,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/merge.c,241,11,4,4,format,snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"	msglen = snprintf(NULL, 0, MERGE_COMMIT_MSG, (merge_ref ? ""branch"" : ""commit""), msg_target);",776dd9cc186d842ce37468da0302be892eb6a928d265903dee061b4399222661,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/examples/merge.c,244,8,4,4,format,snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"	err = snprintf(msg, msglen, MERGE_COMMIT_MSG, (merge_ref ? ""branch"" : ""commit""), msg_target);",723caef5ec419a997b31d05b988bc5e7cb41fa34c5b54da11d7beeaca787360f,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/examples/stash.c,42,2,4,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"	vfprintf(stderr, fmt, ap);",381056f19c08f4331c17c78750842a683ae04a2ee42516551c66ce2e05d9807e,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/include/git2/common.h,71,56,4,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"# define GIT_FORMAT_PRINTF(a,b) __attribute__((format (printf, a, b)))",7f3884d9f9e7b238e0da9514cacce6d905abcf0490dafe217edb789e186927d8,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/src/cli/cmd_blame.c,194,4,4,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"			printf(""%s %"" PRIuZ "" %"" PRIuZ,",3d2ccf8d97e07f6bd8056d6d42cfd1dbd6b9d99adaad5009776099f8b1031804,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/src/cli/cmd_blame.c,200,5,4,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"				printf("" %"" PRIuZ, hunk->lines_in_hunk);",4e21a541618ba81e270f18f8196ed2c8b702751b63596a7b5d5575b9d067faad,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/src/cli/error.h,24,3,4,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"		vfprintf(stderr, fmt, ap); \",3ead38a0e624e74f529a76cf20775cf0f7fd401da20a7809e685fe4297538aaa,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/src/libgit2/attr.c,404,33,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,"	if ((error = system_attr_file(&system, attr_session)) < 0 ||",c5b98a1f3f3ed881319fc686111cbd5006e6055bbadf7cf4f874e4b8a4dea3e3,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
repos_cpp/libgit2/src/libgit2/attr.c,405,59,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,"	    (error = preload_attr_file(repo, attr_session, NULL, system.ptr)) < 0) {",a773ad9c0345f7801892fcec21f028c3c49fa8a25af035f4b6fba5bcdce6a152,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
repos_cpp/libgit2/src/libgit2/attr.c,458,19,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,	git_str_dispose(&system);,c8ff5c833bb22d55acf248cce18926234115121b2b64e62b1763086f4cd5a0a5,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
repos_cpp/libgit2/src/libgit2/blame_git.c,56,2,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"	strcpy(o->path, path);",391369f53172afefb9c373fdca5321479ecb4c38e22c4df2e4d61e307f84989f,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge_driver.c,191,2,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"	strcpy(entry->name, name);",4624b0db65e86c74be2d85be31153eef82b4533c45567f7e44f74bcc1d4be6ae,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/sysdir.c,68,3,4,4,buffer,wcscpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,Consider using a function version that stops copying at the end of the buffer.,,CWE-120,"		wcscpy(mock_registry, mock_sysdir);",cc3b27cd46ec093296188c1a66b1b1c84d40db23ee35ddf5899214bf30adb20d,2.0.19,FF1003,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/sysdir.c,123,3,4,4,buffer,wcscpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,Consider using a function version that stops copying at the end of the buffer.,,CWE-120,"		wcscpy(out, mock_registry);",8a0ad6bfeb12da02c94dd527ceff5ab2bd33bc9dc8cb15c068e7f267a25e8a3d,2.0.19,FF1003,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/unix/posix.h,57,33,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"#define p_vsnprintf(b, c, f, a) vsnprintf(b, c, f, a)",fe15ce6193bf14a1476869c1c5cbf5ad9ee60d62a152e3770e9d6319221adeb5,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/src/util/unix/posix.h,58,20,4,4,format,snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#define p_snprintf snprintf,58329dc638d66f353e002eea73da701c6d25d539cebafd539bf5b22d9f69dc38,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/src/util/unix/posix.h,61,23,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"#define p_access(p,m) access(p,m)",14cbedcd43e72232514fd75ef44e28cea74547027e7a2c8e7003d64809c8354a,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/libgit2/src/util/unix/realpath.c,27,6,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"	if (access(result, F_OK) < 0) {",56a382b62f26bc9eeb11916f97cd72a835abacb8a7d8277ba0c679a8c372c017,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/libgit2/src/util/win32/path_w32.c,542,4,4,4,buffer,wcscpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,Consider using a function version that stops copying at the end of the buffer.,,CWE-120,"			wcscpy(dest, target);",ac7f266231b3000a9f4202ffa5966002feb94e6fd6377b7c16a941ac9612665b,2.0.19,FF1003,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,461,8,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,	DWORD access;,0335b6373563f5e2d00f4b377bacc4c789af666bbca99897ee9be6d1c37b5fce,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,521,42,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"	HANDLE handle = CreateFileW(path, opts->access, opts->sharing,",b106d1ab645fe59a0b3fa74501f0a341f320fc5acaeb47d078c0d6a188165b67,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,870,9,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"	return vsnprintf(buffer, count, format, argptr);",a154ff68509ab39741fd51cebec92585cf7233392e25265e6839e26fbe44b4f9,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,382,3,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"		sprintf(buf, ""LEAK CHECKPOINT %d: leaks %d unique %d: %s\n"",",863610b0ee240e57ae2c24b36c1c1a184804d8ee1be11b77ab56a3a4dd1db92a,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,386,3,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"		sprintf(buf, ""LEAK SUMMARY: TOTAL leaks %d de-duped %d: %s\n"",",cf3bcf736001581c5d47be0f9c78175c8e819c660204dd717063a1da343314d7,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,394,4,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"			sprintf(buf, ""LEAK: %s leaked %d of %d times:\n"",",6e225cd87c4f2426a75f565065bad06325237b7c302a489206886bdfb5a255e2,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/w32_util.c,41,2,4,4,buffer,wcscat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,"	wcscat(dest, suffix);",0d9cc613b9449ea2976b253cbbbce0a75f5297b1dc5600a07ebdb859c009f2f8,2.0.19,FF1006,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar.c,57,10,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,#	ifndef access,ef3a71432fa68e951355d716238036e44c937e3da26672f246e3662dbc905d6e,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/libgit2/tests/clar/clar.c,58,11,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"#		define access(path, mode) _access(path, mode)",7d72aeae575e1ae9eac7a51d5436ec974afac2a9ca91ca1cf696cfaa43ffc884,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/libgit2/tests/clar/clar.c,80,22,4,4,format,snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#		define p_snprintf snprintf,185c916e2e6bc2686bd792fea8cc2dc5a8fb46931d249a05a3c461c7178b3339,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/tests/clar/clar.c,86,21,4,4,format,snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#	define p_snprintf snprintf,1c96798230453d371c8db0ea97d078f2ace29e0f37807564dfe1a4c1280db0a6,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/tests/clar/clar/fs.h,18,27,4,4,buffer,wcscpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,Consider using a function version that stops copying at the end of the buffer.,,CWE-120,"#define wcscpy_s(a, b, c) wcscpy((a), (c))",5e90849550f113d23dfa7cc5fc8845e81b6febc052017c04c1c2c53cd25da77b,2.0.19,FF1003,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/fs.h,19,27,4,4,buffer,wcscat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,"#define wcscat_s(a, b, c) wcscat((a), (c))",3e6b2579cb1e5d32396f9701408be5b1cb2b82588a97ffcaa52b7ed80fc5e2fc,2.0.19,FF1006,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/print.h,75,2,4,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"	vfprintf(stderr, fmt, arg);",f3d57f7b7e49b1f89e8f101966d76422025b2ec24fd06e78f8a877882d2eb274,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/tests/clar/clar/print.h,161,2,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"	vprintf(fmt, arg);",0eb33fc5d7b9aadcee669d20b9081eb00df0b09c637c4674ebf1d6a33eb14649,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,28,6,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"	if (access(path, W_OK) != 0)",97ecd68430f1be6e1b03357ec8c7062b5c55517cbd410a694d6252654be8d82a,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,113,2,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"	strcpy(buffer, tmp);",670818030982107ac2cecf10359c3a66149654623b62521d39115eaacf56699c,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,168,6,4,4,tmpfile,mktemp,Temporary file race condition (CWE-377).,,,CWE-377,	if (mktemp(_clar_tempdir) == NULL),0f22586faf0b58facd46d2ba7b932270fe592e363048b2fa88506f3094dc6e5e,2.0.19,FF1038,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,232,2,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"	strcpy(_clar_sandbox, _clar_tempdir);",470dff54c8203b2878debcc1bdd970489d5707315e46e3a87f5dfeed6e1670bf,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,246,2,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"	strcpy(_clar_sandbox, _clar_tempdir);",470dff54c8203b2878debcc1bdd970489d5707315e46e3a87f5dfeed6e1670bf,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,441,3,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"		strcpy(buf, CL_COMMIT_MSG);",aca08e7ff5d1084071a7f9736b7a3ce40df90abbb3b639b587ff0df24d18bb8d,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/main.c,47,17,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,		int at_exit = system(at_exit_cmd);,cb7f4f377d4db48a1d451dd47b37e5e4b06573f75c4f3e33d65a7f9a2c4bbfa3,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
repos_cpp/libgit2/tests/libgit2/blame/blame_helpers.c,11,2,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"	vprintf(fmt, arglist);",62fd960b287731f3285720dd8f19eed914f6e4ed4913c67bcd001424711782a7,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/tests/libgit2/checkout/tree.c,918,2,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"	sprintf(path, ""testrepo/%s.txt"", longname);",1a0ca6f62a8ab5050160bc0cdca2dd0742a3b27764d27c2ff86b1f062a3100fa,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/iterator/workdir.c,728,13,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"	cl_assert(!access(""empty_standard_repo/fifo"", F_OK));",44e92191b06e5d0ad8627246e6fc052ec441647a1ee5765f5f6d422ca1130162,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
repos_cpp/libgit2/tests/libgit2/network/remote/local.c,383,2,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"	sprintf(expected_reflog_msg, ""fetch %s"", git_remote_url(remote));",256f4ab240adfd8a00c2a18b23af3b35d68a1813ac1e42b95005192473b389e6,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/perf/helper__perf__timer.c,32,2,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"	vprintf(fmt, arglist);",62fd960b287731f3285720dd8f19eed914f6e4ed4913c67bcd001424711782a7,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/tests/libgit2/perf/helper__perf__timer.c,67,2,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"	vprintf(fmt, arglist);",62fd960b287731f3285720dd8f19eed914f6e4ed4913c67bcd001424711782a7,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
repos_cpp/libgit2/tests/libgit2/status/worktree.c,1006,2,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"	sprintf(path, ""empty_standard_repo/%s"", longname);",1912dd7ce1ca86f8baa593fa49c6673b28e3483b4189c6720c180ce3157d6021,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/status/worktree.c,1008,2,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"	sprintf(path, ""empty_standard_repo/%s/foo"", longname);",249d64d651ec2ebce6554464055cfe31b7bfab3fd4bf5588f0eaf46e88620729,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/status/worktree.c,1011,2,4,4,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",,CWE-120,"	sprintf(path, ""%s/foo"", longname);",e8e3c30b2edb0044f1665d0e52a536a085e55a1244b2de3b0eabf29e71177fb2,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/util/path/win32.c,167,2,4,4,buffer,wcscpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,Consider using a function version that stops copying at the end of the buffer.,,CWE-120,"	wcscpy(canonical, in);",081561168ba86727d858843d4a94f7c65c843d172d0049a04c48b53ebb2ad210,2.0.19,FF1003,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/util/path/win32.c,180,2,4,4,buffer,wcscpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,Consider using a function version that stops copying at the end of the buffer.,,CWE-120,"	wcscpy(canonical, in);",081561168ba86727d858843d4a94f7c65c843d172d0049a04c48b53ebb2ad210,2.0.19,FF1003,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/fuzzers/fuzzer_utils.c,35,6,3,3,tmpfile,GetTempFileName,"Temporary file race condition in certain cases (e.g., if run as SYSTEM in many versions of Windows) (CWE-377).",,,CWE-377,"	if (GetTempFileName(tmpdir, ""lg2"", 1, path) == 0)",e697baf9a97380af33f597b15dfe9a94f3ee26ec4bb04a2344ec908b6c66d31b,2.0.19,FF1042,https://cwe.mitre.org/data/definitions/377.html
repos_cpp/libgit2/src/cli/opt.c,330,6,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","	if (getenv(""POSIXLY_CORRECT"") != NULL)",39310f21a01d9cb24769346251b5664f670daec0cec2b8e6883be55c905c8be8,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/libgit2/src/libgit2/sysdir.c,347,15,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","	sandbox_id = getenv(""APP_SANDBOX_CONTAINER_ID"");",674490244f5932feeded4ef891d7fd4c49d409a4e7291b83b808d2fba46b6632,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/libgit2/src/util/hash/win32.c,135,37,3,3,misc,LoadLibrary,"Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).","Use LoadLibraryEx with one of the search flags, or call SetSearchPathMode to use a safe search path, or pass a full path to the library.",,"CWE-829, CWE-20",		(hash_provider.provider.cng.dll = LoadLibrary(dll_path)) == NULL) {,90c148c655366b8337d0f6c9df26f38131e3555d186ff0c52a333c1fba8a566f,2.0.19,FF1058,https://cwe.mitre.org/data/definitions/829.html
repos_cpp/libgit2/src/util/unix/realpath.c,21,16,3,3,buffer,realpath,"This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).","Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN.",,CWE-120/CWE-785!,"	if ((result = realpath(pathname, resolved)) == NULL)",fe300857ad03334afc4cfbca7a7f2b2365f8979b038381d609600c77623c4ce8,2.0.19,FF1026,https://cwe.mitre.org/data/definitions/120.htmlhttps://cwe.mitre.org/data/definitions/785.html
repos_cpp/libgit2/src/util/util.c,775,20,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",	const char *val = getenv(name);,d2196c18b2d9d00406857672aa6e04948d7492717652a9a774e38770debd7e88,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/libgit2/src/util/win32/thread.c,123,2,3,3,misc,InitializeCriticalSection,Exceptions can be thrown in low-memory situations.,Use InitializeCriticalSectionAndSpinCount instead.,,,	InitializeCriticalSection(mutex);,cc893bd3be85c2d3e90c0d0ea714e52a4b4c448ea24c83b7499e83af8ed84dcf,2.0.19,FF1057,)
repos_cpp/libgit2/src/util/win32/thread.c,211,3,3,3,misc,InitializeCriticalSection,Exceptions can be thrown in low-memory situations.,Use InitializeCriticalSectionAndSpinCount instead.,,,		InitializeCriticalSection(&lock->native.csec);,02865f607203104b2cd2f86d6ca69bc55e44a99268c56fbb30aed61a495c15dc,2.0.19,FF1057,)
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,419,2,3,3,misc,InitializeCriticalSection,Exceptions can be thrown in low-memory situations.,Use InitializeCriticalSectionAndSpinCount instead.,,,	InitializeCriticalSection(&g_crtdbg_stacktrace_cs);,c3f1a473f7cf06314991b25b80210cf9e4a57110afbe218a0b7031c248b0724c,2.0.19,FF1057,)
repos_cpp/libgit2/tests/clar/clar.c,606,21,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","	    (summary_env = getenv(""CLAR_SUMMARY"")) != NULL) {",e149aa25c3a52e3e1c9262b0563c177582677e1b0681967105346c756badd0f2,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,46,21,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",		const char *env = getenv(env_vars[i]);,4411309827ba0932ac7fb91c9828eee032525a5c633aedb2fcee3192a6f91313,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,110,6,3,3,buffer,realpath,"This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).","Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN.",,CWE-120/CWE-785!,"	if (realpath(buffer, tmp) == NULL)",2e73bae6410ee18ed7eaad08589f27f5da3a0e90b6ba3ccdb8869512d09630d5,2.0.19,FF1026,https://cwe.mitre.org/data/definitions/120.htmlhttps://cwe.mitre.org/data/definitions/785.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,192,2,3,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,	srand(clock() ^ (unsigned int)time(NULL) ^ GetCurrentProcessId() ^ GetCurrentThreadId());,8bdaa7ef6b9954103f9e9c188664bd4add3781224c3653d8ecdc05f10609fe62,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,194,2,3,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,	srand(clock() ^ time(NULL) ^ (getpid() << 16));,2901d6ae81222cf85ac01b076258355dad6027338eb342f99841d97b36f6db74,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
repos_cpp/libgit2/tests/clar/main.c,28,25,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","	cl_sandbox_set_homedir(getenv(""CLAR_HOMEDIR""));",46c9ce0f288c7e79eb07d69db2c8e3e3834d1254101809fee399088f81c674ca,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/libgit2/tests/clar/main.c,45,16,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","	at_exit_cmd = getenv(""CLAR_AT_EXIT"");",9ccd82bdbcd268fb0d1ec32e983f4ec0b9535d03f88fcb29293b753594db9c07,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
repos_cpp/libgit2/tests/libgit2/diff/diffiter.c,294,2,3,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,	srand(121212);,a1d3349b38ce30043239d5de53f73e66936e56ea6c7f0c57df0c462983624f4f,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
repos_cpp/libgit2/tests/libgit2/graph/reachable_from_any.c,175,2,3,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,	srand(0x223ddc4b);,25bdc412a5dbdfc5c01666d0aa567261ef6363a6be5fe018331d5de7604a033a,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
repos_cpp/libgit2/tests/util/zstream.c,159,3,3,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,		srand(0xabad1dea);,687560f0b87f265234e1d93a8a1e55e5df0d5daa8f05b10062932ab4bd2b95b6,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
repos_cpp/libgit2/deps/ntlmclient/crypt.h,29,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,typedef unsigned char ntlm_des_block[CRYPT_DES_BLOCKSIZE];,2f9554281109bc4f2e4aa76a1d84bf28889d36d033866e45fd27d642a445d32e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt.h,47,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char out[CRYPT_MD4_DIGESTSIZE],",c0f0b35b27a5e199d656e87cc1abe31a651bff84dfd904df2039b5ef3d711e22,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_builtin_md4.c,54,20,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,#define MD4_memcpy memcpy,f64645c7a26fb4b3b60d16aecc0631b94d6541d624f0c3f408d8b226e58e955d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/crypt_builtin_md4.c,61,12,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  unsigned char buffer[64];                         /* input buffer */,d8281f7e376256520f12480c92f87b2b3dadc5ad7e4d4251fa4a20345ebda37f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_builtin_md4.c,83,17,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static unsigned char PADDING[64] = {,2acf3b21f91f254880852f4ab29665fa35ef2c3e17e0bbe50eba06b8fa31992a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_builtin_md4.c,170,32,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"static void MD4Final (unsigned char digest[16], MD4_CTX *context)",c71d67af4245e5eab0456411806b4780f033339ea71d52a6e1ddf2bde0659aa2,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_builtin_md4.c,172,12,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  unsigned char bits[8];,bd8ca3f9df6ff955c89ef63da704e8df056dbb9176e6ad9b591472b289e0f0eb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_builtin_md4.c,196,58,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"static void MD4Transform (UINT4 state[4], const unsigned char block[64])",4a6c3cd7a798244c6e9c724d114733859af828a6501a84bf12f50b40818a7475,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_builtin_md4.c,294,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char out[CRYPT_MD4_DIGESTSIZE],",c0f0b35b27a5e199d656e87cc1abe31a651bff84dfd904df2039b5ef3d711e22,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_commoncrypto.c,35,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	if ((fd = open(""/dev/urandom"", O_RDONLY)) < 0) {",57e3a0287fbe295a27d049e3c7d38994189adae910a3a2f1c4fd875c30b5b1b5,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/deps/ntlmclient/crypt_commoncrypto.c,77,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char out[CRYPT_MD4_DIGESTSIZE],",c0f0b35b27a5e199d656e87cc1abe31a651bff84dfd904df2039b5ef3d711e22,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_openssl.c,199,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char out[CRYPT_MD4_DIGESTSIZE],",c0f0b35b27a5e199d656e87cc1abe31a651bff84dfd904df2039b5ef3d711e22,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_openssl.h,23,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,typedef unsigned char DES_cblock[8];,c1b0a86801759c1cf2d854bc571092e1c9df75c3aa448c48c1b12452d438bfde,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_openssl.h,24,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,typedef unsigned char const_DES_cblock[8];,62689f49051048a817e54d72e4d9d94e6e2bdf8e8ed5aa39798b8244c45d651e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_openssl.h,59,14,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    unsigned char key[HMAC_MAX_MD_CBLOCK];,01a070e13702c76d2b00992efddb5514ad607c98f4469682779a353e41fc020e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,289,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&out->buf[out->pos], buf, len);",97cef5dfa7b0379ad12362a377b88afeb2f66d5ce01e377e86af216adb9fd11d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,383,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(out, &message->buf[message->pos], len);",f229d8a9767e2503672db1e6a7138bef84cf885da4c1a43270f8f92de04f7ed6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,520,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(str, &message->buf[message->pos], string_len);",3352e6a85a656851e9c5972bd8ccb67f6a1cfd5a006745dc6845bbb9c0924cc3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,731,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char signature[8];,04815d56797f468ab72c08b4a240b472999024b969ecc878692880f26921be43,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1007,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&split[0][0], &lm_hash[0][0], 7);",66c509402914f4d3b554c47f0852965ee0a5a37097e92fc32b0a585b4db1de29,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1009,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&split[1][0], &lm_hash[0][7], 1);",942f5def2f2df301c3a2c132b9099b39089191da7fb7d29a996fe0ffb5991ccf,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1010,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&split[1][1], &lm_hash[1][0], 6);",4d56d58354db702ce9fff250d639dbd532b999772a8d87c632919237cd85fdfb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1012,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&split[2][0], &lm_hash[1][6], 2);",983c559847064b07f24f887be86869cefb59e15d307f42e75233aace3993ebd3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1037,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ntlm->lm_response[0], lm_response[0], 8);",dc9bf7d3d0658ac398f9d9dfb622be88e52fdab0e8687f16391ef28bd17b71cb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1038,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ntlm->lm_response[8], lm_response[1], 8);",9e900afe04c38e385bd64532bd338abb22e3b02dcf99cba49f61d5e238503a10,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1039,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ntlm->lm_response[16], lm_response[2], 8);",7a587919cbcc5de0f363cfa9ce7fc7cb3374d23dee5e858c5804ead02cdb3693,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1047,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char out[NTLM_NTLM_HASH_LEN], ntlm_client *ntlm)",ab8c8583ab43c139ec72b189fbd9a11ebb40c4ca6ebd2c1081eb3c4765901031,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1066,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char ntlm_hash[NTLM_NTLM_HASH_LEN] = {0};,a54668a34fc5d56c6c207174d6c587e55d4f10487c8a1e43daa992c738d548c8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1085,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ntlm->ntlm_response[0], ntlm_response[0], 8);",fe992c0804cd782802d38115e93ac520632967ef321ffe749d74f8ebe8a6f022,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1086,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ntlm->ntlm_response[8], ntlm_response[1], 8);",2bca26f816ecb2a338d81e98c2e0af7708f4eff0317787edc1c2a6673a56a618,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1087,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ntlm->ntlm_response[16], ntlm_response[2], 8);",84d61c86fd8836971c24bd207a0f2ce066cccda6bd89aba658f7d3231c4c191c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1094,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char out[NTLM_NTLM2_HASH_LEN], ntlm_client *ntlm)",d378364ec549165a54440e18c378b34318f5163676ac49890978b5d3689535b3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1096,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char ntlm_hash[NTLM_NTLM_HASH_LEN] = {0};,a54668a34fc5d56c6c207174d6c587e55d4f10487c8a1e43daa992c738d548c8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1126,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char out[16],",5951174b0c813a120ec09d4d15025c92045ab13bfac711bc8bfff5888ae4a152,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1128,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char ntlm2_hash[NTLM_NTLM2_HASH_LEN],",0297d8d95a3bf5f4a9f273ace6b1dd83377baf9236827fb7df8d264f63312414,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1147,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char ntlm2_hash[NTLM_NTLM2_HASH_LEN]),d1b002611994e225d695a740d97544434df685ce901f5949909925b51949ae23,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1149,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char lm2_challengehash[16] = {0};,8cee87796f64d4067ef74db5581ca84ef7988fef540c9593bd4c50c731990e4f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1165,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ntlm->lm_response[0], lm2_challengehash, 16);",61f22a3a1c5552f6e1518894898314da6f681f670a6923cbca9558b5faf5fefa,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1166,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ntlm->lm_response[16], &local_nonce, 8);",2f27b0017edb47dc5afae67436ff8b1a565fb7d953127bc5993df2137e1c921f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1182,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char buf[8];,085aef5d488972304e051e80e16b66b4d04138e6b65ef9bb67d7b4b0614ad1fc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1190,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ntlm->nonce, buf, sizeof(uint64_t));",4c88f085add489deb7f15fcff4d2618d205e296287694b8778fdd61aba5f69e1,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1199,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char ntlm2_hash[NTLM_NTLM2_HASH_LEN];,5dce675b06fe6f26a4ac4afcd1942ae8df0b81a8b372c615837ba0e68d751e4d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1200,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char challengehash[16] = {0};,486bc3e7b184d9753e3485227d6ce1604d6ed72e402b4a6ef7b19f0e4f74a4cb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1225,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&blob[0], &signature, 4);",3ffe4590748812603d762d82d31bc308babc842a55a1bb3f1645d853ae422b6d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1227,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&blob[8], &timestamp, 8);",2528ee99fe3a346b6f1235eac297f23009c5d3457ca26783f3d2672b3075ba6f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1228,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&blob[16], &nonce, 8);",08bbfa5db574684dbacb535f527059eeeaacd8c89ed111db25dbcd52f9f6be2d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1230,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&blob[28], ntlm->challenge.target_info, ntlm->challenge.target_info_len);",9ee928b1d9569416d147fe067964cbf863964a56ea1b27e234e609c5081a29ba,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1236,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(ntlm->ntlm2_response, challengehash, 16);",326ea6193feb6ccdd5c94c003e95c9e4888b9beb4b171591bafbe5a65c8373dd,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.h,110,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char lm_response[NTLM_LM_RESPONSE_LEN];,dde4fe5ae83653250fed7c384c5ccb8b9e17750f161e0d3b4bf864855e0a2eb0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.h,113,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char ntlm_response[NTLM_NTLM_RESPONSE_LEN];,1af24eb3370829f6f08cbc3fddbb53cf16d42b500df5c9567505651b96551f12,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/unicode_builtin.c,64,14,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static const char trailingBytesForUTF8[256] = {,3304100a07ddb09647b5ce919e416fcad4a26bee08401cb89f5312234a4c03e4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/util.c,28,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char c[8];,f8b61cfcf2fce47bc16eca67ebbc4aef5ffaf71b1e315a8ef340d47d76053ff9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,934,1,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"memcpy(newspace, cd->start_workspace, cd->workspace_size * sizeof(pcre_uchar));",468be5e947cd25c0c72e3309f53c2093e82b65ef964814024b525de267a91b14,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,5127,9,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        memcpy(pbits, cbits + posix_class_maps[posix_class],",1188e4d3e8becef51363440ae2d86cb68905589b7f82c908b713e1f4c087e13f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,5631,9,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        memcpy(code, classbits, 32);",1991e90e5e24255d7d94af5859dcc80570a0b95baff9cced744e462161a89591,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,5660,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy(code, classbits, 32);",1991e90e5e24255d7d94af5859dcc80570a0b95baff9cced744e462161a89591,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,5839,9,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        memcpy(utf_chars, lastchar, IN_UCHARS(c)); /* Save the char */",e62383c4c4cc2fa5efd3a86aa925b63edf9eb4eabe6c66293216c0187da15921,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,5944,13,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            memcpy(code, utf_chars, IN_UCHARS(c & 7));",b38686191eb14d1a212bc7ce033b8aa87f5dd50df65fb3b7dd3d0e35b0daf362,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,5969,13,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            memcpy(code, utf_chars, IN_UCHARS(c & 7));",b38686191eb14d1a212bc7ce033b8aa87f5dd50df65fb3b7dd3d0e35b0daf362,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,5999,9,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        memcpy(code, utf_chars, IN_UCHARS(c & 7));",b38686191eb14d1a212bc7ce033b8aa87f5dd50df65fb3b7dd3d0e35b0daf362,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,6205,15,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"              memcpy(code, previous, IN_UCHARS(len));",0c8913067091ec1ee4c8140e35388d58a9afc1bf0cc07a6d4b6fe33be26da718,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,6283,11,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"          memcpy(code, previous, IN_UCHARS(len));",0c8913067091ec1ee4c8140e35388d58a9afc1bf0cc07a6d4b6fe33be26da718,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,6730,15,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"              memcpy(code, arg, IN_UCHARS(arglen));",7dfb5d002fb574e907081b9c7e50173b1a1b7e2a2ab444ebbc99e29f1bc399e6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,7268,15,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"              memcpy(newspace, cd->named_groups,",4b32d9d1f47142535b402d4016f144adb3117e212f465a1add71551aa400ccdf,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_compile.c,9009,1,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"memcpy(slot + IMM2_SIZE, name, IN_UCHARS(length));",130e01981c97dbc6ac80853f130f460d80bec0207302dc641632090dffcf98b8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_dfa_exec.c,548,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy(new_states, active_states, new_count * sizeof(stateblock));",8279b4fac3c65d3799dc79f76c52f6ce9a88b95c643570d73e156f0b58867d32,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_exec.c,1793,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy(new_recursive.offset_save, md->offset_vector,",6cd19fe199d1def9c6a261b85f164d54b031eed88dd85631b7fa8f02d27e6bcf,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_exec.c,1808,9,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        memcpy(md->offset_vector, new_recursive.offset_save,",3384621b50100c6085696f4f529d3e150fc9067cf7e45aa9ced1b7da6e4b4036,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_exec.c,7063,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy(offsets + 2, md->offset_vector + 2,",9ecad168b73c707b5876dbeae4905c4e39a5a09f61c959666266c1ca131651b6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_get.c,357,1,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"memcpy(buffer, subject + ovector[stringnumber], IN_UCHARS(yield));",505602a7a26d4a43d3ebac6d35ae875ede4a3496ffc7bc8377eaac7751030c27,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_get.c,484,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(p, subject + ovector[i], IN_UCHARS(len));",36fe8e9da0a0eac93eb7acfe78a7a7065dbaf8d0c58d1510c1d5732a5bbb8c05,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_get.c,571,1,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"memcpy(substring, subject + ovector[stringnumber], IN_UCHARS(yield));",9e2d14e7113f6af0c07d30fb9ac31d39787c1ad456a4a6d336bb4dc414b6eff8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_internal.h,352,9,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"#define memcpy(d,s,n)    _memcpy(d,s,n)",9c5408156c9f01004879e9eb331cbf55d93f82a40f647a5830ce5bfb8b591130,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_internal.h,365,26,2,2,buffer,bcopy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"#define memmove(a, b, c) bcopy(b, a, c)",ea818cafaf6f0053305b5274c89806f8263f736ad03fb4b60c3dbb3a2f0f3ba1,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_study.c,1594,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(study->start_bits, start_bits, sizeof(start_bits));",df482a2a08e30bfcb6791df6134a3bab97f3b15a2ac859c53e92f1cd025e4c68,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xemit.c,108,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(buf, rec, len);",64702295f134d859bd5216a04954228c12ba21e0873f9db463fd22dbb0d6a6ad,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xemit.c,126,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char dummy[1];,b00b1379ac79c6cbe9092e5b2c747ab0e22e9cef59a5f169f7177f7d50c6bcfa,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/xdiff/xemit.c,132,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[80];,993f92e14b9f08606183213cba5c55864badef29d5682c7370c5390df46d0c2e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/xdiff/xemit.c,139,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char *buf, dummy[1];",87c4baed65339f5b46ad9f2f591e317b348b1453feca2466ece0bdd34f19da71,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/xdiff/xmerge.c,124,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(dest + size, recs[i]->ptr, recs[i]->size);",c3d2f7abde96421d5016f92f898475cbd16150eaed9b9edb3b0dbabae4d7f5d0,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xmerge.c,221,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(dest + size + 1, name1, marker1_size - 1);",7b1ffbb28da1fb929f02a5418af2a346bcf4a4f354a9165c910f1d0f3d0f7c75,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xmerge.c,242,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"				memcpy(dest + size + 1, name3, marker3_size - 1);",1686b40a939bb22c0e44d40738b77607904985b0f03c85cec5c8d443382e7edc,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xmerge.c,273,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(dest + size + 1, name2, marker2_size - 1);",7d242c0c368047dae8b1da56f808ed6c7c573beaa5c5d85d21cb8c65f8be3d06,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xmerge.c,716,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(result->ptr, mf2->ptr, mf2->size);",0c0be6372b6d21b767acafcd4367cf157baedce3b4aea970afe7d08c8685a626,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xmerge.c,723,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(result->ptr, mf1->ptr, mf1->size);",1b79d710dec6cdc0f40312fb441279b00d494387391d0f95ad8b5af55cab45e8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xutils.c,323,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/xdiff/xutils.c,348,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[128];,a7e6ef4b73cb0cf74f88a6a9d4e04522c79ea9387f8f272e9d0ac542fa7168aa,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/xdiff/xutils.c,350,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(buf, ""@@ -"", 4);",ebb8df095f62d7224b5b27078da2c7e5f5c8960b233ee41e800a99e9d2a68961,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xutils.c,356,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(buf + nb, "","", 1);",ecdf5d02e61c889c5936a6ed2d0b929c646a00ac0ec001510ab613143e07c141,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xutils.c,362,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(buf + nb, "" +"", 2);",9b67703100a649fd6ade2d6c0eccd55de9f22e1fe8136cdb980363e3b424a43f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xutils.c,368,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(buf + nb, "","", 1);",ecdf5d02e61c889c5936a6ed2d0b929c646a00ac0ec001510ab613143e07c141,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xutils.c,374,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(buf + nb, "" @@"", 3);",8e4b149b25172f0e002cf22bd1b731d554815f71b1b7203023178646369a65a6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xutils.c,380,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(buf + nb, func, funclen);",fb22c3f01709b3fe01542c51766a48a9177e70fca739fdf030923dbb95a6bc78,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xutils.c,428,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(diff_env->xdf1.rchg + line1 - 1, env.xdf1.rchg, count1);",a3a260509a92d5b99cf7cec76b0711cc89cb94a9e21030c12b8e643ede742d89,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/xdiff/xutils.c,429,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(diff_env->xdf2.rchg + line2 - 1, env.xdf2.rchg, count2);",cd980664fdfc31482504f39f457d61eb808539b4d045af39eded0ebc81ca73f3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/zlib/crc32.c,352,15,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"        out = fopen(""crc32.h"", ""w"");",ab78f451070fff9048ac3e5d7f6e74f5ddc17bd65134f462462a798ee5d07f86,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/deps/zlib/gzguts.h,46,11,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,#  define open _open,f0063c75c0e6084b3cf6f468dd32ca33cb4e656c212fe2446fca98d6700b543d,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/deps/zlib/inflate.c,605,14,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    unsigned char hbuf[4];      /* buffer for gzip header crc calculation */,e27a9c607e121fd363c73215b9bee5b6e5ea67cd1b63ef2b66860f71391c28f2,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/zlib/inflate.c,1379,14,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    unsigned char buf[4];       /* to restore bit buffer to byte string */,3bdcd3eca26d630276a160178975d953e1aae944fac109faba45d737f285ab08,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/zlib/trees.c,388,20,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    FILE *header = fopen(""trees.h"", ""w"");",a176443a0184a757d7e8d3700f7117e3c499a2225c3eea4ecbd1aa7edaf5d246,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/deps/zlib/zutil.c,13,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,z_const char * const z_errmsg[10] = {,8864ddee06db70413fc871e6f56605dbc00457928629bb5d9bbb6b27aed75257,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/zlib/zutil.h,56,16,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,extern z_const char * const z_errmsg[10]; /* indexed by 2-zlib_error */,9f15e887fb781cb9c6f961f2fdad931ca46490497c11c78b20b8da1f928413be,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/zlib/zutil.h,116,6,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"     fopen((name), (mode), ""mbc=60"", ""ctx=stm"", ""rfm=fix"", ""mrs=512"")",804130d587e58c52b5d50cd282f93f6df1f47ae73b41da839d1d172b0b945689,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/deps/zlib/zutil.h,185,30,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"#  define F_OPEN(name, mode) fopen((name), (mode))",82dc9aedd1d9fa188fb3e6f5b1fb514df445866d619aec7428ed82e54321c6f0,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/deps/zlib/zutil.h,209,21,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,#    define zmemcpy memcpy,1cbea4700772fe9fcb5cf9001c200bc64c1c5923c391d1b2a5942745f4df1204,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/blame.c,37,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char spec[1024] = {0};,c26678d651f276dcd25a798db25650fe1e770c9a2d1deaf59a2841c5c9db90b1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/blame.c,80,3,4,2,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",Risk is low because the source is a constant string.,CWE-120,"		strcpy(spec, ""HEAD"");",698b0af8261fab49187012a15f36769ae253377c0853b4e0df47dd592b73b759,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/blame.c,99,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char oid[10] = {0};,d27bc32888ea71cf71d16eb4e260b28a996f4cb0d96b39966fda31d51c58109c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/blame.c,106,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char sig[128] = {0};,a413acc928f47c207d9e7584367c8ed122331f4c850478244169032493b36984,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/blame.c,153,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char *bare_args[3] = {0};,d63dd2a79549b8af046ccd3d2c379f6a19af68dfa30aa359940de778931061dc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/blame.c,197,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char spec[128] = {0};,4d00f678a3a22f5ab71757b9a91380137787133ebba0ef5f3f28730f40e2b33a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/cat-file.c,52,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oidstr[GIT_OID_SHA1_HEXSIZE + 1];,103effa2b79bfe0ec846a1d74e13267a093c1b876c749d9a4dde034acefa5fbf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/cat-file.c,73,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oidstr[GIT_OID_SHA1_HEXSIZE + 1];,103effa2b79bfe0ec846a1d74e13267a093c1b876c749d9a4dde034acefa5fbf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/cat-file.c,93,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oidstr[GIT_OID_SHA1_HEXSIZE + 1];,103effa2b79bfe0ec846a1d74e13267a093c1b876c749d9a4dde034acefa5fbf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/cat-file.c,128,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oidstr[GIT_OID_SHA1_HEXSIZE + 1];,103effa2b79bfe0ec846a1d74e13267a093c1b876c749d9a4dde034acefa5fbf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/cat-file.c,136,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char oidstr[GIT_OID_SHA1_HEXSIZE + 1];,103effa2b79bfe0ec846a1d74e13267a093c1b876c749d9a4dde034acefa5fbf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/common.c,235,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	if ((fd = open(path, O_RDONLY)) < 0 || fstat(fd, &st) < 0)",04e5fe5eb114d6975cd04b34acd971b80cd5ceb3b6c04e65adf08e29e8ffa091,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/examples/common.h,29,10,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,# define open _open,35df1508ab90d1724e63f98d677564d8c7a4995c1a3ee7c4aa55c48620b0d888,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/examples/fetch.c,18,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char a_str[GIT_OID_SHA1_HEXSIZE+1], b_str[GIT_OID_SHA1_HEXSIZE+1];",038d063b58c2e3ab9b76dfa2fbd281d2ce8357a9b1965d9aa15afe89ea90fec8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/for-each-ref.c,8,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char hex[GIT_OID_SHA1_HEXSIZE+1];,e5414e957b017432e7b430ad60e3a8f55ce8273c8e8c3e34454899b3b393978d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/general.c,132,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char out[GIT_OID_SHA1_HEXSIZE+1];,d3ff25123e51b609d20fc5648bea87457c2b4ad2b3166df0e2fbdbd3a1df82c9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/general.c,180,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid_hex[GIT_OID_SHA1_HEXSIZE+1] = { 0 };,ee4cb270e332fdb1dd71b816cc085763315539a2f3ff574fd849e5e9ca1b5f17,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/general.c,273,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid_hex[GIT_OID_SHA1_HEXSIZE+1] = { 0 };,ee4cb270e332fdb1dd71b816cc085763315539a2f3ff574fd849e5e9ca1b5f17,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/general.c,357,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid_hex[GIT_OID_SHA1_HEXSIZE+1];,a9e73133a215440d5d018f60b9115c7106a6d84c9b1f5f3aee6ea5c30d2f356a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/general.c,711,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char oid_hex[GIT_OID_SHA1_HEXSIZE+1] = GIT_OID_SHA1_HEXZERO;,c36f830677b2ce958f5dd1e4d22aa002ebbc53bcad3550082a94ce5db322e5f9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/general.c,748,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char config_path[256];,6387ef64d9015a5c38248936c57ee77aca46c1c579089a4d30673144622aa3bd,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/index-pack.c,22,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[512];,657ff8329591453022e3359353e72b30b702c62cf6567d962d837e05e108b31a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/index-pack.c,43,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	if ((fd = open(argv[1], 0)) < 0) {",373ec8b76abee2d8a8825de224e23e878985821c8e936d762456da7500667281,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/examples/log.c,308,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char sign, out[32];",91ca7e1a6506336f51234a448ffae5924082c65bc04cb9c812058bd5bb907381,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/log.c,335,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[GIT_OID_SHA1_HEXSIZE + 1];,ad5cc7c651cccd0ed961dc325c48b85029c8ce822482192dcb5a528ffc89c7a1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/ls-files.c,30,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char *files[1024];,606869175bb2d19674134af149cd49a9ff85eaeb34d2c2178a3f22e281211930,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/ls-remote.c,37,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char oid[GIT_OID_SHA1_HEXSIZE + 1] = {0};,9d39e77c4f5b84104dc739cc7347fdb289c9fb5a27c9ca480c968b127605287c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/rev-list.c,29,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[GIT_OID_SHA1_HEXSIZE+1];,6376314f5713f2a9690b0306b0ee6998ffa2647b790a20b692e572103c0bc0c2,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/rev-parse.c,68,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char str[GIT_OID_SHA1_HEXSIZE + 1];,25aa0beb968a1f0b81d11b7974d5939db364b44ccbfa0ecfe41e4d0f6f097e64,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/show-index.c,23,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char out[GIT_OID_SHA1_HEXSIZE+1];,d3ff25123e51b609d20fc5648bea87457c2b4ad2b3166df0e2fbdbd3a1df82c9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/examples/status.c,49,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char *pathspec[MAX_PATHSPEC];,66a96866d74cb0b291e1090ffc52ef8a106d1c4e991c7c67942f441d71d05525,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/fuzzers/commit_graph_fuzzer.c,39,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hash[GIT_HASH_SHA1_SIZE];,042dc60f5505965aeda3c2e78778dcf17490b30e2c1af3f669a41bee6e03660d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/fuzzers/commit_graph_fuzzer.c,62,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(commit_graph_buf.ptr, data, size);",5c0dba0b8a94a0f3e2d007aa0931c1f89b0a894c2c56cbb0b6076913f89c1161,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/fuzzers/commit_graph_fuzzer.c,63,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(commit_graph_buf.ptr + size, hash, GIT_HASH_SHA1_SIZE);",5dbdfd5ce28e04b4c7f62f20e545abc2ddcc1d3df2b0f1b1271c5f25cfba8e3e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/fuzzers/commit_graph_fuzzer.c,65,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(oid.id, hash, GIT_OID_SHA1_SIZE);",fec8516ddc870d6a4c56dddd1f4b8015f963b2a41c1620cde289f170ffb5b4e0,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/fuzzers/download_refs_fuzzer.c,51,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(buffer, fs->readp, *bytes_read);",efeb2833f573708079135797ac9ccaa9c1f5e6128b06e0815980bc5c0ae72c87,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/fuzzers/fuzzer_utils.c,30,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char tmpdir[MAX_PATH], path[MAX_PATH];",177927502a8316a423a2fb5e6d7d6bcfcee7038ed41c4084f92b5d8187ae55e7,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/fuzzers/midx_fuzzer.c,38,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hash[GIT_HASH_SHA1_SIZE];,042dc60f5505965aeda3c2e78778dcf17490b30e2c1af3f669a41bee6e03660d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/fuzzers/midx_fuzzer.c,61,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(midx_buf.ptr, data, size);",8693614e596f4223029003995ecd4382d0e736205d6f62705d47edf9acca8094,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/fuzzers/midx_fuzzer.c,62,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(midx_buf.ptr + size, hash, GIT_HASH_SHA1_SIZE);",3fbd593de524fefd9cd37c925cab2cda39485b9b6e312f95c0756d160f423330,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/fuzzers/midx_fuzzer.c,64,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(oid.id, hash, GIT_OID_SHA1_SIZE);",fec8516ddc870d6a4c56dddd1f4b8015f963b2a41c1620cde289f170ffb5b4e0,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/fuzzers/objects_fuzzer.c,42,44,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"		if (git_object__from_raw(&object, (const char *) data, size, types[i], GIT_OID_SHA1) < 0)",454b1f39ce7650d28b7e77a6462d880cfca2fb0f5586bd6b1400c966695b5bf1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/fuzzers/revparse_fuzzer.c,45,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(c, data, size);",88bc857bd80e73c3916116aae05b4c6b1585054946737181aeadd0b7af7b5fc6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/include/git2/cert.h,120,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hash_md5[16];,560004c86dcc946d1db1ea4a22bd2dc5a898d3072543afd6044253466366b7b6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/include/git2/cert.h,126,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hash_sha1[20];,f92140f6316532ee2dfac0dc20842d156548cd6b0f4f77ea7cb65db84fa18341,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/include/git2/cert.h,132,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hash_sha256[32];,116cfbf8d13627aa22407279357495e152687052d6393d031169f21980f12092,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/include/git2/diff.h,596,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char   header[GIT_DIFF_HUNK_HEADER_SIZE];   /**< Header text, NUL-byte terminated */",ebe7b2e29fb0bdfe1a49ca8b3d83571d0ca27e40134bda6487e20e7d646cc85a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/include/git2/oid.h,111,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char id[GIT_OID_MAX_SIZE];,0999052713923f277d4a5437c5f8fe256141628608b8bec7a54621203ba4fe9a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/include/git2/sys/config.h,76,19,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	int GIT_CALLBACK(open)(struct git_config_backend *, git_config_level_t level, const git_repository *repo);",9bfd501fa4cb6d868419af7fa570a60e75ba7cb92be403f13041cbc731a32b39,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/include/git2/sys/credential.h,42,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char username[1];      /**< The username to authenticate as */,08a82e59ff28dd14374153701a064327bd18446e402193e08521d6cdee98ba07,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/cli/cmd_blame.c,175,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&hash, oid->id, sizeof(uint32_t));",507f17fac3a4494d903c43b728f0f7396cf440cae4037e0b89c5edda9da319c1,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/cli/cmd_help.c,56,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char *fake_args[2];,0d818e0a45207d602ad7a29930dde912cd5149e5b6b6944134b25214af5b9102,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/cli/cmd_index_pack.c,56,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[BUFFER_SIZE];,1dea48be41e306b42b5f451e7b7fe8031e0bdcb6099b607bfc07f668eedb2ca0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/cli/common.c,140,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char cwd[GIT_PATH_MAX];,7e5706134a3d3940f2be2050f52e99adc80ec066f4a65f5dbf7d9ef18222c76d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/annotated_commit.h,44,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char id_str[GIT_OID_MAX_HEXSIZE + 1];,a935ebf8765867d6c8a0438e8bbba5be01622c6fcba4fc6e83785fe4921e734f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/apply.c,410,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&ctx.opts, given_opts, sizeof(git_apply_options));",e6d50234481982fbecec6943ac37f6bdaa8984299172af902738217ba38e6ff7,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/apply.c,638,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts, given_opts, sizeof(git_apply_options));",f211c49c457be4e46a9b9f01dddf76a67b63e1ca228924acc45c761979e98604,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/apply.c,823,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts, given_opts, sizeof(git_apply_options));",f211c49c457be4e46a9b9f01dddf76a67b63e1ca228924acc45c761979e98604,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/attr_file.c,51,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&attrs->source, source, sizeof(git_attr_file_source));",0819916ef43c70ca0e8b1de0dcbce3e3846aad719f3a70f9de95565d76957413,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/attr_file.h,119,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char fullpath[GIT_FLEX_ARRAY];,16e62fa76e7c9094acc70915706258090fa1e05950c1f86ae754fc1c801bde6e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/attrcache.c,101,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ce->fullpath, base, baselen);",0a8782d4f0061db8412e5aa49cbdb92fab15fd8b0f954f7f8c1166692a8cec8f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/attrcache.c,106,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ce->fullpath[baselen], path, pathlen);",176044990437126c8cb19eae665a3298f155df9f49b886d49d4c1d182e083eb6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/blame.c,265,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(out, in, sizeof(git_blame_options));",86b472d69eac3edceacd2c243a75899fffc06ac7c73aef0a53b663473daf4cad,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/blame.h,20,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[GIT_FLEX_ARRAY];,caca7e563a8796dd31cac53c8f97227f261e74f726a55cb08302d9656960647c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/blame_git.c,211,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(dst, src, sizeof(*src));",3a5b505b3ecaf66773006b5c35d6a2bc9930eb9d3ac9cafee01ffd5b19f54274,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/blame_git.c,232,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(new_entry, &(split[2]), sizeof(git_blame__entry));",9c1c0c93b8b76d715c1b97222dc6c47c1e26662ced13ab59984ce4aaebb4ee97,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/blame_git.c,238,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(new_entry, &(split[1]), sizeof(git_blame__entry));",2644f480056d51bf9fe310939b3dbc2c4d213e6c66c6bb9da9de72ae264aa1a2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/blame_git.c,251,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(new_entry, &(split[1]), sizeof(git_blame__entry));",2644f480056d51bf9fe310939b3dbc2c4d213e6c66c6bb9da9de72ae264aa1a2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/blame_git.c,258,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(new_entry, &(split[2]), sizeof(git_blame__entry));",9c1c0c93b8b76d715c1b97222dc6c47c1e26662ced13ab59984ce4aaebb4ee97,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/blob.c,106,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buffer[GIT_BUFSIZE_FILEIO];,2ab37ef35b084dc68668fd6e5d0cb23b75efcc8fb294817e9a80f78a8a447f26,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/blob.c,221,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out_st, &st, sizeof(st));",0240286d794e417fb7380e5c2dc09c88e173c0c0ba5574b6498f3b388c79b19a,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/blob.c,446,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts, given_opts, sizeof(git_blob_filter_options));",c4d8c150f133a719463827b81929b4c06b7ef1f5bf92b02375c7441de8ad8446,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/branch.c,137,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char commit_id[GIT_OID_MAX_HEXSIZE + 1];,746c52c2d53f3a96b75b110a450661fe1fb21dd354fcb5fc40d5d33b18621bfb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/checkout.c,1489,6,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,	int open;,25bfd7a457b849054917f13478f2ed7a611cef0bdb9aa2557bbd8a507e62f256,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/src/libgit2/checkout.c,1509,25,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,	GIT_ASSERT_ARG(stream->open);,0fb734e1c5009665b4ba9e8c996898f8776e99c165c1c501631a662ff1fbc8bc,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/src/libgit2/cherrypick.c,81,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, given, sizeof(git_cherrypick_options));",4d11f0f650ba8810db7f1791b15233020f740422613ba3a20d6ce38c46d54333,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/cherrypick.c,84,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, &default_opts, sizeof(git_cherrypick_options));",5a26d896ca3359aa823a42dcd536c8b5011402f2f2d8b0f5bff522d1329ecbd8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/cherrypick.c,108,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char commit_oidstr[GIT_OID_MAX_HEXSIZE + 1];,16297e901e9681ef72e13557ddb6b2affcab79bccfe1b274550f3ada967b7002,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/cherrypick.c,175,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char commit_oidstr[GIT_OID_MAX_HEXSIZE + 1];,16297e901e9681ef72e13557ddb6b2affcab79bccfe1b274550f3ada967b7002,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/clone.c,335,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[GIT_PATH_MAX];,c72b3621ee9406172c6e99fb2e5d212bb856ed980517ea6e83153d728a3de717,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/clone.c,615,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&options, given_opts, sizeof(git_clone_options));",813bcd9d5f63dd8fb45501ccb897efb232015d14337372a98e6f55bafde61b86,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/commit.c,1108,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts, given_opts, sizeof(git_commit_create_options));",989d758246c716ad1c686f4a91ebee4e1a7ea082b4610fc95fcaa7b00da12c28,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/commit_graph.c,141,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char *oid, *prev_oid, zero_oid[GIT_OID_MAX_SIZE] = {0};",e1f1e537029836f144fc3aa1863ce47fcb10928acc3266e22dffa9acdec4cced,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/commit_graph.c,240,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(file->checksum, (data + trailer_offset), checksum_size);",7935c7117bff1a99ebec405fb79ed8a52ed37c8163a50df8162a825a2e3df860,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/commit_graph.c,345,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/commit_graph.c,548,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/commit_graph.c,1088,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/commit_graph.h,63,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_SHA1_SIZE];,c61d4cd02cfcf2887f3ec4a4f76024bd8a31074e8158d8abbbde784af3494f60,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/common.h,34,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy((PTR), &_tmpl, sizeof(_tmpl)); } while (0)",07f9ce55ab818ad3669b7901dc55f73652686feabdd9c789391480b019785953,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/config.c,377,25,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	if ((result = backend->open(backend, level, repo)) < 0)",4157a45b98c2aafa8cf949058ab7805b611e394d0ce0386a8f494294fdb067e6,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/src/libgit2/config.c,695,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char str_value[32]; /* All numbers should fit in here */,4b27d4996e51e5a2bd7b9819ea83f7867c71456e5f1e122b43cbc5374eff4d89,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/config_backend.h,42,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	return cfg->open(cfg, level, repo);",37975131114738fbcdb407d5185425d73fd17e640c0c15f9aebd52da75fb0516,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/src/libgit2/config_file.c,31,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_SHA256_SIZE];,25dce4278003ece126f944d0d2694e81e56e4259291e2495ad568f8bd59ce16c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/config_file.c,138,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_SHA256_SIZE];,25dce4278003ece126f944d0d2694e81e56e4259291e2495ad568f8bd59ce16c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/crlf.c,364,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(*payload, &ca, sizeof(ca));",d8a710567cd4438073fa90cb42461562fba7dc3fc18668e9c0f0a673dba453ee,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/delta.c,507,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char buffer[DELTA_HEADER_BUFFER_LEN];,f4f11f8052cdc2b8d069af1ab24f4d6c9704f7e0cf34b011a9c837553cdcdae1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/delta.c,594,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(res_dp, base + off, len);",4caae226133df0afb13ef2d53cab7769a5edd23f4f778024af29727b591b8373,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/delta.c,605,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(res_dp, delta, cmd);",0d6d0148b204407e2b16c4b0a98299ce7dc0a3a78602049e56fec32d50158a92,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/describe.c,190,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(name, in,  sizeof(struct commit_name));",03974cea313d0f282f47ff0d1203e1d7ed55f63366cab8ed22d2fe497086b0eb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/describe.c,266,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(tag, in, sizeof(struct possible_tag));",45ecbe6c0e6ba4fd513f1a984fd100dd40fa40258b41ce4b1dab4261980b499e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/describe.c,405,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char hex_oid[GIT_OID_MAX_HEXSIZE];,243a82f3fb41ee6f34b03bbf937a24cdda4d89f0f81ffe5925745e77937b2caf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/describe.c,422,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid_str[GIT_OID_MAX_HEXSIZE + 1];,f21cfde363fee851a7e2fd09c6f49325513df22b5afcd314f2670a2f564bb230,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/describe.c,772,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(dst, src, sizeof(git_describe_format_options));",51f1e992153abc2cbd9aed83ab0f62db25aa3a38d97d68ee55cfdc8baa46d04b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/describe.c,822,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char hex_oid[GIT_OID_MAX_HEXSIZE + 1] = {0};,64de9bb04940d160fa1b1cd1b24afc2f543132c5e416997a9c68849963f32aea,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/diff_driver.c,43,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[GIT_FLEX_ARRAY];,00c819c1e76eaf532d436682bd1543f65bcb711cada4f1073cadda497d875769,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/diff_driver.c,168,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(driver->name, name, namelen);",a0fc6c3f656fe60a406e811fd23697e2067a03086e37e9b2764636e6310c9f87,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/diff_driver.c,354,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *values[1], *attrs[] = { ""diff"" };",7917be3af500977a8c97c29caf3e2c96f362d830c61a11c31b8f173a51e401c4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/diff_driver.c,488,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(out, ctxt->line.ptr, (size_t)out_size);",a61a643620bf0ba50cefc5cd2f733880357ffc3d6cb4c3bed00ed39f1530445b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/diff_file.c,181,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid[GIT_OID_MAX_HEXSIZE+1];,e9b67a2e997b64943974659953fb32f4bc1f1cd0842997d41d5a34d062cbba64,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/diff_generate.c,464,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&diff->base.opts, &dflt, sizeof(git_diff_options));",8aa3789444d5e279ef3fb729d0875a066bfe85b34751a546ffa6446dd32cbd4f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/diff_generate.c,711,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&updated_entry, &entry, sizeof(git_index_entry));",f04ae19be64f65c64d8eb0f04ff67342e43dfdce260c185ab7a1d11987c8adca,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/diff_generate.c,1724,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char commit_oidstr[GIT_OID_MAX_HEXSIZE + 1];,16297e901e9681ef72e13557ddb6b2affcab79bccfe1b274550f3ada967b7002,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/diff_print.c,219,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char start_oid[GIT_OID_MAX_HEXSIZE + 1],",da3cb6c95ecf32f39e2fac75afc03b93c58ee7ab58055d0a208c6483defb6f37,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/diff_print.c,292,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char start_oid[GIT_OID_MAX_HEXSIZE + 1],",da3cb6c95ecf32f39e2fac75afc03b93c58ee7ab58055d0a208c6483defb6f37,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/diff_tform.c,27,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(delta, d, sizeof(git_diff_delta));",0e40f7d43caac30622ec97001cc63917c16f7a91828546ad5c7c64b10cf8039e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/diff_tform.c,261,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, given, sizeof(*opts));",9b8b1f5a45b8211dd1418e91b4c6f3714364b8ab36a62c97fc898d656cd9a44b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/diff_xdiff.c,139,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(info->hunk.header, bufs[0].ptr, info->hunk.header_len);",2b0ddf14e40a4e709fcbe5226ec9f2eeab3be447a3088f5bd917059e8de8e716,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/email.c,134,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char id[GIT_OID_MAX_HEXSIZE + 1];,ab84691a7e4e6cacd120e9dd44aa7c40cb4a783f69bc0aee2ca3299c33aacfd9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/email.c,233,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts, given_opts, sizeof(git_email_create_options));",27bd370dac81eed158520749837c0e95c75ce8f7e0dd070ebd3e07f7dd595574,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/email.c,295,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts, given_opts, sizeof(git_email_create_options));",27bd370dac81eed158520749837c0e95c75ce8f7e0dd070ebd3e07f7dd595574,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/fetchhead.c,108,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid[GIT_OID_MAX_HEXSIZE + 1];,0a5649e1de803ec1dba2d603f18713e7ce8f2d52e35d01979634fbbed684516d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/filter.c,42,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[GIT_FLEX_ARRAY];,caca7e563a8796dd31cac53c8f97227f261e74f726a55cb08302d9656960647c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/filter.c,52,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	const char *attrs[GIT_FLEX_ARRAY];,7fc193d95f66f60091745fd413c1eb6d7fd0d7322fd8db5744b2c33467e507b4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/filter.c,418,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(fl->path, src->path, pathlen);",de3d049f0151009c9dbbfe75a594f8e8b174c418eda713625bca81011a722904,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/filter.c,423,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&fl->source.options, &src->options, sizeof(git_filter_options));",d463e201efa2703a261f3702ca227b739825bfc5354bada578a688e4531f3111,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/filter.c,534,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&src.options, &filter_session->options, sizeof(git_filter_options));",d4321d4f55f5b0bf2d88cee009b1b88a1a226ea2ccddbc7feba795ad411860c9,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/filter.c,611,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&filter_session.options, opts, sizeof(git_filter_options));",7726d9f6a56c2c9cc339565bb6ec437368f62d82ed3e40dc1d02cfada9e6462a,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/filter.c,1118,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[GIT_BUFSIZE_FILTERIO];,603468a4fe4cca0e86e671c5a9ef34a40ba0eb9684464a4e48250e9e1d298a60,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/grafts.c,27,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char path_checksum[GIT_HASH_SHA256_SIZE];,e06ee144ff823ae780bd9d8d237f801fee3f4959156b7492cf922cb7e0ac0589,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/hashmap_oid.h,15,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&hash, oid->id, sizeof(uint32_t));",507f17fac3a4494d903c43b728f0f7396cf440cae4037e0b89c5edda9da319c1,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/ident.c,45,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid[GIT_OID_MAX_HEXSIZE + 1];,0a5649e1de803ec1dba2d603f18713e7ce8f2d52e35d01979634fbbed684516d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,57,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char signature[4];,dd9eee6540c85666935c09452ae19998ddab9d9b21efd9bc92c7739289674d4e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,80,12,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		unsigned char oid[oid_size];         \,99323148be9bfbd8218f19635e622857ba7169772d7be56a442e84a34723c819,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,82,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char path[1]; /* arbitrary length */ \,ef2db393e49bf9a82504f933a4823cc0fd4b68b3118a3c62871a6fd1a6555587,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,88,12,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		unsigned char oid[oid_size];         \,99323148be9bfbd8218f19635e622857ba7169772d7be56a442e84a34723c819,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,91,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char path[1]; /* arbitrary length */ \,ef2db393e49bf9a82504f933a4823cc0fd4b68b3118a3c62871a6fd1a6555587,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,114,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[GIT_FLEX_ARRAY];,caca7e563a8796dd31cac53c8f97227f261e74f726a55cb08302d9656960647c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,120,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[GIT_FLEX_ARRAY];,caca7e563a8796dd31cac53c8f97227f261e74f726a55cb08302d9656960647c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,131,33,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"static int write_index(unsigned char checksum[GIT_HASH_MAX_SIZE], size_t *checksum_size, git_index *index, git_filebuf *file);",8b7b8d47176180b450b53ea4ccaed16a02f22ff3ab6c88f27351b10db266ffaf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,628,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,953,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(entry->path, path, pathlen);",b9c20ab37c08f6445a22d4c1d867849bcbc2108ac64e12eb1f6691c6d693a670,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,1030,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(entry->path, path, pathlen);",b9c20ab37c08f6445a22d4c1d867849bcbc2108ac64e12eb1f6691c6d693a670,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,1073,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(tgt, src, sizeof(*tgt));",f8d969d9c870043f8c92c8cbe880497ecd5d9848e547e6c7d5e4ed89b67a3e07,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,1220,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy((char *)entry->path, existing->path, strlen(existing->path));",312102886fb780a9d4dc68656a1a46835e75aa50fec729ebecfb9a8710612b46,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,1270,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy((char *)entry->path, best->path, best_len);",4802589fec381ccc50bddc194f7a674bbde5b0ce0bbf3c7d8f9b267f2d65dc13,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,1409,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"				memcpy((char *)existing->path, entry->path, strlen(entry->path));",25620e2c7707dd9a29b1a850f407e93f98e7a39678a4483d0b4c145b75b083bb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2406,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ptr, buffer, len); \",423eb22af8cc8b3145504780bd5eca43ddb917510d610b668030b814c103144d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2587,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&entry.flags_extended, &flags_raw, sizeof(flags_raw));",729edfd0d9b830cdb7d82de09e1141b3e66d322cd6949e6943ca9b1944db4ca8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2632,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(tmp_path, last, prefix_len);",af9e0cb9022072e7b80e6a113dfb1a9599b96cc338003044fd08ff40a3837a3e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2633,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(tmp_path + prefix_len, path_ptr + varint_len, suffix_len + 1);",579e7693bd5e9c01b8b46ee45a7c4244f537605c7b89b1d2174a0fb154e79955,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2680,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&dest, buffer, sizeof(struct index_extension));",86c03639f5fc3bf99c6d6e7eb179752998b093b8cb867e1fbd14e17bdce3bef0,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2724,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,2725,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char zero_checksum[GIT_HASH_MAX_SIZE] = { 0 };,364d8a95055e60512bac813bf3c9692b4206151256012242438e11a70a6b3afc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,2825,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(index->checksum, checksum, checksum_size);",afb9b37bee42f61a93936b3f90711914fa01dd6002bc4ff3453940435a3f2ba5,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2960,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(&ondisk_ext_sha1, &ondisk_sha1,",b86cafa922ee3bfc3de2211851c1d5905d7983ba9a0fbf496a1f5f0b0b5e8a62,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2967,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(&ondisk_ext_sha256, &ondisk_sha256,",cddfabf327b47d5dbffe51a7197314037ba6a50a8312ea9d44d45aa856f63366,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2977,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(mem, ondisk_ext, path_offset);",21d3e3dfd7a26d9c88ee7bd4ad5b622e6b9a3f94b7b22dd87d0569c9720fb21d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2981,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(mem, &ondisk_sha1, path_offset);",6e265accfa63a0b40e6e7d6c030de8e907d0481eff5527667b2abe99718f6d59,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,2985,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(mem, &ondisk_sha256, path_offset);",df6a231aaad49448d89bf648785c54c7d8648bd1db8e0ad93f3d777b09b38c69,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,3018,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(path, path_start, path_len + 1);",c579aacaf66b22c594689b3e048a6406b39bc7d5007c6784a47957337c12ebd4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,3063,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ondisk, header, 4);",63f544986432545911a5f52f91b8113fda0e9cbddf96a08818d5a9aa6a287818,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,3114,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&extension.signature, INDEX_EXT_CONFLICT_NAME_SIG, 4);",3bf061a09deaff50b352bdd883dab97ea2594d18901d6293e89083977c61c2a3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,3163,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&extension.signature, INDEX_EXT_UNMERGED_SIG, 4);",b42fdb9ce03117df140e925e7cc1aa79e03f848625a6a1ee22a74e84854d5b5c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,3187,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&extension.signature, INDEX_EXT_TREECACHE_SIG, 4);",fe3a8a3143a76c8699e98d01bd4e0534b9fea2207761dd647cccce5b8aa4ce5f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.c,3207,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char checksum[GIT_HASH_MAX_SIZE],",c1e3034a066b95c41a90041dba18237d2cadd5dab18617b71bedcc67374e01e1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,3884,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index.c,3910,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(writer->index->checksum, checksum, checksum_size);",5e0fb8fe19d2a2bdd385c7200f73992162bd4a1fa590108def81061fefc584c2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index.h,34,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/index_map.c,76,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(a, b, sizeof(t));",d9746bb9850f22d65f1477b5460cfc958255bf42fc1342044a3f6a07bdd82c50,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/index_map.c,77,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(b, &t, sizeof(t));",2a94bf0d931aeba118bbd0c09a27cf6ae2bddfcff97281354dc6bcef80af0e39,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,61,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/indexer.c,62,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[(GIT_HASH_MAX_SIZE * 2) + 1];,df1f666d0d6beb38e3dc9d8d04e9eafae09b542b44c00a9799a5dbd0606e7e61,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/indexer.c,65,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char objbuf[8*1024];,be506b2fba1362c3adeff68dfc30b776375a034a19f4272c0cb0157a7173beb7,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/indexer.c,74,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char inbuf[GIT_HASH_MAX_SIZE];,109bfde48c64174d51464ce9a356ba71f7be3419a8cb6469cd0b87eae9525ba2,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/indexer.c,103,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(hdr, map.data, sizeof(*hdr));",d6bebb01207e5a53c6260a06a2a85f8c4b8e243688ea7ebe513b844d25eafa95,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,283,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buffer[64];,fd32e32a0128086fcecf01e34bb772b6cf0156e612566d0c1d4f747c71d29525,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/indexer.c,660,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(idx->inbuf, data, oid_size);",337cb4c8545c10e4edaa1b7af935060100c7d45e1c7f577431e94e1c9191e5d3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,667,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(idx->inbuf + idx->inbuf_len, data, size);",128b8be7e5ebe0d5eb8ba0f394f83be904b23c8065f0b31293b7d0becd4825a4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,679,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(idx->inbuf + to_keep, data, size);",a249c5eb09bc9d21f0b588453501019118220df0b5b0345c7c769c842930e8c4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,749,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(map_data + page_offset, data, size);",9366ef8485ef878fae6b6b6b06acd9eaa4a3de0a19f85d10783703491d64b928,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,993,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char empty_checksum[GIT_HASH_MAX_SIZE] = {0};,48ac3fe1d9c901bef0980bd5e9c75a4ea5a6d7c6d58c52c8970ad5761e03cea0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/indexer.c,994,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hdr[64];,08b91d7a14fe40b836eaf71425676059c20807c6039807e9c7c382523c5452d2,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/indexer.c,1237,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/indexer.c,1314,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(idx->checksum, checksum, checksum_size);",71216f2c6a4e781209fa5d37aa38abdb37a0dd7618fa82c7960f90eccfa29400,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/iterator.c,1022,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[GIT_FLEX_ARRAY];,caca7e563a8796dd31cac53c8f97227f261e74f726a55cb08302d9656960647c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/iterator.c,1325,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(entry->path, path, path_len);",2fbb88c0884adb2b8407e7366664a07e2f1ae0e79b012bb4155a1e5beeee7a14,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/iterator.c,1326,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&entry->st, statbuf, sizeof(struct stat));",a1034129a951c81db26c536c0dd2408a02635ab9bbc73ed99e2cff718069f870,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/iterator.c,1957,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(iter->root, root, root_len);",52bb6db9fb77262f743e7a6babcac67166fede7141774fe0c2579012c889b002,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/iterator.c,2007,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&options, given_opts, sizeof(git_iterator_options));",198f487767bbd25d84156feccc1c643c96a69967c00f6b24aadb2273f00495c6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/iterator.c,2032,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&options, given_opts, sizeof(git_iterator_options));",198f487767bbd25d84156feccc1c643c96a69967c00f6b24aadb2273f00495c6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,833,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(merged, &conflict->our_entry, sizeof(git_index_entry));",fe50383511225ed5e83fbce62f688b268c00f9bc62fb8234e5d6f87f22c5795f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,835,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(merged, &conflict->their_entry, sizeof(git_index_entry));",386fc8775cf8356b651e5d601d18bfa62d8b0855bbc2ad50a1304e2d74520fc3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,1445,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(source_entry, target_entry, sizeof(git_index_entry));",d31665864a70e2411f5084e791943fb14f048286b34d59ae286937ddd48a4e33,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,1716,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out, src, sizeof(git_index_entry));",d76c74fdb63c53568f808552eb5d20aae1d73cfc815c7a1c4eb49db49f9b2592,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,1891,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, given, sizeof(git_merge_options));",e7e6c040c6027000de80220b18aec0b4dacfb2eb362eb1ab58e83164bc6b5914,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,1894,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, &init, sizeof(init));",8775ceee03cf26ce30ca5f492344e02ede290676d1fe78061d87dbd2cd319535,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,2153,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&changes, &diff_list->conflicts, sizeof(git_vector));",a7fb91138db7fdf263d4d049425e4c6a3012d0bbf81875f6e9ffd2c5c65142aa,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,2295,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&virtual_opts, opts, sizeof(git_merge_options));",f864dedba49eb04ef6437791f9f4c568e99b3b5bfb9f9271df93744b53460d54,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,2337,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts, given_opts, sizeof(git_merge_options));",e9dcfbad9bca08506f076333c49d5393fdfe74eefc580782952a3d4dbe305a22,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,2934,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out, given_checkout_opts, sizeof(git_checkout_options));",7ccd75e760aaa7d9e60e203312ca2eb8f45ae93a533c60c02fa4fa9c2787c6ef,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge.c,2936,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out, &default_checkout_opts, sizeof(git_checkout_options));",ae5ea33443a2a10909132351b961b5c5d001d2f09d52b143521a3c122eeb1b87,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge_driver.c,28,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[GIT_FLEX_ARRAY];,00c819c1e76eaf532d436682bd1543f65bcb711cada4f1073cadda497d875769,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/merge_driver.c,86,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&file_opts, src->file_opts, sizeof(git_merge_file_options));",31b75f992b838f53713e162e6fb5713dfe60111d45235bfd5bfe1923c1900673,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge_file.c,59,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out, given_opts, sizeof(git_merge_file_options));",ec5520acd0f29e8d308eae562bebccbd4f49f99b64e08b19a8e56201516bad76,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge_file.c,62,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out, &default_opts, sizeof(git_merge_file_options));",25c0bf2207af5eca30ef7e2da27af03940f45fce60356abc10feca8a04ae1d93,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge_file.c,207,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy((char *)out->ptr, favored->ptr, favored->size);",5b2a0ca2aae2c84afc482ba6227ab8ad30d11be93d73b0ba957713cb2ea7a799,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/merge_file.c,235,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(out, given, sizeof(git_merge_file_input));",11ee0e002797604b280b787e2af4f6a95a7dd649a1102d4e810e00a66561bb45,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/midx.c,213,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(idx->checksum, data + trailer_offset, checksum_size);",20d8061c6999c9fda991d3b55a8d1f7344c10383648ecc485936fe49a3596a1f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/midx.c,350,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/midx.c,697,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/midx.h,58,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_HASH_MAX_SIZE];,5e8445bf765d50b5de61116b5c7904bcfe35311d42fabceae5c7d2f1d92e7b75,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/notes.c,159,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char subtree_name[3];,27f9a459a42bf1c5e5dbe938a04d0b3b0b0db44cd74d7376324d9006e8b47955,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/notes.c,463,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char target[GIT_OID_MAX_HEXSIZE + 1];,4ded5571c16ab2a35270eb9b5840ff80c9769c1fca577c5a7c266febe4ddaf78,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/notes.c,510,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char target[GIT_OID_MAX_HEXSIZE + 1];,4ded5571c16ab2a35270eb9b5840ff80c9769c1fca577c5a7c266febe4ddaf78,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/notes.c,581,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char target[GIT_OID_MAX_HEXSIZE + 1];,4ded5571c16ab2a35270eb9b5840ff80c9769c1fca577c5a7c266febe4ddaf78,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/object.c,384,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char hex_oid[GIT_OID_MAX_HEXSIZE + 1];,07cbf23282d1eeee754ad1852d5ec0096116affae345ed04df3c3cb365a9bbf9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/object.c,553,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&id.id, &obj->cached.oid.id, (len + 1) / 2);",d5bcfe444a7f136674521495b5681b79cbc12495aac3aff16bb0fd69c8c56c07,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/object.c,679,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char hex_oid[GIT_OID_MAX_HEXSIZE];,243a82f3fb41ee6f34b03bbf937a24cdda4d89f0f81ffe5925745e77937b2caf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb.c,111,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char header[64];,a5b24e76ff615ffb7d5867333493084f78663358b44787e691ac9391346de8bd,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb.c,216,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char hdr[64], buffer[GIT_BUFSIZE_FILEIO];",6b5a0a81a82fa6404f0339fe9f4e48ac39ca1c4009c4239f0166da33d9af5b4e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb.c,458,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(stream->buffer + stream->written, data, len);",f1962153f7a4da49a71ae5ea22ec218dd7a3f4508a3eb39f360c2f742e56691b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb.c,531,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, given_opts, sizeof(git_odb_options));",73c5e11d5d25c52a962dfc74140a166d4296230007ce058a1bc1a46d29e6bfcd,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb.c,533,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, &init, sizeof(git_odb_options));",289106657a6cb7cb469c2501a9aaceffbd13c6945aa446d4949c3fcda0ea18b6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb.c,1653,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char header[64];,a5b24e76ff615ffb7d5867333493084f78663358b44787e691ac9391346de8bd,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb.c,1939,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char expected_oid[GIT_OID_MAX_HEXSIZE + 1],",3066c6a6bbc5427ad3322149780ea8348b041bf52167fda0f8d501a8e2db2d30,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb.c,1955,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char oid_str[GIT_OID_MAX_HEXSIZE + 1];,f21cfde363fee851a7e2fd09c6f49325513df22b5afcd314f2670a2f564bb230,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,40,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char start[MAX_HEADER_LEN];,af3d6be6cb7c4a1166d45eeb3c1674db10c4cf30fe5dc78ff0c2f93422a243d7,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,53,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char objects_dir[GIT_FLEX_ARRAY];,bec9cea5b8e78f34a94bfa4dce7a79c0fa6bf0dc7001f7516c188f4cb2d40bcc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,65,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char short_oid[GIT_OID_MAX_HEXSIZE];,1d4bceb55a34135882bd25d6007145dd09b039e4b579c1e17ad8de71c84535e5,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,72,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char res_oid[GIT_OID_MAX_HEXSIZE];,284824b953f10e812eb1d8df027852a7f0e7ae873af4e17f4a63df5dee57cfc1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,279,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char head[MAX_HEADER_LEN], *body = NULL;",a07f37b4027d343d5edbe4cbf9c6b2c3ea75f087f996b0f9256f3a2509caba48,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,319,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(body, head + head_len, body_len);",bb07bbbcd47b5c4ff8209f367c03d881ff5986d209663d94bc6cba56b5a40b60,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,394,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char inflated[MAX_HEADER_LEN] = {0};,967e4e2a55ac269c0933c121d020bc843713a898e7ea4d622d0a5cf3d2ef832a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,414,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char obj[1024];,49f051bedf38c24e8fc2de624d576043b3a50b537de1f949f533c63c18851692,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,484,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"				memcpy(sstate->res_oid + 2,",2753f2171b819537c92434eb3e63c2094a3dc0f8e9289f8a34f66f449edf5de7,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,853,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char hdr[MAX_HEADER_LEN];,8dfc7cca9dcb882e20cbabb4fe1d3ad432850f80c64d3d083e840078b3c8fbaf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,909,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(buffer, stream->start + stream->start_read, chunk);",0ad3bcf80e8e60253af7689376f1a8a7fc10d9dc310dcb4ae1e3b60cc806ae4e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,970,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char head[MAX_HEADER_LEN];,1d033711d33dc36f00c2762ee5440f271e6a6122599d278f3363b2acdcb039c9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,996,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(stream->start, head + head_len, init - head_len);",7e598f71f3d7298d770cc76b7d1e1f29cb6f0001e888be4b8577f4e27ad82aaa,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,1086,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char header[MAX_HEADER_LEN];,cb54b75329698da40854b13fd9c899bb7faed6568dfe86149f9aff9af5f9e1f7,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,1150,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, given_opts, sizeof(git_odb_backend_loose_options));",d727a113a9642cbcc45b2c80590e208e58b2262baae8c2065fceb6d79db41a31,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,1152,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, &init, sizeof(git_odb_backend_loose_options));",8fc80185cf7645696af8921754b1b274ce55bb17c536b34937d83bf18810e6ac,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,1187,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(backend->objects_dir, objects_dir, objects_dirlen);",0304583837d6f16c98177c0ce4d3c3132e2b9364d3460916066ba036d5477741,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_mempack.c,28,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char data[GIT_FLEX_ARRAY];,8b586d9577398f2fff03d594c7d088c3245f7e5d264a835e2aaf06e740cd2bb4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/odb_mempack.c,52,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(obj->data, data, len);",445038b545e22917a40d1384bf442956522942490cac6a8ede3cd91647d5787c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_mempack.c,90,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(*buffer_p, obj->data, obj->len);",b7c24a96f982c3c99d3657e0d2d2c6780a5c7f348b7c25db934798e3b5f463d9,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_pack.c,900,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&backend->opts, opts, sizeof(git_odb_backend_pack_options));",1c70638e139063ab6dfd6d43b6fb70669973670d074eafe5e60c03b906c6dfb8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/oid.c,90,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(out->id, raw, size);",164ac9303bb8060f2b277f7a036509b3078ff957e4d6cc79afe2a991954cfc1d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/oid.h,211,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(dst, src, size);",bf1739c0268893b60cc4e9586cd844b37784112abdc531cf9a6d0d85199710b5,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/oid.h,241,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&out->id, id->id, (len + 1) / 2);",21913708dc03e291eac0ba1c03b88e77c09c162cbd0e6c70a2db2273c26e14e6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack-objects.c,322,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char hdr[10], *zbuf = NULL;",130466de31af83f873290b5457e5d1dbd5355abca2993c470d76475ed8a08232,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/pack-objects.c,808,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(trg->data, git_odb_object_data(obj), sz);",1311f66b37d60d80b8fe6777910f0df5d74afddc3881489eb6c2a7c055e857eb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack-objects.c,830,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(src->data, git_odb_object_data(obj), sz);",ea90ecc932159da27a4a1684625ac262c6b22963ef81cb00535e3e073bc990cb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack-objects.c,1063,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(po->delta_data, zbuf.ptr, zbuf.size);",ece61a487d5f9fb58095ab8e48f4bfe527afb4589d98498cce596eb89f4bad2b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack.c,68,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&e->raw, source, sizeof(git_rawobj));",be9a975c56ada34bd50bef33ec326c64df8b00e28f5169fcf4d3e83430d9732b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack.c,611,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(chain.ptr, small_stack, elem_pos * sizeof(struct pack_chain_elem));",bdc464affa42d5478d221f62ecdee1b7c3191cb3f1376cc4e084f9e84dda8501,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack.c,716,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(obj, &cached->raw, sizeof(git_rawobj));",8dff6f901b65842acb75dff654a621ae45c488f2d01262b054cddcd5306d2320,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack.c,760,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(obj->data, data, obj->len + 1);",7d44e0d6c2cf6605962c69f7fd8cf4e09b85910bc32a5a2d3fb6f7512114e4c0,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack.c,1086,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum[GIT_OID_MAX_SIZE];,90ccf4f1fe5cf1bd4d4366cf3850094453bdadb66f3e3086be66347003a2fbcf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/pack.c,1195,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(p->pack_name, path, path_len + 1);",5e37e39655a4e0e9e070e0d11b351396af8b14054f8c9e269b3cb9a2290f6c08,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack.c,1205,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(p->pack_name + root_len, "".keep"", sizeof("".keep""));",16c1461233179ab57bc6b87da6736fcf0ef2d45cdbaae3d768bc57a0b2382555,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack.c,1210,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(p->pack_name + root_len, "".pack"", sizeof("".pack""));",acc092a9629d4305498da13d951be09db89910266abcfd96ecda92693b6cc798,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/pack.c,1602,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char hex_sha1[p->oid_hexsize + 1];,5460c552793daf6c1b6e16b5041efba2c69896afcd6d884974298f8a21ae1492,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/pack.h,136,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char pack_name[GIT_FLEX_ARRAY]; /* more */,c6d25e34731b44f16b65c83fac8e2e460cf0e1209b57cae2bc2625a9bf84e5c1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,89,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out, opts, sizeof(git_diff_options));",73876b8c5001dc699aba9dd82c2c6d6d6c1a101985cf7b7e961b6a06528c1f85,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,92,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out, &default_opts, sizeof(git_diff_options));",47eac63f250c25cd588a7aedaa96ff1d54551d0ea59deddb55669ecb6510fffa,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,423,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char paths[GIT_FLEX_ARRAY];,5dad3c4091f503409ba1d4d22de4c2abe3eb92c1e5398707fabdba141b2f1be3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,531,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&pd->paths[0], *old_path, old_len);",faa886d26bc7c1119d891ae03008474e24986b5c9b72fda97d1c15f7b8f33427,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,537,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&pd->paths[old_len + 1], *new_path, new_len);",63c4a608e445ab178658b18d72411a3d6f865a9e3f927eb1806483e4a71b46a4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,820,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&patch->binary, binary, sizeof(git_diff_binary));",bdedc5114dc9ae25468dc2d8e5cb54e7b50488c552c0bf56486fad80810b5c4f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,826,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy((char *)patch->binary.old_file.data,",c80147e9dac57a4f021499f068dc55f98b4fa7e946796f5996981a2365a5fa87,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,834,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy((char *)patch->binary.new_file.data,",f12efdb78f4c4eccb0155d205f19d5eeb79e19861cc1701b071f28479433bd2a,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,883,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(line, line_, sizeof(*line));",6af0674d3c8346a2f914e979743c97cbaf9fa4dc7729f3a8dff309f4545fac8d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_parse.c,552,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(hunk->hunk.header, header_start, hunk->hunk.header_len);",eb923d975729e8d4a723547dc6e7ca972234f2a09b21e80f60875183a9e511d8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_parse.c,1103,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&ctx->opts, opts, sizeof(git_patch_options));",b5fe5250a64282e7fa0724c8a64f486f88a8fcf2f18b47c9f6a4d9e9d54b5e68,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/patch_parse.c,1105,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&ctx->opts, &default_opts, sizeof(git_patch_options));",ae85ea5fc6a3ba35d6d1f80499836d180f6af4ab7b5538c0beb9a6713997e688,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/proxy.c,33,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(tgt, src, sizeof(git_proxy_options));",c466391b926a5e81bb7845db22ca829892e4b2553adea08b50b71daac4095cbb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/push.c,50,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&p->callbacks, &opts->callbacks, sizeof(git_remote_callbacks));",12403f8713e06929c873c6e4cb7f23baf4505ee4ea01a39f7d96d89b0c8230ee,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/rebase.c,292,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&rebase->options, rebase_opts, sizeof(git_rebase_options));",11fe840457dfc8218cc1065074f48e93c59efa22e7e4b255ced19c2b10a37a71,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/rebase.c,443,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char id_str[GIT_OID_MAX_HEXSIZE + 1];,a935ebf8765867d6c8a0438e8bbba5be01622c6fcba4fc6e83785fe4921e734f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/rebase.c,471,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char onto[GIT_OID_MAX_HEXSIZE + 1], orig_head[GIT_OID_MAX_HEXSIZE + 1];",af7bb0e85de540c4cc866d57b28c2bcba9634a8742da5518ea603283f59ec7a2,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/rebase.c,764,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(checkout_opts, &rebase->options.checkout_options, sizeof(git_checkout_options));",5bdd66de242d22b8cc57868be0a6ed9e422177f34b284facf7e81fafc2ea6efa,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/rebase.c,804,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char current_idstr[GIT_OID_MAX_HEXSIZE + 1];,c2df09e6dbff516bd1aa6172ea2d33b9c0273c1f5fc25551afec629e3e5d97fd,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/rebase.c,1093,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char old_idstr[GIT_OID_MAX_HEXSIZE + 1], new_idstr[GIT_OID_MAX_HEXSIZE + 1];",115814b471cd38495989190813e9f2f362a215fc3f1f5ce631a27b70553eae31,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/rebase.c,1365,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char onto[GIT_OID_MAX_HEXSIZE + 1];,99761845b8fa6b6bdbbbe413cd17f8d76e0d75bb0e5dad7d84f1aa359865cadb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,50,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[GIT_FLEX_ARRAY];,00c819c1e76eaf532d436682bd1543f65bcb711cada4f1073cadda497d875769,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,1194,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char oid[GIT_OID_MAX_HEXSIZE + 1];,0a5649e1de803ec1dba2d603f18713e7ce8f2d52e35d01979634fbbed684516d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,1310,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid[GIT_OID_MAX_HEXSIZE + 1];,0a5649e1de803ec1dba2d603f18713e7ce8f2d52e35d01979634fbbed684516d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,1324,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char peel[GIT_OID_MAX_HEXSIZE + 1];,833e81e60b928ef6145768ef8cb7b58e62683f78075841ede07dafe2746c059f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,2181,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char raw_old[GIT_OID_MAX_HEXSIZE + 1];,b50d40a254d16a09c16779f1be9c6744977088362c0bd5889690189ab2f2c3e9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,2182,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char raw_new[GIT_OID_MAX_HEXSIZE + 1];,6972340cb5bfa061c929bab5cd5969448d232bcdb05c0cd082b81d0cfaa58fbb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/refs.c,43,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ref->name, name, namelen + 1);",c5ecd3d259a7bf0f086ea197cf0c4072841a8a70f504ee293f1dbbc833bc7f1b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/refs.c,116,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(rewrite->name, name, namelen + 1);",5049fc27956155b0982a8441b04a278beda5b384b649ab700619f98395dbf05c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/refs.h,61,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,typedef char git_refname_t[GIT_REFNAME_MAX];,3c88137cbc14e8292b8f3f64ed7e9dfa38a06b2cded11994c4ffa23f0033285b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/refs.h,73,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[GIT_FLEX_ARRAY];,00c819c1e76eaf532d436682bd1543f65bcb711cada4f1073cadda497d875769,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/remote.c,775,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(dst, src, sizeof(git_remote_connect_options));",851ac572da8e10e6a37e0a1437797e24943f720827aee9a62ddd4d0c2ee8963d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/remote.c,942,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts, given_opts, sizeof(git_remote_connect_options));",a69d9d9050a40ed7093aa1d1455e029e2b80073653ca40569bc715630aa17473,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/remote.c,994,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts.callbacks, callbacks, sizeof(git_remote_callbacks));",5bbb1c4a438158a058bf284bb27cf7655dfbe7db65dfac3f09eadf7ad6a75244,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/remote.c,997,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts.proxy_opts, proxy, sizeof(git_proxy_options));",34533cf37ed7416b396ba8b3fe99f1a541392ef013eb7fca9d308435d3603488,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/remote.c,1000,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts.custom_headers, custom_headers, sizeof(git_strarray));",1ca6b5915267956cfa713fe14db9815c8554e593bc3be367aeead0cf0f0012c2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/repository.c,476,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[GIT_PATH_MAX + 1];,12c6a17bbd347d1b65829736468a31537dd27c035eb40767579aa78fcf4f1991,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/repository.c,477,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf2[GIT_PATH_MAX + 1];,c6e14c3d8db0a383fbcaf6da45581445ca4fe4f3763634e4b4335c009d432fde,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/repository.c,672,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *validation_paths[3] = { NULL }, *path;",630b349f984ea6a9b4bf3c61e74207e52aa4efd2b93b6d779ee72e872a3efffa,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/repository.c,3391,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char orig_head_str[GIT_OID_MAX_HEXSIZE];,05768440576b5d6a5a82be31cb816976ab152c13c046981f11aaa1bea3fbcf0a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/repository.c,3811,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid_str[GIT_OID_MAX_HEXSIZE + 1];,f21cfde363fee851a7e2fd09c6f49325513df22b5afcd314f2670a2f564bb230,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/reset.c,191,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char to[GIT_OID_MAX_HEXSIZE + 1];,dbaeacb0afdb9a0fbac0cf6b2c663ecba6631298854401ea2674453d5463334d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/revert.c,82,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, given, sizeof(git_revert_options));",107e3f9e8f6d2ca788ba8912b3b468d65ca87f8a9585357bd99dcff0a3dc49b8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/revert.c,85,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, &default_opts, sizeof(git_revert_options));",32586929eccfcbb11223f38be70adcf8d3734a08e87d85964e05dac2262104e8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/revert.c,109,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char commit_id[GIT_OID_MAX_HEXSIZE + 1];,746c52c2d53f3a96b75b110a450661fe1fb21dd354fcb5fc40d5d33b18621bfb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/revert.c,176,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char commit_id[GIT_OID_MAX_HEXSIZE + 1];,746c52c2d53f3a96b75b110a450661fe1fb21dd354fcb5fc40d5d33b18621bfb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/stash.c,929,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, given_apply_opts, sizeof(git_stash_apply_options));",1bff476794a56fea2fc5922b71baab05c3b8e61ff13b12745dae81f5f0a50b73,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/stash.c,932,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(opts, &default_apply_opts, sizeof(git_stash_apply_options));",91b90af519a5292d17cafebe92cfdaa389670b48ce04bc101675465d1c4b4965,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/status.c,305,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&status->opts, opts, sizeof(git_status_options));",c5fd2dca80a790ab861ac71ca18d365f146b86542f7643c8156da43cdf6ace82,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/mbedtls.c,178,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char errbuf[512];,2258dabf87d17b388be1f027a025ca6d3eed6c52c94a03e58dc804cfc8964493,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/streams/mbedtls.c,221,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char vrfy_buf[512];,c7956845030ff76ee66e0519eda3e0c40a7afde12479d368f81054ab24d1684a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/streams/mbedtls.c,281,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(encoded_cert, cert->raw.p, cert->raw.len);",9c17d2b31d5162db30e9f23bd0b6ab0d025b7235dfda36018e397656b6e4296a,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/mbedtls.c,441,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char errbuf[512];,2258dabf87d17b388be1f027a025ca6d3eed6c52c94a03e58dc804cfc8964493,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/streams/openssl.c,324,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char errmsg[256];,62bea8fe474dd3e7de0873c38a308eebda9f09ce1de655cbeec56602ca281548,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/streams/openssl.c,337,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char errmsg[256];,62bea8fe474dd3e7de0873c38a308eebda9f09ce1de655cbeec56602ca281548,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/streams/openssl.c,469,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(peer_cn, ASN1_STRING_get0_data(str), size);",55570dd21e9cfa557f12f3ae54a50f322fad3e3ce8dee45e15c3ebdb67dd06e6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl.c,717,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char errmsg[256];,62bea8fe474dd3e7de0873c38a308eebda9f09ce1de655cbeec56602ca281548,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/streams/registry.c,44,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(target, src, sizeof(git_stream_registration));",42d1a7314922a87b837b4861e67ab33862bb7b06d7e2b24c6dbd4481497e37be,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/schannel.c,432,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ciphertext_out.ptr + st->stream_sizes.cbHeader, data, message_len);",9703519cdc08fa8c43b9e4d7940b0711dd721fc1580bced0c7a084bf84a19406,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/schannel.c,492,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(data, st->plaintext_in.ptr, copy_len);",817547d3eea3d45577af97e34001dc7b63e317962568df77b49d1843e4dbd4de,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/submodule.c,984,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&opts.checkout_opts, &sub_opts.checkout_opts, sizeof(sub_opts.checkout_opts));",62b219b8f2c6bcc009852291f0dea2ee9656eee46642bf5ff706b345d9084ea9,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/submodule.c,985,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&opts.fetch_opts, &sub_opts.fetch_opts, sizeof(sub_opts.fetch_opts));",d77a738111a5b4fd52e9b0999bd89dcf02364a39f9e435d6a78f1f58e998f34c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/submodule.c,1372,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&update_options, _update_options, sizeof(git_submodule_update_options));",7ab9e6b49658ccab46e9232eed05547efddf34fbb51c04f76b6a25acc63d6fe7,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/submodule.c,1377,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&clone_options.fetch_opts, &update_options.fetch_opts, sizeof(git_fetch_options));",21d3af6abc4e368e9bfe1bca3eee604e4ecc5da33dec3463968bad159b5ec341,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/submodule.c,1759,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(tgt, src, sizeof(*tgt));",f8d969d9c870043f8c92c8cbe880497ecd5d9848e547e6c7d5e4ed89b67a3e07,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/sysdir.c,265,15,2,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	static const wchar_t *programdata_tmpls[2] = {,5d29f8daf0a2e9a47895cb076793c894dc8bdf20fb3ae2dd175670545005d72f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/sysdir.c,327,15,2,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	static const wchar_t *global_tmpls[4] = {,37b790c1220e6c7bdc67d50f6f4b2aa6451cef6af50eed73a0c275714591d25f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/sysdir.c,378,15,2,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	static const wchar_t *global_tmpls[7] = {,a077ca2f0a31ce2b714ff8e69b2b5e817d15282d0c1c5d93ef59e4302470d9d2,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/tag.c,129,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(tag->tag_name, buffer, text_len);",e1b7ca31cdd9e54fe5527cbb1e5dc658ec4768b9b048eaa60bf09818a49fa052,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/tag.c,161,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(tag->message, buffer, text_len);",1695c02f7b077523d7d63ac5eb03c1449e331555dce3c22617be3e9c134f2e2b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/trailer.c,273,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(buffer, message + trailer_start, trailer_len);",2591bdadf13827e470d3906ba14dc9333f94a1810a43f72f99daae515b1bc49e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transaction.c,102,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&tx->pool, &pool, sizeof(git_pool));",eb130c3fc49e0bb6d69697e508de3dbfcbedf98a813e642654dc88b2f80c90ab,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transaction.c,399,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&pool, &tx->pool, sizeof(git_pool));",a239013db80e344893f13aaa62547a551729cb876e112db0c70a5b53c288c140,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/credential.c,343,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(c->publickey, publickey, publickey_len);",f8d3e2414bd2cfa0fa48c40973c3d01472dc129ee82065850a15935ef7983a35,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/credential.c,386,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(c->username, username, len + 1);",08b25554cbb5c6bfb78ec9fae4d6095e1d01c8a212c065fc6a6ec1b6bb69ceeb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/httpclient.c,406,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(ctx->output_buf + ctx->output_written, buf, max_len);",243c1bc2d40d3c17285201ddc7ff0ad8746a9c7c141a294c2dd7f6765402a025,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/httpclient.c,974,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&client->early_response, response, sizeof(git_http_response));",3a01f8d8a3822f34689067e396b09aac76bdbde134c385311d0238543df2c893,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/httpclient.c,1430,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(response, &client->early_response, sizeof(git_http_response));",c535448f5d403346468a54c6ae5c8068785497196dfc3c3a9367078f78a89f82,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/httpclient.c,1583,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&client->opts, opts, sizeof(git_http_client_options));",419f8352852bc632afdfe600ae9ae2fe12f7fa268812d3a21350d346d4937e31,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/httpclient.c,1595,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&client->opts, opts, sizeof(git_http_client_options));",419f8352852bc632afdfe600ae9ae2fe12f7fa268812d3a21350d346d4937e31,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/httpparser.c,64,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&parser->settings, settings, sizeof(git_http_parser_settings));",e4b79fb54da11ed83107388076c89a06ec680d5fbc8db4d6d261427038cae582,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart.h,99,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char comment[GIT_FLEX_ARRAY];,66b7a3206ad7d5c088bc4c46593163b4ec50069b768d0caadb8aa7b3910193b1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/smart.h,105,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char data[GIT_FLEX_ARRAY];,8b586d9577398f2fff03d594c7d088c3245f7e5d264a835e2aaf06e740cd2bb4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/smart.h,113,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char error[GIT_FLEX_ARRAY];,c0895cb93ae5472c5370c6b49b236f6638ee53bacad601680a8bbbbec6547efa,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,120,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(pkt->comment, line, len);",971d9454374fa97eaae9cc5adeac8e0ff56b39245704f0f6a4395d05a1d31e7f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,146,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(pkt->error, line, len);",c957f3f06d5e375b0cd1f4a4ff1b6dda46e6adc7c1ee43271a114a2554e4b7a3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,173,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(pkt->data, line, len);",b1e38d868198bee8e27402fa94986965114221332c965dde0915de7969d489e6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,194,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(pkt->data, line, len);",b1e38d868198bee8e27402fa94986965114221332c965dde0915de7969d489e6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,216,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(pkt->error, line, len);",c957f3f06d5e375b0cd1f4a4ff1b6dda46e6adc7c1ee43271a114a2554e4b7a3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,319,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(pkt->head.name, line, len);",1f9a9b273b3d764509f010b9d375b57dfc5e7612a1dda2975df3140a86a44e33,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,363,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(pkt->ref, line, len);",b82829cfef17f2458305b33e641d80ca7540e2f57c7856f84429f3760471b574,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,401,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(pkt->ref, line, len);",b82829cfef17f2458305b33e641d80ca7540e2f57c7856f84429f3760471b574,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,416,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(pkt->msg, line, len);",f5f951fcae72027c60a4abac6009fc525501135fdb23c367183b8278fe83dc5d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,526,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char num[PKT_LEN_SIZE + 1];,dc2092fc53d3fe1dfcb29040a6bdf131e1eb5e67feae40d02d065e077a264354,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,535,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(num, line, PKT_LEN_SIZE);",abd9d4b1c600822a58dd182d6819ba66b03916b2edda68df0065028fa2180265,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,703,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid[GIT_OID_MAX_HEXSIZE];,888d634a4b36fd72462db8c0cc928cce377ed24e2bf5ed83e805fac0cfab973f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,768,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid[GIT_OID_MAX_HEXSIZE];,888d634a4b36fd72462db8c0cc928cce377ed24e2bf5ed83e805fac0cfab973f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,814,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char oid[GIT_OID_MAX_HEXSIZE + 1];,0a5649e1de803ec1dba2d603f18713e7ce8f2d52e35d01979634fbbed684516d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,847,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid_str[GIT_OID_MAX_HEXSIZE];,1c63db44ec65105d0b99afd9afa86c7e5c7f1a84c4c774efffbc1fc2e269c02c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,402,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out->ptr, wants->shallow_roots,",0755587e99c1e0e8b03785003a9c3b8d544e2a78fe70a9b577b34a07dadaae45,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,615,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out->ids, t->shallow_roots.ptr, len);",8cdc6e7b42b1384c0de3d69f6762ee25f1d04d30d42ae5ec9df7ecc5c2071e2c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,800,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char old_id[GIT_OID_MAX_HEXSIZE + 1], new_id[GIT_OID_MAX_HEXSIZE + 1];",80a8673a528505ab00bfdc3722033c0519267b7bbb93b9fbb91f26f4dffad3ae,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,1205,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char hex[GIT_OID_MAX_HEXSIZE+1], hex[GIT_OID_MAX_HEXSIZE] = '\0';",dd84989bc10a4c892a6232316095614c792925f8005ebb6534dbc0a95a37dbbb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,725,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&cert.hash_sha256, key, 32);",d893ee96035d37e2edc84b99bc073897a165d24f653a6ac39dfc385ddca20159,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,732,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&cert.hash_sha1, key, 20);",f58e94e0e22c038b5757486a468ca011e847d17eb1a6b05c4b58428fc233888f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,738,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&cert.hash_md5, key, 16);",6e3f7ee7c9d67871c6c000927fc865f6ad2e6c023e6d109cbd1ab716a559d7ea,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/winhttp.c,376,2,2,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	wchar_t ct[MAX_CONTENT_TYPE_LEN];,10b97869dbd36e7362bb339837d8a588244eaf8ec8ac4ac8856b5931065b2f47,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/winhttp.c,1076,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char expected_content_type_8[MAX_CONTENT_TYPE_LEN];,30faf54ed1e18f90a629d10843f1722134de182eb6f9e8d98395bf7dac6402f6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/winhttp.c,1077,3,2,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"		wchar_t expected_content_type[MAX_CONTENT_TYPE_LEN], content_type[MAX_CONTENT_TYPE_LEN];",756f960100f9dbf26916c17a5e341a18f616d0f3c6276e56d90da314a2fcd8fc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/winhttp.c,1428,3,2,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		wchar_t temp_path[MAX_PATH + 1];,4ce8e065bd4dbfef859ecca5417b14d496a1bcb933bf3eea7f955d9a2035e8b1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/transports/winhttp.c,1507,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(s->chunk_buffer + s->chunk_buffer_len, buffer, count);",ca76fc89a00fb843ca1093da3e1679d8021d46a039198579f595ae31e7c4b7f5,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/winhttp.c,1521,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"				memcpy(s->chunk_buffer, buffer, len);",b78b20929ccaddb4297d28075e8caaa31243d520a9a44094ea80ebf16202dd22,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/tree-cache.c,262,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(tree->name, name, name_len);",00e1f807193f3d69de165d1a4b08d2ef8f7ab105d5d6ec9d05781bed3d6d8b72,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/tree-cache.h,26,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[GIT_FLEX_ARRAY];,00c819c1e76eaf532d436682bd1543f65bcb711cada4f1073cadda497d875769,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/libgit2/tree.c,108,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(filename_ptr, filename, filename_len);",5c6ced77dd18fa0b894141ebe77fb6715c05374032f3b961fb22e533650e6a5f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/alloc.c,58,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ptr, str, len);",d88a7567a819605dda93ebd048b5e1807b6f488b4d81c118906b53cb4a3fa687,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/alloc.c,69,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ptr, str, len);",d88a7567a819605dda93ebd048b5e1807b6f488b4d81c118906b53cb4a3fa687,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/alloc.c,81,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ptr, str, n);",93354b33fc46df80ad60dc8be1bd7967caae39dc1b8f08006c1aa80632f854b2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/alloc.c,116,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&git__allocator, allocator, sizeof(*allocator));",1410c0088c6501760b18bf3e53a1b808386edb16277f9406e9d1727dd6271f0d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/allocators/debugalloc.c,21,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(ptr, &len, sizeof(size_t));",d2b6da4328832b03c0fa6b90b0592678be02be03ec051392f6356822f959eb8f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/allocators/debugalloc.c,46,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&original_len, ptr - sizeof(size_t), sizeof(size_t));",b1a5a15594d3dd780dba7f103a14a9861772f4727850dbb4120c38380e33e756,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/allocators/debugalloc.c,47,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(newptr + sizeof(size_t), ptr, min(len, original_len));",cde33148af72cf30da260fa06224df9d2779717155e0d8537747817da602e983,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/allocators/debugalloc.c,53,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(newptr, &len, sizeof(size_t));",f6b289d39e2c812b804ea7e83d37a4ce15e45b20667b90158a4900eb7c4d4faf,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/filebuf.c,68,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buffer[GIT_BUFSIZE_FILEIO];,2ab37ef35b084dc68668fd6e5d0cb23b75efcc8fb294817e9a80f78a8a447f26,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/filebuf.c,371,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(file->path_lock, file->path_original, path_len);",b40926bc0abecfba5e04f8ad547d41e38aa23e41c0ff09e7430bf61de1064614,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/filebuf.c,372,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(file->path_lock + path_len, GIT_FILELOCK_EXTENSION, GIT_FILELOCK_EXTLENGTH);",0bc07f41c6818e3794bee2820f7fb3a99d3cc666f8e5aa64648c37020e0b18ab,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/filebuf.c,467,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(file->buffer + file->buf_pos, buf, len);",e11176ed0a7a69f78858ad53106beb87367814fe031885cc5c10b8caad6b93b4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/fs_path.c,381,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[GIT_PATH_MAX];,c72b3621ee9406172c6e99fb2e5d212bb856ed980517ea6e83153d728a3de717,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/fs_path.c,776,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[GIT_PATH_MAX];,c72b3621ee9406172c6e99fb2e5d212bb856ed980517ea6e83153d728a3de717,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/fs_path.c,970,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(path->ptr + (i * 3), ""../"", 3);",e56431f6342ece11c8bda75f53be1b4394b74f367cc1d363628884fdfc882b5a,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/fs_path.c,1123,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,typedef char path_dirent_data[sizeof(struct dirent) + FILENAME_MAX + 1];,f0321e451b2530069ac98e70d1dfc09c22fd8f401932600e24e7f07fdfbcb0f8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/fs_path.c,1279,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&diriter->path[diriter->parent_len+1],",50e077f72b6891e2ce5ac388b2e64f33db221dbb6644d4b533ba010acf3b95a7,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/fs_path.c,1561,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *component,",1632fd095599fd7396e1524687087acc16b79200c2b107d035299efb06d547be,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/fs_path.c,1563,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char dospath[3],",72cc1f8f07f98074ff856aca991ced8f86b32c2ae0c90cde495f15d949ffba38,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/futils.c,223,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *path,",76703fe07b6c3fc731612d509337ecd85293676d5119162288c8afa7b68e5d9e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/futils.c,224,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char checksum[GIT_HASH_SHA256_SIZE],",a441b7af0bf4bae4cd927f2ef035d81cce9acd7262080c1ec87bd71b6b818686,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/futils.c,231,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char checksum_new[GIT_HASH_SHA256_SIZE];,65824f0598afbabe74983e6649aa8d112bdb0656fc19b8cb0a3286872d974eb0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/futils.c,283,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(checksum, checksum_new, GIT_HASH_SHA256_SIZE);",1baa775edf7e23050d2c674c67f584bbfeeeb906ff3bb8e9c4a843bf469e642e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/futils.c,700,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(cache_path, make_path.ptr, make_path.size + 1);",5ba77a7d35f8425330e82f116829c63f3450d9af5d6693bd1adc75f2a34c0260,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/futils.c,902,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buffer[GIT_BUFSIZE_FILEIO];,2ab37ef35b084dc68668fd6e5d0cb23b75efcc8fb294817e9a80f78a8a447f26,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/futils.c,1182,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(target, source, sizeof(*target));",afdbb80c739ae047b1f86bfe6c478970dafb2ffe7d858d354a7cc4e228e68698,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/futils.h,27,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *path,",76703fe07b6c3fc731612d509337ecd85293676d5119162288c8afa7b68e5d9e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/futils.h,28,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char checksum[GIT_HASH_SHA256_SIZE],",a441b7af0bf4bae4cd927f2ef035d81cce9acd7262080c1ec87bd71b6b818686,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/hash/sha1dc/sha1.c,195,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(W, m, 16 * 4);",34c795483702f66157445b8ff7c16e37ce79f859e94efc7434f54196b3c16021,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/hash/sha1dc/sha1.c,1832,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ctx->buffer + left, buf, fill);",5a3dce7acb9f2d3b27c4ed3459a32154798f0b68f96ac5650402804ac269e391,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/hash/sha1dc/sha1.c,1845,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ctx->buffer, buf, 64);",692ebe5ac281b987ab8f47d5b909d4daa20a9192a1b769be1c0eaddd950eab58,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/hash/sha1dc/sha1.c,1854,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ctx->buffer + left, buf, len);",78d9529f52a3dd670f61d66bd86c7cce0b1642e00a15ce8b2f63ff6aa8d4cc21,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/hash/sha1dc/sha1.c,1858,23,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static const unsigned char sha1_padding[64] =,2580f3a7a1b7c4e0286c209735fd0bf26cc760b72460ed881d3fc278e69134db,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/hash/sha1dc/sha1.c,1866,26,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"int SHA1DCFinal(unsigned char output[20], SHA1_CTX *ctx)",99680a71182ca5b235b5c4f24fbb01d700ef6993b5e6297299c18250a695af8d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/hash/sha1dc/sha1.h,42,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char buffer[64];,5a7522c829f03b67276ee4f7c5878b37aa1ec8223cd4e048d86ad39df9d959aa,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/hash/win32.c,121,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char dll_path[MAX_PATH];,443655b35ed8849d485f72653dc2370cccc0863a5168d57a391da94f6e6268df,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/net.c,1016,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&tmp, a, sizeof(git_net_url));",8f894b24a9d2ecc30df32c86735032d17f674e22a179b35c73d7bef6b31f67ff,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/net.c,1017,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(a, b, sizeof(git_net_url));",357bfdd9d51006b317e5072e75793f542bb3d21492818744bc8480f362ac10bd,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/net.c,1018,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(b, &tmp, sizeof(git_net_url));",21f10ebc5d9f3361abcaea100c3787af96f1f0732dafc8ddb3b3670134d07337,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/pool.c,19,12,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	GIT_ALIGN(char data[GIT_FLEX_ARRAY], 8);",f4983283773c6a446253f51b3d6ccc8781358dd6a8c6cca0a559678d47856d45,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/pool.c,174,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(a, b, sizeof(temp));",1abee726cdb6beb83907279123552f220afe990f1da517b14e32f7de1f9a18ec,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/pool.c,175,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(b, &temp, sizeof(temp));",cc484f0ce0187c87fa42505037e1bae5fe95e6a3393247da890a58ec3f28e064,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/pool.c,216,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ptr, str, n);",93354b33fc46df80ad60dc8be1bd7967caae39dc1b8f08006c1aa80632f854b2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/pool.c,254,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(ptr, a, len_a);",9df0371e4a3806023812b075f5cc11b900e02b9386e9aaaa718a0c1f1f251e53,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/pool.c,256,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(((char *)ptr) + len_a, b, len_b);",2a3e1aaa0f2d2a5faa47c8b7120a4d4fefa35b35e163df4bf05ee941513a2892,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/posix.c,44,26,2,2,integer,atol,"Unless checked, the resulting number can exceed the expected range (CWE-190).","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended).",,CWE-190,		ainfo->ai_port = htons(atol(port));,841d02d4e0a38b33af75f6de241bdbe8bfb98349ae63c8b67ba8e5d2d6f173fa,2.0.19,FF1047,https://cwe.mitre.org/data/definitions/190.html
repos_cpp/libgit2/src/util/posix.c,46,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&ainfo->ai_addr_in.sin_addr,",a499b37e22f56cd93c8ee9d3a7aa6ef7963b29f033410cd05ea91f92bce0876e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/posix.c,72,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(ai->ai_next, ainfo, sizeof(struct addrinfo));",58427b736f96fafe56c54b8742edbc6ac205ba986a21e4b0bdf141eb643df500,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/posix.c,73,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&ai->ai_next->ai_addr_in.sin_addr,",092fd88ef55809f1ee1226632908b50784d22d682bc1c69fea252f37659127d3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/posix.c,127,9,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	return open(path, flags | O_BINARY | O_CLOEXEC, mode);",e1756b2b9825ef7040e0903f02beeb78e49e5cee2282c167eb3a3f43322262bc,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/src/util/posix.c,132,9,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	return open(path, O_WRONLY | O_CREAT | O_TRUNC | O_BINARY | O_CLOEXEC, mode);",7d42d1073377410e1bd8f5b9541f62e0490711f58aabc7cb10fa9d7010e4ef46,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/src/util/rand.c,96,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	if ((fd = open(""/dev/urandom"", O_RDONLY)) >= 0) {",438c5dceb19955b2a57581dbaa977d497e07ee71828ffe1655c9b18ef279bcd3,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/src/util/regexp.c,80,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char errmsg[1024];,f54059603cc297e05a8c9bd7c35891b915bc12434987efaa0318220767474069,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/regexp.c,162,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char errmsg[1024];,e5ed98fd5f748bb7af135bb5c525383e353500b485ffa4dfe591c236b1a6ffd5,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/sortedcache.c,43,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(sc->path, path, pathlen);",cfda88cc48f8d8cf3cbc25bb8a8403f8e8b723fc9b3d6e43794003b45b92c403,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/sortedcache.c,110,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(tgt_item, src_item, sc->item_path_offset);",bd6106ef9693e21005ae9ea90122ae1715233009f992ce15f6d99666f5557fad,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/sortedcache.c,294,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(item_key, key, keylen);",86487c2ee021e8e4a493e29d88b1dcaf29c774f5411291cc5ed72edba4fdb8fc,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/sortedcache.h,41,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char         path[GIT_FLEX_ARRAY];,c6428c4ffb8238a8c487a977eced31bcdb83da61b4b105e9332cdbc58566cedb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/staticstr.h,20,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char data[GIT_FLEX_ARRAY];,8b586d9577398f2fff03d594c7d088c3245f7e5d264a835e2aaf06e740cd2bb4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/staticstr.h,27,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char data[__size]; \,dc7cb5cf03063379964e69c436b233722d6e9f76069b164cf2afcf6cce054bd3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/str.c,15,1,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,char git_str__initstr[1];,0b55bae955354e9d5710e825c9d2f0b10cef48a0c0cb8ac38b19324ac50c02e5,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/str.c,17,1,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,char git_str__oom[1];,4b1e01ecba4aa59980e397a6264f215db0f2b71e930a64ac81e42fe84cfc471f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/str.c,363,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char b85[5];,5529e8e098165feb3621f090dfc3aa9d16d13c116524121aec3054b722bb6055,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/str.c,801,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(buf->ptr + strlen_a + need_sep, str_b, strlen_b);",cc3a70657b4f2e7d81e584f46cb3acd143872dbc4564ecbf417ab723e31b0303,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/str.c,849,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(tgt, str_a, len_a);",6dae333746824299854e88309bcfcd7e8e47cc89448aeb775017cb1530df91b6,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/str.c,855,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(tgt, str_b, len_b);",c53fbca5f6b91230bd6b275bcea5b199b8b00389bbb5ca16c117d1d4c0df368e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/str.c,861,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(tgt, str_c, len_c);",d622ce3276afeccde6ae297a2ab2e7d8994ec50bf2fc7337d0cb444500d2c22c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/str.c,916,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(splice_loc, data, nb_to_insert);",3722f53038602d0851e614c1b63af12cbcf560b3122c3ea0683ca5e1e6d3b461,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/str.c,1144,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(out, scan, copylen);",6a1ec80855f4c019e27a29add2cac86cfe5d34553aae11425df8b872ae267e27,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/str.c,1156,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(out, scan, remaining);",fff2767916ef50a5923edd86cabfbc8b212839fe843c5b39d48b94fc3bbe9775,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/str.c,1198,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(tgt->ptr + tgt->size, scan, copylen);",ef49e5b54d1b1a58a74770786817402fbd0798f563fafb066c4d1a1b1ca4b15b,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/tsort.c,220,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(storage, &dst[curr], A * sizeof(void *));",f5f8f121ed102c9e371ad96209098ae5b2e82e331fcd4705fc863a2fa5ddd4d5,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/tsort.c,236,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(storage, &dst[curr + A], B * sizeof(void *));",4670b73b01c73f8ee9d6e30990ee3312dfc724ad86f6c21d096d34d83fd1260c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/unix/process.c,197,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char buffer[status_len], fn[128];",9dc406e0659530ff6a6b9d814130166840832049f2dafd6eb4d54b476af357de,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/unix/process.c,212,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&fn_error, &buffer[0], sizeof(int));",61657b3d3d91a5673f0a21c0258dbc5e182ddf39fd8897f451a5730d773ab2db,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/unix/process.c,213,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&os_error, &buffer[sizeof(int)], sizeof(int));",64a974f7e014c23846701093a0c386794e6312d6c1ff7cd016b0e107bdc12cc2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/unix/process.c,214,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&fn_len, &buffer[sizeof(int) * 2], sizeof(int));",78c5d7c28ea031f465cf6546832e5005d09e0025ca989f23d191dca8c092abd5,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/unix/process.c,255,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buffer[status_len];,d0d7d00f7c0817a4d6e066e351728f20143bf848f2371097420a971c96a6df10,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/unix/process.c,262,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&buffer[0], &error, sizeof(int));",0fba4918c182a30b88712029943270357471dca64efe4e9fed8b83320e21b4ff,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/unix/process.c,263,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&buffer[sizeof(int)], &os_error, sizeof(int));",4f3c2ef3a665cae24760490762bf58243fe40eecb7c8d90957e51cd07df2352f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/unix/process.c,264,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&buffer[sizeof(int) * 2], &fn_len, sizeof(int));",393e7c88d628107ec6b8f3594d0b689bfc4edf3944463cf4f28b2f2d270aee43,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/util.c,698,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char tmp[256];,12dcc0bf24b3cc829359bb335c00fe6c871783283073603f730284963b00a748,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/util.c,702,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(tmp, a + elsize - n, n);",dc991afa33eacfe2faa8ce50da37e0be51b3d6f086b2aeabf0cd34cd89571a1d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/util.c,703,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(a + elsize - n, b + elsize - n, n);",834027743e0f6e54ad573f8a59cf3b8331ebca25c46e1a5f80d5b545d7e641ee,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/util.c,704,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(b + elsize - n, tmp, n);",7b6b1e274e7b8498653757bbf1d736dc7bd16477870314935e228ae56719fd98,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/varint.c,32,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char varint[16];,480ba8079b547c21eee8c6cd2fb432e6a441b83bcbb7f237c1bd24dc0951b46f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/varint.c,40,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(buf, varint + pos, sizeof(varint) - pos);",65e2f908c012c4db6a813873fe8736f08ab037793fe4059c043fb0db26a58050,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/vector.c,73,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(v->contents, src->contents, bytes);",c5c3e469650641a4f352af14d75263182d6966238714d10e3d155d8c2d2f0b42,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/vector.c,322,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(a, b, sizeof(t));",d9746bb9850f22d65f1477b5460cfc958255bf42fc1342044a3f6a07bdd82c50,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/vector.c,323,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(b, &t, sizeof(t));",2a94bf0d931aeba118bbd0c09a27cf6ae2bddfcff97281354dc6bcef80af0e39,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/wildmatch.c,42,23,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static const unsigned char sane_ctype[256] = {,b464ee2a7615705cd1e2fb6ad8ef2d9c524ad0d32260d42add8971082aabeb8a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/dir.c,29,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(new->dir, dir, dirlen);",13f4f56da42c8a25d5f9693b82fee4fd8fcdfe802c2d025a127772c7edaf1fcb,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/dir.h,24,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char dir[GIT_FLEX_ARRAY];,ba52ece98c41b95abc19c044c5fad472a8fa297d1ffc29098e8a10a676aa27ba,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/path_w32.c,176,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(dest + one_len + backslash, two, two_len * sizeof(wchar_t));",ce636ec9be818f75e0c8f72146c65aaded1e3e1036b5ec87754f2c7a497cad4d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/path_w32.c,334,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(dest, PATH__NT_NAMESPACE, sizeof(wchar_t) * PATH__NT_NAMESPACE_LEN);",9b10113cc63b47263465aa905918b052f1a58cfe9f1aae1cbd5dcec046e93464,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/path_w32.c,350,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(dest, L""UNC\\"", sizeof(wchar_t) * 4);",10b288fd6e5207cd68e85aa82dd4d984b77bef7b50f3d2938f731e1ecde7c7e9,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/path_w32.c,431,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(dest, ""\\\\"", 2);",6e450300460b587f638975230f1acaab3bc65f8d4f8284a2c4c438cf1672e062,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/posix.h,28,27,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"extern int p_utimes(const char *filename, const struct p_timeval times[2]);",7455d32febc13613449d9d12b80780ab5a3379f5c5b132c7a4a8f418cf634420,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,409,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(buf, target, bufsiz);",aa6a533ea3c8e037fd7f09ebcaa51ee3ec926f66cb7eca65d0c41747e6ef1ced,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,574,20,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"int p_utimes(const char *path, const struct p_timeval times[2])",a56e6fd39e01317b1a9f4ab329f9ad79f41a802de26775fa5d56aeec49fc679f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,948,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy (result, local_result, sizeof (struct tm));",d573cb9d3ea3e505be636202e23d407044c8234bef7791b08abd47df4c393862,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,960,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy (result, local_result, sizeof (struct tm));",d573cb9d3ea3e505be636202e23d407044c8234bef7791b08abd47df4c393862,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,983,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(dst, addr, addr_len);",5eb72f173fb711dd0642d7a0edc6fc09aa09a2acfe9185a12e62eb303028da01,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/utf-conv.c,39,8,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"	len = MultiByteToWideChar(CP_UTF8, MB_ERR_INVALID_CHARS,",24ce6c2b344c00cb4823d82cafddcbf61bb1f13260f613adc2bac8402ad756bc,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/utf-conv.c,90,15,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"	utf16_size = MultiByteToWideChar(CP_UTF8, MB_ERR_INVALID_CHARS,",40237fc1b35e902e8d9ab71172993297d39744863476f43883e54ccf01111173,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/w32_common.h,45,9,2,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,typedef wchar_t git_win32_path[GIT_WIN_PATH_UTF16];,aad3307fefacf5307e8522be95a00ae96edb5998ea89edf8cab03a70fc92acc8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/w32_common.h,46,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,typedef char git_win32_utf8_path[GIT_WIN_PATH_UTF8];,5511e0c370568499a5a887bb3709ab732c5bea55cbb024887ce79ad4b3669fe9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,104,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char extra[MY_MAX_FILENAME + 1];,c6110788be621f1fa46f1f9bec4a4104d9c5e7cf4d19a0ed783842c34409bd33,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,110,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char detail[MY_MAX_FILENAME * 2]; /* filename plus space for function name and formatting */,07f07cb2c93e8ce64fd0743aec24099d3920d42ffb3578eee875dae19c36c053,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,160,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&pbuf[buf_used], detail, detail_len);",bb594897ef71381520e27fc8dfb836f30a955fabea249c02470b175ba0c8e6be,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,172,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(&pbuf[buf_used], detail, detail_len);",bb594897ef71381520e27fc8dfb836f30a955fabea249c02470b175ba0c8e6be,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,214,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char uid[STACKTRACE_UID_LEN + 1];,d1fa39b5069500deecc3e367948a5ed75d60e3f298019efe19448d8add4e004c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,286,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&g_cs_rows[g_cs_ins].raw_data, pdata, sizeof(*pdata));",5b4e11c8930d8811e38d2ca50360c279a1925ae5fa2aa7d58f8a1201f49def79,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,287,3,4,2,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",Risk is low because the source has a constant maximum length.,CWE-120,"		sprintf(g_cs_rows[g_cs_ins].uid.uid, ""##%08lx"", g_cs_ins);",954c9bddc134eb43e8e0b00838c6b3631990184790b47821d6c496fb4d2dc816,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,362,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[10 * 1024];,a6ac4055f1501bc6f97f4ac1e41af7bf7e6f6b91d3a6e2b457c9b1516e4fffa9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,372,3,4,2,buffer,sprintf,Does not check for buffer overflows (CWE-120).,"Use sprintf_s, snprintf, or vsnprintf.",Risk is low because the source has a constant maximum length.,CWE-120,"		sprintf(buf,",5417c801b746b3639223c647f82475feb5c02c4b0b05efd269bf6bc6a92fc83c,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar.c,772,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[4096];,a389579473b54dc7c8589adb0f5b910e8b3913fd32e00187ed9e10200a097378,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar/fixtures.h,5,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	static char _path[CLAR_MAX_PATH];,7d2fcad02ffbea23448d38f51118f39798f86166edcae9798abf59b85c449ff8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar/fs.h,158,12,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"	cl_assert(MultiByteToWideChar(CP_UTF8,",f118ecbda22ce970b0d3438809ea5f08dd4ef931d52710d68d0f923add9bb295,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/fs.h,246,12,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"	cl_assert(MultiByteToWideChar(CP_UTF8,",f118ecbda22ce970b0d3438809ea5f08dd4ef931d52710d68d0f923add9bb295,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/fs.h,253,12,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"	cl_assert(MultiByteToWideChar(CP_UTF8,",f118ecbda22ce970b0d3438809ea5f08dd4ef931d52710d68d0f923add9bb295,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/fs.h,394,21,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	cl_must_pass((in = open(source, O_RDONLY)));",2bf81b12f33a48cb2497b5c159140e888d8f60abd085310a576067837bf23d96,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/tests/clar/clar/fs.h,395,22,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	cl_must_pass((out = open(dest, O_WRONLY|O_CREAT|O_TRUNC, dest_mode)));",e8313a787bea9465f73f57aeccd516cd337e7efc5795fb0b340cd027f9fffc3e,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/tests/clar/clar/fs.h,411,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buf[131072];,9bbe35caccb808a1f5624ebd14aa3b56740ca93bf5db615e32af3abbe2804b7c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,12,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static char _clar_tempdir[CLAR_MAX_PATH];,ce3f708f669180e96e0414c31b146607a594bf38375c10865a4d94fa2492d812,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,15,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static char _clar_sandbox[CLAR_MAX_PATH];,e0a0723dd2eb23aa4b05e635baed84585de5268318cba844b4a26c6b89cf1bb0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,88,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char tmp[CLAR_MAX_PATH], *p;",06dbb8bf0b596e11b0454a6493bb6dc74753ee2eb1199a1694210b464b0c0d15,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,108,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char tmp[CLAR_MAX_PATH];,f623e68bfac3cbfb077cf4c05aa92bbfe72bd4d005110dde06b5141caefd8291,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar/summary.h,27,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char iso_dt[20];,76e30e88e1a5144faf4dc9ea25119e0a8f63756d92ff41b16b09d4915592791b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar/summary.h,69,12,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	if ((fp = fopen(filename, ""w"")) == NULL)",aa6af7ad278d0faa817dd8da90306fe4e12e41721e12c9ca590e69496fad01a4,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,10,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char msg[4096];,4d23db2f516b608f47e0c44e0ada7a230acf3d761898666e98cf13cc25876b43,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,279,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	static char url[4096 + 1];,adb97eb9ed298fd4c54da3aafffe4a0cef2fd73f9142e5ba55e5ff3208be6fed,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,327,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	static char _temp[GIT_PATH_MAX];,f9f9a7ab37fbb772679a40ce92d5bc5975a2000ac26352930eedad67da0fab42,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,418,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[128];,a7e6ef4b73cb0cf74f88a6a9d4e04522c79ea9387f8f272e9d0ac542fa7168aa,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,534,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[4000];,68f135dc9d61f4f3e3627dc5392c24e01febf491a78d2275dde5de82b1f2b4b5,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar_libgit2.h,65,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char error_msg[4096];,e1dfbea1d6f44ef533fa105d03d6cbe5fabcf0fb65b3d6879977d340c016c882,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar_libgit2.h,107,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buf[128];,a7e6ef4b73cb0cf74f88a6a9d4e04522c79ea9387f8f272e9d0ac542fa7168aa,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar_libgit2.h,145,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char err[64];,cf6d1406b9bbe5ff2b9018b24402c9710ab3ce5297d89abb19a071d27d33154a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/clar/clar_libgit2_alloc.c,49,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(ptr, &len, sizeof(size_t));",d2b6da4328832b03c0fa6b90b0592678be02be03ec051392f6356822f959eb8f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar_libgit2_alloc.c,62,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&len, p - sizeof(size_t), sizeof(size_t));",34f1df1e4907075f3d41b37bd4b0e6d16e0143dda58d7d39be923b663da7178d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar_libgit2_alloc.c,75,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&copybytes, p - sizeof(size_t), sizeof(size_t));",22fb03a81a7bb97315e991f18b42667b9187d75f609e957ab8879c6fad3f7909,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar_libgit2_alloc.c,84,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(new, p, copybytes);",d69c4cc92af606ee7846ceb5a2ed85de50ecfa4a98b37210aa02f8f676a90ab3,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/attr/macro.c,23,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *names[7] = { ""rootattr"", ""binary"", ""diff"", ""crlf"", ""merge"", ""text"", ""frotz"" };",f68b8dda52298b8d7635d77dab9d6f8022c53f60a2a9541a736814cf3040ea7a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/macro.c,24,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *names2[5] = { ""mymacro"", ""positive"", ""negative"", ""rootattr"", ""another"" };",308b6ae73b2ada1d1bad0b6310b350e85224d65d13965ca43598ac161b0177dc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/macro.c,25,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *names3[3] = { ""macro2"", ""multi2"", ""multi3"" };",cbe10aa147ced323ac660c93f600dacaaf4d5a0c8901a32f2afae66b5ae76bef,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/macro.c,26,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	const char *values[7];,a55da436d53fad89df73dabc600c897ba68b1c509b5d1d7b94715ea923dd8f33,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/macro.c,57,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *names[6] = { ""rootattr"", ""positive"", ""negative"",",3da6841afbc5102347743725d238156116c36133f5a5382854e97affafa9881e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/macro.c,59,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	const char *values[6];,12854bf09b1568697f64300ffb433069be8fec22a273d2db5bfbb2f28f6f2f58,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/repo.c,104,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *names[4] = { ""repoattr"", ""rootattr"", ""missingattr"", ""subattr"" };",f25caf6aba2c9686a8210ea99d5ae4e64ca44faa574c894bdb4385b96aabe149,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/repo.c,105,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	const char *values[4];,78576b1054e987153cdbbc8606a3455259f782035d7b972a3534ab1406a44c16,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/repo.c,131,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *vals[4] = { ""repoattr"", ""rootattr"", ""missingattr"", ""subattr"" };",034a55826c193b221afd6d89da534e0c10e6c385ec2be9dde2e6a93487e15c6e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/repo.c,272,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *names[4] = { ""test1"", ""test2"", ""test3"", ""test4"" };",d145bf4be1150f7dabc7fb2f4f366d19d2990243c70b7f7c9f327e89f4956ffd,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/repo.c,273,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	const char *values[4];,78576b1054e987153cdbbc8606a3455259f782035d7b972a3534ab1406a44c16,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/repo.c,314,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *names[1] = { ""fake"" };",259786d9e475ce071213ca44a2259d387bfd542f3afa9a261af8839719c57564,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/repo.c,315,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	const char *values[1];,af251f941c4c1736b6446e1f8ac8b581b9b9e69a87585bd7f811051e8dd1688a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/attr/repo.c,354,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *values[2], *attrs[2] = { ""foo"", ""bar"" };",4e9bea64605d31e1d87238c90707411c904a501e1a073383fb89246173ab9ce6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/blame/blame_helpers.c,20,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char expected[GIT_OID_SHA1_HEXSIZE+1] = {0}, actual[GIT_OID_SHA1_HEXSIZE+1] = {0};",71c3c7a22201c5a17697f8b20af75ed7078b814b8855359290fefb838784db8b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/blame/blame_helpers.c,25,3,4,2,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",Risk is low because the source is a constant string.,CWE-120,"		strcpy(expected, ""0000000000000000000000000000000000000000"");",05eaa809d4d9e933e307770ae04c0a2441940f4f037816354eeddbad91e19f7c,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/checkout/conflict.c,52,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid_str[GIT_OID_SHA1_HEXSIZE+1];,73377432b1ea559561fee2230774e498e8f66065e9ccb0cd683dcaec217cef9c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/checkout/conflict.c,54,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[128];,c25d337fb648603d1ed4b482d2c6ab837009d9bce7e2320e7faf0fd2561f6fb4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/checkout/conflict.c,58,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char ancestor[64];,aa064727094e8301e21ff0f3e00c7eaf6dee12dc0b706d18360cf63a16628fd4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/checkout/conflict.c,59,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char ours[64];,567b79d27296388310b4100c5481db416683aa64af5c226de110fc3494f869e5,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/checkout/conflict.c,60,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char theirs[64];,2bde170c5df518bc2d1a343d83dfce468303403f1b293b535e8b38bfc39cfde6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/checkout/conflict.c,201,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char actual[1024];,cd76afbfc90ca621a2fb624f7e3a59aea7fc5f2c209e28e9768642a77d3f3fa7,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/checkout/index.c,234,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char link_data[GIT_PATH_MAX];,5feef4a2f0bbd78ceb9d84f75361969bbda43560740df4be250bb4cf085d68f3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/checkout/index.c,297,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char link_data[GIT_PATH_MAX];,5feef4a2f0bbd78ceb9d84f75361969bbda43560740df4be250bb4cf085d68f3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/checkout/tree.c,912,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[1024] = {0};,32c070fda1e9631f1d0aefc87d010c924d5a0dd0c92b742ecc2d14acfb60921d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/checkout/tree.c,1265,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(payload, in, sizeof(git_checkout_perfdata));",eae93dc27f9a68f1172363039a3780a471e4ecbc1d3ec2b16b007045535a8eb8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/checkout/typechange.c,320,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char expected[8] = {'M', 'M', 'R', 'T', 'D', 'R', 'A', 'R'};",a3fc6f348a1841181430660228df1f2cb944eda28f23ae3556764bb128146da6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/env.c,7,14,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static const char *env_vars[NUM_VARS] = {,61d9ce0bc00d6d9421ab7f04ef6cd880834b828af3f257014108f7d71587d074,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/env.c,12,14,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"static const char *env_vars[NUM_VARS] = { ""HOME"" };",d0ae02d808db348fae1cee320e38bc44ba6dd64ca70c131217bfa1517befaf27,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/env.c,15,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static char *env_save[NUM_VARS];,67c30e1a4b9802e322d1b4ab891c8109854c637b22b2dfb9646b84cc1391307b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/env.c,86,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char testfile[16], tidx = '0';",516ebf6180fbed64cc634e4c32caf6b4ee0de2e496dddc2b920279ed88d4181e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/env.c,253,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char testfile[16], tidx = '0';",516ebf6180fbed64cc634e4c32caf6b4ee0de2e496dddc2b920279ed88d4181e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/hashsig.c,151,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char *text[3] = { tabbed, spaced, crlf_spaced2 };",65278dbdfd649d8af5c6ba908aba1187ec14d6516f042fbfc8ec08e72c4394ab,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/oid.c,173,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[GIT_OID_MAX_HEXSIZE + 1];,569928498e6345f97b72405530c5ad55bd2acd065067a5f642a729e74fa9d5c1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/pool.c,10,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid_hex[GIT_OID_SHA1_HEXSIZE];,d4036b479321eaa2159536ad066a74d7c996332bab6964b452dd31070183adb0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/structinit.c,47,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		if (((char *)one)[i] != ((char *)two)[i]) {,4d37b93bf89f349449818bcef8a87e5ecec97e7aa3236827476083dfa18da9e0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/structinit.c,47,29,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		if (((char *)one)[i] != ((char *)two)[i]) {,4d37b93bf89f349449818bcef8a87e5ecec97e7aa3236827476083dfa18da9e0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/structinit.c,48,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char desc[1024];,97437b573e3ae153efdadeeeafefa4dd78357cda100f0a0bdb761c7fbbb2f1c1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/structinit.c,51,16,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"				name, i, ((char *)one)[i], ((char *)two)[i]);",520e1e72062c6658e5a0b5f2ce02fd8bf09c52fd277da528e9b3a869a3b692fb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/core/structinit.c,51,34,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"				name, i, ((char *)one)[i], ((char *)two)[i]);",520e1e72062c6658e5a0b5f2ce02fd8bf09c52fd277da528e9b3a869a3b692fb,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/delta/apply.c,7,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char base[16] = { 0 }, delta[] = { 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x00, 0x00 };",86774a4fb9de9cf9bbea8f297606ab829e135fd4a6aa5dfc098b31830433268b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/delta/apply.c,16,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char base[16] = { 0 }, delta[] = { 0x10, 0x70, 0xff };",95eba7ac9b3c8abd882d8f93428f590830b4157607a57cf2e1286091c2220b50,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/diff/binary.c,227,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(&contents.ptr[i], ""cITIES"", 6);",6755c0a70dfd56c45b20329cd9fe9365d6be14aa6dc28481444f44336c35f734,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/diff/diffiter.c,335,14,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static const char *expected_patch_text[8] = {,62242beecb655ac0363747976019b53a650f669aaee751bef4b448d84853ca68,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/diff/drivers.c,32,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&actual->ptr[offset], ""100644"", 6);",f72ab534359fe8ba75387ca9e1c34777ba7afeb1220506b915218e00bf28bfba,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/diff/drivers.c,224,15,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"			FILE *fp = fopen(""userdiff/.gitattributes"", ""w"");",3e786bcc21408409f509f7a7bfd5c72025b49377d58371c693b95447569aa987,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/tests/libgit2/diff/externalmodifications.c,26,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char big_string[500001];,0d2c001c37644aa3b0d82dfab99d3736315d2d9b527677cd5cda52c6a06c50c0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/diff/workdir.c,2046,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	unsigned char initial[GIT_HASH_SHA1_SIZE],",dd9f4fd2bd8018c24a792fcbfbe1660562da9d9c1a6bd2960750ad09b4ab9ebd,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/diff/workdir.c,2063,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(initial, git_index__checksum(index), GIT_HASH_SHA1_SIZE);",a3512cc766dccf25f9578d71fbf71f04658fc487e12bf909896736e10073d1c4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/diff/workdir.c,2079,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(first, git_index__checksum(index), GIT_HASH_SHA1_SIZE);",d75ba623577dba96265632ddaa42567669c3af3a749d972cc265cfca152e42a4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/diff/workdir.c,2090,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(second, git_index__checksum(index), GIT_HASH_SHA1_SIZE);",de5dcd3f03b1d82c5d984271d84f34f189ad6a8cccb6199ffcbefe430153b1d2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/filter/stream.c,68,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char inflated[CHUNKSIZE];,ef8dff02a688308b4a86430339ae2a6a5839ecf6552813a8cf966d70d1b9586f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/filter/stream.c,141,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[CHUNKSIZE];,f2f934c3279075e8d2f98c41009a01a6a1af4f8936d28aa9c2b429896bdcc948,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/graph/reachable_from_any.c,204,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"				char parent_oidbuf[9] = {0}, child_oidbuf[9] = {0};",32ed0914bb40d895393166c880aea3666f647d24595b3160d4c1c2c6f15f9b9c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/index/addall.c,165,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char *strs[1];,dfb490652887c312e89836058d808ac5c46763a094f354bf44f9c36b98104d00,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/index/bypath.c,250,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&new_entry, entry, sizeof(git_index_entry));",4461a977799b76ad7a88d937c9711056cfc07284fb5d8fcb5d2052b3cc675177,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/index/bypath.c,276,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&new_entry, entry, sizeof(git_index_entry));",4461a977799b76ad7a88d937c9711056cfc07284fb5d8fcb5d2052b3cc675177,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/index/bypath.c,308,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&new_entry, entry, sizeof(git_index_entry));",4461a977799b76ad7a88d937c9711056cfc07284fb5d8fcb5d2052b3cc675177,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/index/bypath.c,345,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&new_entry, entry, sizeof(git_index_entry));",4461a977799b76ad7a88d937c9711056cfc07284fb5d8fcb5d2052b3cc675177,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/index/rename.c,70,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&new, entry, sizeof(git_index_entry));",fa1840e0210f44c0dd0186ec94042733184868343c61fd638f80bb51ebebbaee,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/index/tests.c,15,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,   char path[128];,c25d337fb648603d1ed4b482d2c6ab837009d9bce7e2320e7faf0fd2561f6fb4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/index/tests256.c,15,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,   char path[128];,c25d337fb648603d1ed4b482d2c6ab837009d9bce7e2320e7faf0fd2561f6fb4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/index/version.c,86,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char path[250], buf[1];",5b9b5e1e05c905d5ec2f4984d50b8f0fb6714b65e26c90ae8afdcbf24db945ab,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/iterator/workdir.c,464,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char buf[64], sub[80];",b59dd8051b9ec3de6eea53f56258b0a732b18f8996ed82ebc01c493f74976d27,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/iterator/workdir.c,490,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"				memcpy(&sub[sublen], ""/file"", sizeof(""/file""));",25bf9eff56b796300074c0c134ed0882b112f50ccdf356c7fa3f3d09bc63a93f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.h,9,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid_str[GIT_OID_SHA1_HEXSIZE+1];,73377432b1ea559561fee2230774e498e8f66065e9ccb0cd683dcaec217cef9c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.h,11,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[128];,c25d337fb648603d1ed4b482d2c6ab837009d9bce7e2320e7faf0fd2561f6fb4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.h,15,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char ancestor_path[128];,f935cb4acffe2e09f9de600ef335fcf836b08f2f7a0c2779cf803e45202ff462,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.h,16,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char our_path[128];,643f0a61eee979bc3da79cf207ffc5d4c6a6e6364d1e74d6226c890871fbc2fe,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.h,17,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char their_path[128];,4206ce3246021c2900c750ddea03627def9d2d5b248eafefd79aeec5e0dec7c4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.h,26,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[128];,c25d337fb648603d1ed4b482d2c6ab837009d9bce7e2320e7faf0fd2561f6fb4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.h,30,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char ancestor_oid_str[GIT_OID_SHA1_HEXSIZE+1];,2c2fe241f71e7ee6fc21110053c65327e8ee0541468d72670a6cd27f31b670f0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.h,31,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char our_oid_str[GIT_OID_SHA1_HEXSIZE+1];,c5a24e16feb639d7ba9d6bd9f7a9897f1a9d2f6ae7862ae7a1f1f91f98bd1ad3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.h,32,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char their_oid_str[GIT_OID_SHA1_HEXSIZE+1];,9ca78e867abfbd885bdb80176876e4c48467333bd08a7607e710e00ab36dc1a5,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/merge/workdir/dirty.c,60,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static char *result_contents[4][6] = {,debd28a6be51cda694aed5bd733ab9c9ef3743e92f043d6acfcd2ff70220b464,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/network/remote/local.c,372,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char expected_reflog_msg[1024];,247bf2252a0aa86a670eb5119dbd3c8291b650bed8fa70e04ae4aca72e61375c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/network/remote/rename.c,167,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char idstr[GIT_OID_SHA1_HEXSIZE + 1] = {0};,7f7542e99584b5ba9c587658bb5be2ae4a91a4aa8534014aef8d34fd9066d65b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/network/remote/rename.c,209,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char idstr[GIT_OID_SHA1_HEXSIZE + 1] = {0};,7f7542e99584b5ba9c587658bb5be2ae4a91a4aa8534014aef8d34fd9066d65b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/blob/filter.c,9,14,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static const char *g_crlf_raw[CRLF_NUM_TEST_OBJECTS] = {,e61ade3a9f070bd89091702a85646ae82816f11319e51e3fa935aa738c3f0f11,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/compare.c,79,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char out[GIT_OID_SHA1_HEXSIZE + 1];,eb04c07a013855a2b8181edcbd9dd5cad5d78a934b34c8e8c8bba74597e90638,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/compare.c,111,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char out[GIT_OID_SHA1_HEXSIZE + 2];,d25dd797a5b40da033760671c88bbad51bd5db26263ba940fc7a1a0088fc67ed,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/convert.c,10,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char out[GIT_OID_SHA1_HEXSIZE + 1];,eb04c07a013855a2b8181edcbd9dd5cad5d78a934b34c8e8c8bba74597e90638,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/convert.c,55,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char big[GIT_OID_SHA1_HEXSIZE + 1 + 3]; /* note + 4 => big buffer */,9f52a956ab3110fb6dec3082f84d9cf61ba15b7f5d576076dbbfeb1a20bf83d1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/convert.c,89,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char big[GIT_OID_SHA1_HEXSIZE + 1 + 3]; /* note + 4 => big buffer */,9f52a956ab3110fb6dec3082f84d9cf61ba15b7f5d576076dbbfeb1a20bf83d1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/hash.c,27,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hash[GIT_HASH_SHA1_SIZE];,042dc60f5505965aeda3c2e78778dcf17490b30e2c1af3f669a41bee6e03660d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/hash.c,53,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hash[GIT_HASH_SHA1_SIZE];,042dc60f5505965aeda3c2e78778dcf17490b30e2c1af3f669a41bee6e03660d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/hash.c,65,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hash[GIT_HASH_SHA1_SIZE];,042dc60f5505965aeda3c2e78778dcf17490b30e2c1af3f669a41bee6e03660d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/short.c,29,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char numbuf[16];,00e0a07c56206aa7761c22508ef87c89bc2093a688a24f51fa2207c8a5142529,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/object/raw/short.c,31,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char hashbuf[GIT_HASH_SHA1_SIZE];,1e9569c15bdac55971f124b18ee9c6b3d63004eebebd45240e1daed1f118576d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/odb/freshen.c,170,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&before, &after, sizeof(struct stat));",d7b7fdd2525a816d3c67ecf8d0e4c68ccb6de5c11e30c94724baaef4eb3ca506,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/largefiles.c,88,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[10240];,10e3b59ab175505584241e21d16fcb6e59dd190ce5b585675ce53502ef729c7b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/odb/largefiles.c,89,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char hdr[64];,8cfbad115b571995d9622cbc430973e8bcfe501b8d5c1770c41e01fc43675d52,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/odb/loose.c,89,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char buf[2048], *ptr = buf;",815511ca0cb4be879777b56ba9502367125da796fd43e6b3f2a63102b0a1b332,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,44,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char hex[10];,6edd7ec1b1fc97c129b4e1183eb806b7abab37d8824b788230050800c9573e76,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/online/clone.c,872,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&actual.id, key->hash_md5, 16);",24ff5cc421b3ee0690b839da299567814afeadb0bbcbf682b92d964b0963d6a5,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/online/clone.c,874,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&actual, key->hash_sha1, 20);",d56ce0be6f6fad20cd2fa873d11e0c313982ac26012ac365335cffc6a5e34bda,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/online/clone.c,909,17,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	cl_assert((f = fopen(path, ""r"")) != NULL);",84d926d7eb0500d797def61dfdd4657d94bb7cab9fd06bf50fb9963b0679e114,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/tests/libgit2/online/customcert.c,41,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char cwd[GIT_PATH_MAX];,7e5706134a3d3940f2be2050f52e99adc80ec066f4a65f5dbf7d9ef18222c76d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/online/customcert.c,96,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char cwd[GIT_PATH_MAX];,7e5706134a3d3940f2be2050f52e99adc80ec066f4a65f5dbf7d9ef18222c76d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/online/push.c,414,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&push_opts.callbacks, &_record_cbs, sizeof(git_remote_callbacks));",7fa86d92e2131716e304c65999ce20966b27e260eb33738396698be4ddbfaf5e,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/online/push.c,422,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&fetch_opts.callbacks, &_record_cbs, sizeof(git_remote_callbacks));",4a564fabdc4b8bd233d2dd8c40a69f1762491d228bd5e05112fde07c17e386b4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/online/push.c,509,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(&opts.remote_push_options, remote_push_options, sizeof(git_strarray));",4b6d5e027af72645d86cb6b588cfbb9425e4d8202a7c75b226e72c4df5792aa4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/online/push.c,511,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(&opts.callbacks, &_record_cbs, sizeof(git_remote_callbacks));",020e7ea4d0b807e9eada2191f16e79bb0df587962383732f1b8ccd60f31300d4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/online/push.c,525,24,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			specs.strings[i] = (char *) refspecs[i];,cb3f38400640f7f28e55501b1698956958543fc3d55a84083f59c821a68b8250,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/online/push.c,838,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char *options[16];,f97460e552ee3198b6551299482c6ded0ed3717fff387bdb0a44797da6aeca42,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/online/push.c,870,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char *push_options_string_args_test_1[1] = { ""test_string"" };",4aad44c734ba9df450c8c2fe16d80d7286f3d102c662ce330676c533cab72d7e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/online/push.c,873,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char *push_options_string_args_test_2[2] = { ""test_string"", ""another arg?"" };",6c485ec6bcfd3da178449c62e1ead68747412cb0540ad74bfe826c6ef3556fa2,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/online/push.c,876,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char *push_options_string_args_test_3[1] = { ""👨🏿‍💻 but can it do unicode? 🇺🇦"" };",58f23a42f4336877e0cce18cb9d84cb79b49abb0c6699cc1c9fb4dbde999f324,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/online/push.c,879,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char *push_options_string_args_test_4[3] = { ""\0"", ""\0"", ""\0"" };",12e50ee2532d9b89e512f6a6969e0820ea62c1eea3b7a2add787d60135905ca6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/pack/indexer.c,206,12,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		unsigned char buffer[128];,cd065da8a295484a5ca9d580e4a39b15292ed2be63135a819fd214926d9995a8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,10,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char idstr[GIT_OID_SHA1_HEXSIZE+1] = {0};,0f5fc8d4cc4d429f3242e5e2192665269bf35d45fafcae60b0dfd319b348ecaa,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/rebase/merge.c,760,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(&rebase_options.checkout_options, &checkout_options,",87fe816634113daf0ba3215ba51de1833ea609b63db810433587b79b15ca46d9,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/rebase/submodule.c,82,7,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	fp = fopen(git_str_cstr(&untracked_path), ""w"");",2d0b642688e15be0efd80316b5a8dd6fe6d23072c2cc999a33e7ae2728ba9abb,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/tests/libgit2/refs/normalize.c,13,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buffer_out[GIT_REFNAME_MAX];,ff6c1d33662e22d1270786238b170596235496d33ce1b607d9375ecf1486474c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/normalize.c,22,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buffer_out[GIT_REFNAME_MAX];,ff6c1d33662e22d1270786238b170596235496d33ce1b607d9375ecf1486474c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/normalize.c,194,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buffer[GIT_REFNAME_MAX];,f52db696cbc97825ac864bb085854541454b1b800207e145d6603a1724ed967f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/normalize.c,339,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buffer_out[21];,ad9e321fa0c9a805ad658297ac37dd88b982599197057840a274e3096291093c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/pack.c,87,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[128];,46132eacf231df987674de8924ebd73264789288957c93f364cfd2ec4f2b1218,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/reflog/reflog_helpers.c,9,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char old_oid[GIT_OID_SHA1_HEXSIZE], new_oid[GIT_OID_SHA1_HEXSIZE];",0fef6d757df7a59ece48b715393a440bd3a0f0231d68956ffeb57ca851ef354e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/revparse.c,18,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char objstr[64] = {0};,7fecd61f23155e69361236dd7d45ef115fe2ed9756fa5fbdeb0acd4494eb948a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/revparse.c,59,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char str[64] = {0};,451028010fd2ec39c2fddfc9df6548bc6d8ee9b3e3071e01ee240392f5a08d46,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/revparse.c,69,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char str[64] = {0};,451028010fd2ec39c2fddfc9df6548bc6d8ee9b3e3071e01ee240392f5a08d46,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/revparse.c,94,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char objstr[64] = {0};,7fecd61f23155e69361236dd7d45ef115fe2ed9756fa5fbdeb0acd4494eb948a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/revparse.c,658,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char sha[GIT_OID_SHA1_HEXSIZE + 1];,5701c67412378a3bd3c5787a8264198732f8d47e7fe15a51cc418e0d149e87b7,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/revparse.c,696,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char sha[GIT_OID_SHA1_HEXSIZE + 1];,5701c67412378a3bd3c5787a8264198732f8d47e7fe15a51cc418e0d149e87b7,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/refs/revparse.c,732,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char sha[GIT_OID_SHA1_HEXSIZE + 1];,5701c67412378a3bd3c5787a8264198732f8d47e7fe15a51cc418e0d149e87b7,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/repo/discover.c,66,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char ceiling_separator[2] = { GIT_PATH_LIST_SEPARATOR, '\0' };",a3dcad2a87233e059d6800e4d30ef0f84884c2e99f02ce6e90de742747310bab,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/repo/hashfile.c,45,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char cwd[GIT_PATH_MAX];,7e5706134a3d3940f2be2050f52e99adc80ec066f4a65f5dbf7d9ef18222c76d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/repo/hashfile.c,131,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char cwd[GIT_PATH_MAX];,7e5706134a3d3940f2be2050f52e99adc80ec066f4a65f5dbf7d9ef18222c76d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/reset/hard.c,46,15,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	static const char *files[4] = {,ed1c03e9dc3ab41041b15bdf95d8e3cb63a854cd3fa14357723aa6c0c4c8cba8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/reset/hard.c,51,15,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	static const char *before[4] = {,403f8b051757a8f6556743dd775a84eb33ffe6d2d49c685ce70b2d93391823db,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/reset/hard.c,57,15,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	static const char *after[4] = {,15b7d29b87b7fab1338bf8bdbc36c16be06aa17d8ca49effc51cf6c97525c337,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/reset/soft.c,56,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char raw_head_oid[GIT_OID_SHA1_HEXSIZE + 1];,717c6155ec12bcff489dc657944d28b148df91064a2a744fc51c3f8ee445f5d7,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/revwalk/basic.c,53,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char oid[GIT_OID_SHA1_HEXSIZE];,f4a436b2a4177efb96d53fc1e800b0d80a7eff7cf6fea36a6f951cd36828c9ba,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/stash/save.c,508,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char *paths[2] = { ""who"", ""where"" };",26b68fd712e31be150852e02d71d632ee4fa26c737c8677bc3e837ac83f170f8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/status/worktree.c,997,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[260*4+1] = {0};,66df80288ffa7f09f6e1dcf0a872b0f9bef9866659029d8f1d58f53d6e34895a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/stress/diff.c,91,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char tmp[64];,f2006a46042614991e697abce14536ec0fd31f2845c9209e2ba457596ed01a90,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/stress/diff.c,120,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char tmp[64];,f2006a46042614991e697abce14536ec0fd31f2845c9209e2ba457596ed01a90,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/submodule/submodule_helpers.c,16,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char line[256];,d4ef8d9e5a45bf5bb3aa0abd645810a1b6f8267dbfaeaf94fb697aeeae43bb07,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/submodule/submodule_helpers.c,21,19,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	cl_assert((in  = fopen(in_f.ptr, ""rb"")) != NULL);",4ff9d38cb22664fe2e9a3f63df7f2345dfc05141ea24899ac71819c960d2ec39,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/tests/libgit2/submodule/submodule_helpers.c,22,19,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	cl_assert((out = fopen(out_f.ptr, ""wb"")) != NULL);",9c3732dd8a2d398c49612446995c676a1f7a4c413f0b6936b9847da9985bcda4,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
repos_cpp/libgit2/tests/libgit2/threads/refdb.c,70,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[128];,46132eacf231df987674de8924ebd73264789288957c93f364cfd2ec4f2b1218,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/threads/refdb.c,113,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[128];,46132eacf231df987674de8924ebd73264789288957c93f364cfd2ec4f2b1218,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/threads/refdb.c,156,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[128];,46132eacf231df987674de8924ebd73264789288957c93f364cfd2ec4f2b1218,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/trace/windows/stacktrace.c,7,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[10000];,5f5881c4cdc0d3a949f81807ad64aed169f6580bc9744b10bb1c0095b6e15fe3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/libgit2/worktree/worktree.c,38,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	const char *filesets[3][2] = {,f5ae1a8cef0a8499d02b4a16f2e8245238e029d72fb7dfd47cb4297ec0c1ce97,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/encoding.c,28,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char buf[100];,c030ee201b36b69d6de9bb773c88376601b72479deebd32a7a27b112f559a9e4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/filebuf.c,46,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char buf[4096 * 4]; /* 2 * WRITE_BUFFER_SIZE */,0dabd8206b618b95255fb5df4e62dd6a19e1c2563137da47ed6b13eb72cf9341,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/gitstr.c,52,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char data[128];,24a50889bbee87dba12cb2780af3405c83b27e8ca4b1e5fdcef331d4f6bfb723,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/link.c,180,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(reparse_buf->GenericReparseBuffer.DataBuffer,",825fd041fac762366be21e6d1d43d3fc996814865a3053e25d6b4beeba0e003c,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/util/link.c,538,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[2048];,48380ba56ae48cc9787ddaefafc22cf1b8e11ac3adce1a12875683d608248a84,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/link.c,546,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[2048];,48380ba56ae48cc9787ddaefafc22cf1b8e11ac3adce1a12875683d608248a84,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/link.c,557,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[2048];,48380ba56ae48cc9787ddaefafc22cf1b8e11ac3adce1a12875683d608248a84,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/link.c,581,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[2048];,48380ba56ae48cc9787ddaefafc22cf1b8e11ac3adce1a12875683d608248a84,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/link.c,605,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[2048];,48380ba56ae48cc9787ddaefafc22cf1b8e11ac3adce1a12875683d608248a84,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/path/win32.c,113,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char cwd_backup[MAX_PATH];,0d04b67821641a5b9cfa869e1238e1c0f67f61d2dd1cfa893467c2bb769ef215,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/path/win32.c,292,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char result[GIT_PATH_MAX];,cd021bc89a90e89d86264ca4f1d9630051bb73c5b88acdafcd983d936e669ce0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/process/env.c,35,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char buf[1024], *tok;",a6d3eb23f48eb56a22f7ed7e665917ffa64436a07b33e78cdd161cc512b78c59,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/process/start.c,97,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[32];,917f6ed0ae72790ae84d5546f1fd6d51df65d8cc348e82b8bf2389e3a4b61c78,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/qsort.c,7,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char c[311];,b2530fcb4b3d2348e4ac7d6879bdb068e6118cacd56490ce0be5db0a7c427cd8,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/regexp.c,8,14,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,static const char *old_locales[LC_ALL];,9e6c39353b7a4716e3ac9188e61be38f1255b0cafb8358ed1673bd80adfb9738,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/regexp.c,59,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char c, str[2];",569a89648cbd8ee8f26193e123b87a621fa84afcca1d4a3f6445cdb347c62d63,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/regexp.c,79,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char c, str[2];",569a89648cbd8ee8f26193e123b87a621fa84afcca1d4a3f6445cdb347c62d63,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha1.c,31,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[2048];,48380ba56ae48cc9787ddaefafc22cf1b8e11ac3adce1a12875683d608248a84,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha1.c,54,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char expected[GIT_HASH_SHA1_SIZE] = {,c0c90ee52bf7733b2206e876e3cb5528a68be13015bd5aafcd0fb13da00520bf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha1.c,58,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char actual[GIT_HASH_SHA1_SIZE];,657374b66cfb64e89d7654961b7e2039fe0697aae5ec5d6219c48ae1febfdd03,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha1.c,67,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char actual[GIT_HASH_SHA1_SIZE];,657374b66cfb64e89d7654961b7e2039fe0697aae5ec5d6219c48ae1febfdd03,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha1.c,68,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char expected[GIT_HASH_SHA1_SIZE] = {,c0c90ee52bf7733b2206e876e3cb5528a68be13015bd5aafcd0fb13da00520bf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha1.c,86,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char expected[GIT_HASH_SHA1_SIZE] = {,c0c90ee52bf7733b2206e876e3cb5528a68be13015bd5aafcd0fb13da00520bf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha1.c,90,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char actual[GIT_HASH_SHA1_SIZE];,657374b66cfb64e89d7654961b7e2039fe0697aae5ec5d6219c48ae1febfdd03,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha256.c,31,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[2048];,48380ba56ae48cc9787ddaefafc22cf1b8e11ac3adce1a12875683d608248a84,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha256.c,54,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char expected[GIT_HASH_SHA256_SIZE] = {,5e282131e0e43ed382e758d0117abee8b7319772e3bb02fd2a222a3988fcc92c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha256.c,60,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char actual[GIT_HASH_SHA256_SIZE];,8de9cb1f03eed842ef4bf14ba48c4de7ac2670d0815827fbedff91ea0cf1d524,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha256.c,68,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char expected[GIT_HASH_SHA256_SIZE] = {,5e282131e0e43ed382e758d0117abee8b7319772e3bb02fd2a222a3988fcc92c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha256.c,74,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char actual[GIT_HASH_SHA256_SIZE];,8de9cb1f03eed842ef4bf14ba48c4de7ac2670d0815827fbedff91ea0cf1d524,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha256.c,82,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char expected[GIT_HASH_SHA256_SIZE] = {,5e282131e0e43ed382e758d0117abee8b7319772e3bb02fd2a222a3988fcc92c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha256.c,88,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char actual[GIT_HASH_SHA256_SIZE];,8de9cb1f03eed842ef4bf14ba48c4de7ac2670d0815827fbedff91ea0cf1d524,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha256.c,97,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char expected[GIT_HASH_SHA256_SIZE] = {,5e282131e0e43ed382e758d0117abee8b7319772e3bb02fd2a222a3988fcc92c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sha256.c,103,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	unsigned char actual[GIT_HASH_SHA256_SIZE];,8de9cb1f03eed842ef4bf14ba48c4de7ac2670d0815827fbedff91ea0cf1d524,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/sortedcache.c,70,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[GIT_FLEX_ARRAY];,caca7e563a8796dd31cac53c8f97227f261e74f726a55cb08302d9656960647c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/string.c,123,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	const char foo[3] = { 'f', 'o', 'o' };",d60c6558b357226d5a24e5a024dc3f6eeec7a4f8851f650f44065f3c80f15953,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/tests/util/zstream.c,47,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char out[128];,9042747bd31333d944ddd17bae058bec9e7f489dcbc25b6392c85f968f3c6aa1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
repos_cpp/libgit2/deps/ntlmclient/crypt_commoncrypto.c,41,14,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		if ((ret = read(fd, out, (len - total))) < 0) {",6aea0e2fc0c142b86b4d3095f69a94b61fe990224668068ba559e49ead77e1a1,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,147,4,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			strlen(hostname))),be9b628c059d74cfbf476b09bb4f992404f67dcf35c19661ba75a7de8b66e82f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,156,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		ntlm_memzero(ntlm->password, strlen(ntlm->password));",e30878f0a3ef70b1292adfafd19eff6df5c7d93e1285fc72b6082bef5148e985,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,207,5,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				strlen(ntlm->username))),b7f86873216d757852e0ed608d397e271c7bafa133c255bf59b195fc54efc171,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,215,5,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				strlen(ntlm->username_upper))),6cd57e94833fed49308a5a7feb42da6897f6a8ce8c34699b8de292b83c323b2f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,224,4,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			strlen(ntlm->userdomain))),b1e191f3e9311a07681c8570b0f1d630caadfb1410e3ed0da08093ba75b62950,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,252,5,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				strlen(ntlm->target))),a39f527443531d99820acf68ef2ff968cc837e0dea7f415cd0f41c397a61c802,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,640,34,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	hostname_len = ntlm->hostname ? strlen(ntlm->hostname) : 0;,f86be63eef26b33e70d51aefe38d685ba780ebef98b87ac963dd14347ed402ff,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,641,34,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	domain_len = ntlm->hostdomain ? strlen(ntlm->hostdomain) : 0;,015449cf7e4457efbe329380b6b38d41631972c6b7f8d28212afa44fec13f180,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,984,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	password_len = password ? strlen(password) : 0;,1d832f8ce09b5b0dd308114c29bd716f63b3de16b57f0b5d666001fec33bf3e9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1055,4,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			strlen(ntlm->password))),0781fe1cffaeb75495477f52a2776e2c99f8d8be0bd8a5ac9cf7618eaea301d8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1299,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		domain_len = ntlm->userdomain ? strlen(ntlm->userdomain) : 0;,05bef7bdfd43451bd3663359fcc63b6df9e74a4522aa366d54ddb6dda251a7e6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1302,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		username_len = ntlm->username ? strlen(ntlm->username) : 0;,f3fb8fbaa786238878ed82888cbde282bc6c8faf76a9b365be5a23d4dd94e57b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/ntlm.c,1305,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		hostname_len = ntlm->hostname ? strlen(ntlm->hostname) : 0;,f86be63eef26b33e70d51aefe38d685ba780ebef98b87ac963dd14347ed402ff,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1143,24,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  utf8_int8_t *write = read;,4f318fe7b2f2d99f48f5123c5d0eb312fcb9d367bae681a758f67b0e9b162aa2,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1151,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  while ('\0' != *read) {,5ac5b4359cbe18a3c84d5508feb5dc076010a7b03ac544bd56756fb40899af08,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1152,26,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    if (0xf0 == (0xf8 & *read)) {,d82d09d6246860516080acf5d17ea7ab0a79a08323c4bb8f22d6ba97c5f862c3,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1155,28,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      if ((0x80 != (0xc0 & read[1])) || (0x80 != (0xc0 & read[2])) ||,d81398b8516b78df5116e811990ff7afc3c02b919b8c385c17ad67d9a772ec70,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1155,58,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      if ((0x80 != (0xc0 & read[1])) || (0x80 != (0xc0 & read[2])) ||,d81398b8516b78df5116e811990ff7afc3c02b919b8c385c17ad67d9a772ec70,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1156,28,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",          (0x80 != (0xc0 & read[3]))) {,31c8d7a5d53a9f13ebff57b491707a7a51b3db51a71f7d1d2092f588fd83f1ce,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1163,28,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      read = utf8codepoint(read, &codepoint);",08669a9837669e1b936f2a7271a07da5f65df29104e6403039a3637ac70de162,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1165,33,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    } else if (0xe0 == (0xf0 & *read)) {,e421293673ec90ead74230f382fb9b87ef36fe96ea3c98c0758488febcc4fb0b,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1168,28,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      if ((0x80 != (0xc0 & read[1])) || (0x80 != (0xc0 & read[2]))) {,17fe7b84624dbd87428f0cf2ced1f2c0085f0d945267a5f887acd78d6e0d8aae,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1168,58,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      if ((0x80 != (0xc0 & read[1])) || (0x80 != (0xc0 & read[2]))) {,17fe7b84624dbd87428f0cf2ced1f2c0085f0d945267a5f887acd78d6e0d8aae,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1175,28,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      read = utf8codepoint(read, &codepoint);",08669a9837669e1b936f2a7271a07da5f65df29104e6403039a3637ac70de162,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1177,33,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    } else if (0xc0 == (0xe0 & *read)) {,dfe73e0caad5630ff0f88f5a53cbd74c64cdd39a6a6a3630ba37d61abc399742,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1180,27,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      if (0x80 != (0xc0 & read[1])) {,3ba5e1feff1684992ea3afc3d13ee2ced02fcb734c3cbe9c7e70cd0d0bac7636,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1187,28,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      read = utf8codepoint(read, &codepoint);",08669a9837669e1b936f2a7271a07da5f65df29104e6403039a3637ac70de162,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1189,33,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    } else if (0x00 == (0x80 & *read)) {,822b6236142b6c8e527ca026888c257563c31702583e729287dee712064ba178,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/ntlmclient/utf8.h,1191,28,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      read = utf8codepoint(read, &codepoint);",08669a9837669e1b936f2a7271a07da5f65df29104e6403039a3637ac70de162,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcre_internal.h,349,9,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,#define strlen(s)        _strlen(s),255ae6b8e31e9dbef7f7a60004e024160528ef57e974dd6b769b415ea66383eb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/pcre/pcre_internal.h,2675,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,#define STRLEN_UC(str) strlen((const char *)str),f35786ed15de6001c7493684a8cd9b13e5a7ee1fa6e04767461b5cbbd6e0bfad,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/pcre/pcreposix.c,207,10,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,length = strlen(message) + 1;,ea3e8329c5d77ec98795f5b606d5a24602f31a3c4424ec0760295d1c4e5da173,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/pcre/pcreposix.c,211,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  strlen(addmessage) + 6 : 0;,146d3fd2a3eaaf277580658afac7518d13452a50d101606e359b09280e6be3e3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/pcre/pcreposix.c,219,5,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"    strncpy(errbuf, message, errbuf_size - 1);",4775d03812f2a1fdeb73588d2dd6744e04a7628dd62feea3d96aed790d7f22a4,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/deps/pcre/pcreposix.c,363,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  eo = (int)strlen(string);,48cfde023bb1f1324d6f956f99c8735d38df3487ac2883d042b52da6ee599f22,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/xdiff/xemit.c,34,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	long size, psize = strlen(pre);",f49bc027f97c1bb57b8e3ff18aacebf74dd88253dafa4748d3e9ec875c0b04ab,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/xdiff/xmerge.c,202,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	int marker1_size = (name1 ? strlen(name1) + 1 : 0);,4b336f62891568049660768de1736f5608711ec10e8b31a75caedad4b534f5a9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/xdiff/xmerge.c,203,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	int marker2_size = (name2 ? strlen(name2) + 1 : 0);,92538b2bd3fb8752a67f9221adccfcc16e0992f23b1c0dab943c5c9e41f463aa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/xdiff/xmerge.c,204,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	int marker3_size = (name3 ? strlen(name3) + 1 : 0);,fa134c1bd566b2590d1aa3743935e86429e2ae25fa2eccd878524ed7608a30f5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/xdiff/xpatience.c,80,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (!strncmp(line, xpp->anchors[i], strlen(xpp->anchors[i])))",4c4a934ac35b0747e69f88e8d2a5a28d7f07a2c8710ea568bd0bb87a25200aa5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/xdiff/xutils.c,50,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		mb[2].size = strlen(mb[2].ptr);,3b9e132ce13b419fea348e339d6e2b6a9f41fa9487303f6ca6d2459aa876ba12,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/deps/zlib/gzguts.h,47,11,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",#  define read _read,676e418c3610f42f4042fb2201285b5c1f42dcea025c450bf539af2a97c10215,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/args.c,6,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t len = strlen(pfx);,031dc3dc0f2b39ca9b330f73eaca8ef9fc951a455d15e4e1d89a9ba84c8e0f30,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/examples/args.c,148,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (!strncmp(found, ""--no-"", strlen(""--no-"")) &&",d23e4cabd1dba163d46570225386ca65d15913adebda2dd42dabd1309b27702d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/examples/args.c,149,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	    !strcmp(found + strlen(""--no-""), opt + 2)) {",a3d9337a757640cdb53284f8563d5f751d8d002aad2866a5b0f7f02ffd99732e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/examples/blame.c,83,2,4,1,buffer,strcat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,"Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused).",Risk is low because the source is a constant character.,CWE-120,"	strcat(spec, "":"");",89ba29d05773465f83a4fc3d2bd788b919ca3f116463d60fae6b8dd6b097599c,2.0.19,FF1005,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/common.c,136,14,1,1,buffer,getchar,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	while ((c = getchar()) != EOF) {,cad616487589f0d2e9cc4ff9ea4cc1e9295fcee5c5fd22e4550ad4b5d784c907,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/common.c,242,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		ssize_t bytes = read(fd, buf + total, st.st_size - total);",28abf523a52563b73deceac4e06fb85619d03f53989a8de47292065cdc503597,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/common.h,30,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",# define read _read,9ad28de7a5f56670558642e5a8c00948ba8c3fa69c18a8083261adef7fdd7df6,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/diff.c,186,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git_patch_from_buffers(&patch, file1_str, strlen(file1_str), o->treeish1, file2_str, strlen(file2_str), o->treeish2, &o->diffopts),",021e6213a059550ba8eb924e5e90dd40c45f2e35391216208b93499cb8432d25,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/examples/diff.c,186,88,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git_patch_from_buffers(&patch, file1_str, strlen(file1_str), o->treeish1, file2_str, strlen(file2_str), o->treeish2, &o->diffopts),",021e6213a059550ba8eb924e5e90dd40c45f2e35391216208b93499cb8432d25,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/examples/index-pack.c,49,16,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		read_bytes = read(fd, buf, sizeof(buf));",e32c08ac485b86a4901c52b35d5fce64062f5ef1250db0a5ad1a025e6a3edbe5,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/examples/log.c,348,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			printf(""log size %d\n"", (int)strlen(git_commit_message(commit)));",ebf2e50fec0c817eb9e9653b2b2f1e533faa0a30b1f8edd6ec25b46a16707967,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/examples/show-index.c,31,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	dirlen = strlen(dir);,128a0c8b5687e483bfd2589905af198bd94d536350a5aaab8ec3ab46d8955b56,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/examples/status.c,478,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		else if (!strncmp(a, ""--git-dir="", strlen(""--git-dir="")))",389cb0c2126e1fb011ba23fa367e845ac24273ce4075012736aadddb47e84410,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/examples/status.c,479,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			o->repodir = a + strlen(""--git-dir="");",8976d7a4774df1475804b82fe0e51641d0f5f35e8a6c8b5717b6719b2c644642,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/include/git2/odb_backend.h,211,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	int GIT_CALLBACK(read)(git_odb_stream *stream, char *buffer, size_t len);",e640f98262e425c42ec2b5324e12d47f0b6a813da5b6db37f2f5b21d95ec5d10,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/include/git2/sys/odb_backend.h,35,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	int GIT_CALLBACK(read)(,ef36175aa099e4db70c74b63e533b3a7b7b70ff38c1228df5fb8f2a4fc35006d,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/include/git2/sys/stream.h,59,23,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	ssize_t GIT_CALLBACK(read)(struct git_stream *, void *, size_t);",af09cbfec4fccb0ac26c7bd2812a52cf9c932a598f3d2fa30e7a030521c93f5f,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/include/git2/sys/transport.h,348,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	int GIT_CALLBACK(read)(,ef36175aa099e4db70c74b63e533b3a7b7b70ff38c1228df5fb8f2a4fc35006d,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/script/user_model.c,10,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,size_t strlen(const char *s);,814404aaa7fc42b35cc9de9eb8158f0740b0daa4668b08dded2c2632078d7d7d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/script/user_model.c,39,9,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	return strlen(buf->ptr);,6249103e01e5b43671e6979710ffa5ee92a6800c3c09dd088a69fd72738cff9d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/script/user_nodefs.h,28,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,#nodef LOOKS_LIKE_DRIVE_PREFIX(S) (strlen(S) >= 2 && git__isalpha((S)[0]) && (S)[1] == ':'),9d525da9d872a5fa73512a11636999f39588e835d233cc4d00b656267eacf6c1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/cli/cmd_blame.c,100,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t hunk_author_len = strlen(hunk->orig_signature->name);,73cc7c4bf381747a54f4881cf36bacce779b4d3f18382d0c211c25fda1ae621f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/cli/cmd_blame.c,101,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t hunk_path_len = strlen(hunk->orig_path);,7f1c80a32c204ac29fc2e5b750ced48f7b79c2778e52947b287c3046f9ab8565,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/cli/cmd_clone.c,82,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (git__strntol64(&i, depth, strlen(depth), &endptr, 10) < 0 || i < 0 || i > INT_MAX || *endptr) {",b51bd647c87daa75b5fcc70aeec60a94e98566ecf9a9a8030a4aea5fde8820d3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/cli/opt.c,57,61,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	eql_pos = (eql = strchr(arg, '=')) ? (size_t)(eql - arg) : strlen(arg);",b573e09ed767697f05a734e7ece49b62a089fd08fa6ac017f2815c93ac771675,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/attr.c,489,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	macro->match.length = strlen(macro->match.pattern);,4a11907c83f6585e9d3832195e8001ebc69f2477511f0e97a6c3b41aa817bbdc,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/attrcache.c,85,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t baselen = 0, pathlen = strlen(path);",e7b87dda5740c35e7053b0a47d522d036108a9aa3f21b6536479666b98bfc729,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/attrcache.c,90,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		baselen = strlen(base);,52714dc9c4e0ce321781964621d17a8b3fdc4a3579f7d0a1693c8eaaf8dcfd09,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/attrcache.c,227,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		filename += strlen(wd);,5e96e77ea49148286b49c67254a726a323e2ede776ec5e2f31d64c27a6f67245,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/blame_git.c,41,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t path_len = strlen(path), alloc_len;",64e58a39f54dce96423e5ac67c53a199b8ab9fb21167e62a71367cbc56ce1485,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/blob.c,293,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		hintpath = full_path.ptr + strlen(workdir);,3b20b3e80e185a08b13e723f49bce183fec4fa036b5598001181e3c37684a539,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/branch.c,219,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			git_reference_name(branch) + strlen(GIT_REFS_HEADS_DIR)) < 0),ebd0ad32f955281eb8aab0fa758a46a7a4439faa871e8c284d70301915dd4c96,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/branch.c,332,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		git_reference_name(branch) + strlen(GIT_REFS_HEADS_DIR));,66476c60ddcbcf2556459c5b97f9dca0e8a73f08a15f7a58f46fca4260bf0a80,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/branch.c,389,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		branch_name += strlen(GIT_REFS_HEADS_DIR);,f3efd88c9b5a4e965bf8130a79f9ceab7dbc918b650c2f359dd389c931848c07,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/branch.c,391,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		branch_name += strlen(GIT_REFS_REMOTES_DIR);,3c1de95f67cff6d56a287018d889d2fc7b4b3217f3c9909813a0beaf9769f797,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/branch.c,411,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		canonical_branch_name + strlen(GIT_REFS_HEADS_DIR)) < 0),d6a2c718f3b372249759582e8e3456fe73d521f89c424cb134a30324f6020380,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/branch.c,691,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	shortname = refname + strlen(GIT_REFS_HEADS_DIR);,7869af7ae4300a5cd264bc8f2b3d11e47b6f85df76023bf5be0a61e7d10681ac,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/checkout.c,713,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				if (delta->old_file.path[strlen(wd->path)] == '/') {,d9b05e7cc05abe91c5836ce1289ea8fc38abd05d238f02d6ee92443ca5ae1842,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/checkout.c,738,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			if (wd->path[strlen(delta->old_file.path)] != '/'),b65241d498e9507cb6ec8a966e7e50731cb34e683d5cc80d5d9a905681066b25,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/checkout.c,1868,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			if (str[strlen(str) - 1] == '/'),a1c9d6adb93cff8a6092a9cd22bb3336b1f58fac7e10bc9fd5ca0524be658ad8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/clone.c,122,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		name += strlen(GIT_REFS_HEADS_DIR);,a3f9e3b8a1048a97e0a01e44cafb2320af0e5a6108949dbeeabd91b0f1470b2a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/clone.c,155,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	branch_name = initialbranch.ptr + strlen(GIT_REFS_HEADS_DIR);,c98a1d3501e091d2b232299aa12056fa52b267c660d2715157abaf7ecf5afb9a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/commit.c,424,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		size_t tree_len = strlen(""tree "") + git_oid_hexsize(opts->oid_type) + 1;",24e284b910ef507de74f452493321002a3878b29345e9347fd10576f9c8b9b52,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/commit.c,477,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			buffer += strlen(""encoding "");",fdf72dfe403833f9032dee1e1ad6fd51042df18ddfca9b692fc59403db2bff46,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/commit.c,673,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		for (end = msg + strlen(msg) - 1; msg <= end; --end),4e0fd87b976c77e40f0be862dc0f181990a8fa50e09d923646dc8513dac6da69,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/commit.c,777,10,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		buf += strlen(field);,b54788ca4259fa343c9ca471fbda36b185c4cbc4158532e09e9736a0adf55cce,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/commit.c,885,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		h += strlen(field);,cf4f16b336ac9d97cc6295240b6e6bde44139abfed1a7438839d12e17db82271,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/commit.c,1043,43,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (commit_parse(parsed, commit_content, strlen(commit_content), &parse_opts) < 0) {",1f8e08e1cf7fc0572aab44db80ddfef3ce13e88715dffbaa94e9e5dce2544c0e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config.c,1459,44,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (!value || git__strntol64(&num, value, strlen(value), &num_end, 0) < 0)",a524778ab05d0d85d662586f1d6bebf845e941b292341ea6aab53f8120d93be4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config.c,1639,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	data.old_len = strlen(old_section_name) + 1;,250530814942dfc1949e250037d951554743591d1631863c4863f2c3bef51c4f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_file.c,541,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = strlen(ptr);,496bb334f0ac8d5b4850f5058cfc23abe2b8c468013ce8e32dfeeda48533d13b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_file.c,621,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (git_fs_path_is_dirsep(condition[strlen(condition) - 1])),5e618e9e89fc7bf956262652c0ff9a6370203caf8d76c4939bc5d020b9ec6fe0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_file.c,685,46,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (git__strncmp(reference.ptr, GIT_SYMREF, strlen(GIT_SYMREF)))",43609387098ec500a6ba052fe9dc165c4c5c498b977161c45e3534286c1a0e48,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_file.c,687,46,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_consume(&reference, reference.ptr + strlen(GIT_SYMREF));",ea96a01e26876e053b4611d59e127feafab9e23bd52c4ba86df9013b69a271c9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_file.c,689,54,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (git__strncmp(reference.ptr, GIT_REFS_HEADS_DIR, strlen(GIT_REFS_HEADS_DIR)))",e2e800309386608aeacab43e0ef398c9d7c1ccffea65000021e5e65c57577e6b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_file.c,691,46,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_consume(&reference, reference.ptr + strlen(GIT_REFS_HEADS_DIR));",f9adfc20934d54260a8b2eddeca284de08149584ac51ca596e3639188afff6e6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_file.c,699,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (git_fs_path_is_dirsep(condition[strlen(condition) - 1]) &&,0f13e39a32bccb2a4c5555a83e0e85d34fac9a235571c422d4f1f33e861e73ea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_file.c,730,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	section_len = strlen(section);,1d397ec9ac21ba487e0d18f83dfa2d28a5a0ebc0f1bb267a7ac7015c9ce14c2d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_file.c,751,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,						   condition + strlen(conditions[i].prefix))) < 0),1bb95edbcdd8ffd851b17b84a85156b50cb44aca3542a8399bd30a33d223ec45,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_parse.c,71,48,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t quoted_len, alloc_len, base_name_len = strlen(base_name);",f8d2d25c2330dfe5840c75f520292fae398d97412b67e4acd27ba1c5b8581321,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/config_parse.c,286,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t ptr_len = strlen(ptr), alloc_len;",ba3ac5b0e78792ac6bebc3efe5257ddb71eca0d119bc92fd4405abb00b396043,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/delta.c,510,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	ssize_t read;,1b6b33bd3cd7f7aa2a9798a835afff787e110d334941cf89445f31a9ba360c1e,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/delta.c,522,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",		len += read;,39651b9bbccbe2bd71881374c09b5a5045ae762d243f99831cc936a7366f266c,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/describe.c,222,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		refname + strlen(GIT_REFS_TAGS_DIR), 0)))",78364789a7609578481bcc205720deefdc3ea44fcdc35deecebd0541023681bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/describe.c,246,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		all ? refname + strlen(GIT_REFS_DIR) : refname + strlen(GIT_REFS_TAGS_DIR),",853e2843b5e354b6bf795677795542668c4e52961c2265b523b909e82a028cd5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/describe.c,246,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		all ? refname + strlen(GIT_REFS_DIR) : refname + strlen(GIT_REFS_TAGS_DIR),",853e2843b5e354b6bf795677795542668c4e52961c2265b523b909e82a028cd5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_driver.c,159,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		namelen = strlen(name),",6fd4b3c6bb2e7ab8bf4469d8f17f74b80cd5e8b5d08d613f9b4b638aa0e1858b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_driver.c,275,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_truncate(&name, namelen + strlen(""diff..""));",2ce1489e350b6269d28899dbb5c3925d53655aef15079a43c8dad3121ed94fd9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_driver.c,286,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_truncate(&name, namelen + strlen(""diff..""));",2ce1489e350b6269d28899dbb5c3925d53655aef15079a43c8dad3121ed94fd9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_driver.c,303,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_truncate(&name, namelen + strlen(""diff..""));",2ce1489e350b6269d28899dbb5c3925d53655aef15079a43c8dad3121ed94fd9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_driver.c,359,25,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (!repo || !path || !strlen(path)),7cb10866ce257239c16659c6d2d881abf3d1aeed01b6cefa88eea14ae37c4469,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_generate.c,327,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t len = strlen(prefix);,c2952dae953fb1783008fe0331328700e92c78e951d032ac20076903713bfe56,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_generate.c,961,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	pathlen = strlen(prefix_item->path);,cac8e8bdbd3cc47d1994b30ef527930a5ddaf5757713e70ff50385e5613a1c4f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,76,48,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			padding = stats->max_name + common_dirlen - strlen(old_path),f1a6ebb4da0ad4b9002327e87887ee164e0d8958a8bb3c8abfa54784d7d37d11,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,77,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			          - strlen(new_path) - 2 - strlen(DIFF_RENAME_FILE_SEPARATOR);,4d3501ef5bcd363b1ecf1076973ba2ea503cbe20febe452a984cf4b1a7318335,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,77,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			          - strlen(new_path) - 2 - strlen(DIFF_RENAME_FILE_SEPARATOR);,4d3501ef5bcd363b1ecf1076973ba2ea503cbe20febe452a984cf4b1a7318335,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,81,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			padding = stats->max_name - strlen(old_path),fff16a627058a8ffc1a481327093f831fe388117a360fab98a7647aa12381a94,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,82,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			          - strlen(new_path) - strlen(DIFF_RENAME_FILE_SEPARATOR);,7b92d8889f63c8bb935c0832a4cd7188ff0c7ab4772a793a3a85aa7a285abbf1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,82,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			          - strlen(new_path) - strlen(DIFF_RENAME_FILE_SEPARATOR);,7b92d8889f63c8bb935c0832a4cd7188ff0c7ab4772a793a3a85aa7a285abbf1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,92,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		padding = stats->max_name - strlen(adddel_path);,dc08e64d1135f68afdb8e63c82a74063e5aad44ffd6c146709d9736aaba273c3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,216,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		namelen = strlen(delta->new_file.path);,224a775484e8904d3f3506f1c9c828cde36cf3dc269281f641b6c9049aee9092,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,222,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				namelen += strlen(delta->old_file.path) + 2 +,af911f7a66ca5fdc9e85bd7d8aeb2fed370f7dfaae28ed86690550cd98976987,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,223,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				           strlen(DIFF_RENAME_FILE_SEPARATOR) - common_dirlen;,a1efe816a12dc0a00f04da8ee97075fa02c7c10be017a0118360099ab28a9954,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,225,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				namelen += strlen(delta->old_file.path) +,b34a304791b984e12d367f25b48b54e274d9399947de1401a8af60fc4529385f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/diff_stats.c,226,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				           strlen(DIFF_RENAME_FILE_SEPARATOR);,21ea448d2d3272fa2c6c51ff1a100e31e2466ebcc2b8c0009d6aa7b3d7d3a129,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/email.c,98,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t summary_len = summary ? strlen(summary) : 0;,a3b39a311a98630febd74c3d34ad04987994943c7c35ac8081c20aff3bf7f9b8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/email.c,159,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	body_len = strlen(body);,a0e23668c43f656388c70233ef595a47e3d232af6ba56b1b8f34ec3a4effb83a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/fetchhead.c,119,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		name = fetchhead_ref->ref_name + strlen(GIT_REFS_HEADS_DIR);,ad5dbdc7f8aad39913fc6262c9f09a4397bce05ae787fec7a64091eb6b1e2147,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/fetchhead.c,123,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		name = fetchhead_ref->ref_name + strlen(GIT_REFS_TAGS_DIR);,49362948285c763203922070daf88d8053e333896d280be10dc7ba6f1a0b53af,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/fetchhead.c,194,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		line += strlen(line);,231dd5b2bcae7eb519b951393eaac3eefdcfd12ecefb7eff4df4ec7425f1b910,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/fetchhead.c,199,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (strlen(oid_str) != git_oid_hexsize(oid_type)) {,50b3f82d96c627fcd714bed405c0195622be817979c8c5db0d2529751e4d8ea5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/filter.c,134,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		scan += strlen(scan) + 1;,35c7aede262a5161cee70c87f4a41d84eba1d1ab847867b2c8038e7e618885cd,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/filter.c,409,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t pathlen = src->path ? strlen(src->path) : 0, alloclen;",949dbed8460e09e7ddb9acc8e626f2d870c31862fb60ec7d10d0e54f89b73659,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/ignore.c,340,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		ignores->dir_root = strlen(workdir);,ac36cf7eb2813cc0a8af68d4eb134bba08df2cc833d78b984997058bae709803,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,349,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	srch_key.pathlen = !path_len ? strlen(path) : path_len;,4bc843423af710e654fe68f3010804d361d6051aca88dfd8e51353e67ee8f6b3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,928,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t pathlen = strlen(path), alloclen;",e23930bbdc1ea0e93ca2a9bf9aa89fe572af6df7d0a56ed2d4c80876704047ad,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,1016,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t pathlen = strlen(path),",c5d14c112a404142fc7207481861852ad891f79f9b3c6b8725548c6fa8e47e3e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,1114,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t len = strlen(entry->path);,b7e837b45c4fca06489115dc6c456f19ab84c378d0488736e20ceb4a14967c8d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,1147,29,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	const char *slash = name + strlen(name);,592bed67781aa727089e8249f8ca744a75c2119f43b56880a4a92442ac7e38ce,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,1220,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		memcpy((char *)entry->path, existing->path, strlen(existing->path));",312102886fb780a9d4dc68656a1a46835e75aa50fec729ebecfb9a8710612b46,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,1237,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		search_len = strlen(search);,9a8d6901c50caf196d0c382d637198c6f8b69ca94441e8e4bd5c9e92920def5b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,1409,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"				memcpy((char *)existing->path, entry->path, strlen(entry->path));",25620e2c7707dd9a29b1a850f407e93f98e7a39678a4483d0b4c145b75b083bb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,1757,34,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	index_find(&pos, index, prefix, strlen(prefix), GIT_INDEX_STAGE_ANY);",249a0bf53a1b3c2e363d4729383d3d2f453fad8b5bccfb5e0e079cf055381adf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,2615,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		last_len = strlen(last);,4d57d8f28cedd2978e02a1998ce7e7527c0c8f6c5af5f2b59158216562c2a768,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,2621,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		suffix_len = strlen(path_ptr + varint_len);,d4653aef4b1d0ed39613dbbf5cd8591d9f4d20aa651f4d43f607124063d3a262,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,2905,43,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		varint_len = git_encode_varint(NULL, 0, strlen(last) - same_len);",1477814123d950e502d4262d30830f0e659ef29a5a8f29f369738d33d64c0f46,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,2998,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"					  disk_size, strlen(last) - same_len);",c2258266e8adf11e2d27d065ac0974b36232fe069bb4e4a5fbe334c389d624e7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,3077,58,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		error = git_str_put(name_buf, conflict_name->ancestor, strlen(conflict_name->ancestor) + 1);",95588e243bf1150b01f435c715255d13f4ecc4a09a05ea6e072702bfa5feae56,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,3085,54,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		error = git_str_put(name_buf, conflict_name->ours, strlen(conflict_name->ours) + 1);",17cb823ee5be05b3933696b03514c1b23534a1de9cf07d5482b2fac7c4f5b4eb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,3093,56,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		error = git_str_put(name_buf, conflict_name->theirs, strlen(conflict_name->theirs) + 1);",f621dfb9d341ca05ed63704e3d8401fe321931d6d4fc6f6fba87434e894cff33,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/index.c,3131,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if ((error = git_str_put(reuc_buf, reuc->path, strlen(reuc->path) + 1)) < 0)",782fd2cc1b437b33ebe982ac0f0a7f1762b79cf61fc26b38ac5a98d6f8cbb537,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/indexer.c,296,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	ssize_t read;,1b6b33bd3cd7f7aa2a9798a835afff787e110d334941cf89445f31a9ba360c1e,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,306,47,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","			git_str_put(&idx->entry_data, idx->objbuf, read);",81454ba2396a12f2ec22bab02af2cdd8329885de1495abaa48b2fd297a8ef6ad,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,308,48,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		git_hash_update(&idx->hash_ctx, idx->objbuf, read);",c597b2b01dcd6fec8e1bc1309b798ce32184a837a5dc27762ebfedbff4923e5d,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,309,11,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	} while (read > 0);,1f602c57661b18560a7935947e234c169ff760d1c7f39e15b454a443e3b69e22,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,311,6,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	if (read < 0),618cf9d38afb313885b08bef3cdf1a1b1e3a61045b57d7c62ac78b8db472b63b,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,312,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",		return (int)read;,0d04387bc69fc6bad3a04b0b3a92cbb154bcf5fd9ee23523ad27e186528f25ae,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,340,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	ssize_t read;,1b6b33bd3cd7f7aa2a9798a835afff787e110d334941cf89445f31a9ba360c1e,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,346,11,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	} while (read > 0);,1f602c57661b18560a7935947e234c169ff760d1c7f39e15b454a443e3b69e22,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,348,6,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	if (read < 0),618cf9d38afb313885b08bef3cdf1a1b1e3a61045b57d7c62ac78b8db472b63b,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,349,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",		return (int)read;,0d04387bc69fc6bad3a04b0b3a92cbb154bcf5fd9ee23523ad27e186528f25ae,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/indexer.c,966,37,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (git_str_grow(path, slash + 1 + strlen(prefix) +",0da5431e80a8c0039a8531e1ea245fc457d4e5ad26c2c9ab0c036932e79141a0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/indexer.c,967,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		git_oid_hexsize(idx->oid_type) + strlen(suffix) + 1) < 0),a53b79c97425b60f3de68a9fdb315152e15cc80ee1e9f0cb7eb51cbdfda7e3e6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/indexer.c,1242,7,1,1,buffer,mismatch,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,	bool mismatch;,02aee23ce6fec13d277d92d675fbed14bb5923d9e3c6aeda168b6b040c30d780,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/indexer.c,1274,6,1,1,buffer,mismatch,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,	if (mismatch) {,ef978cfe1b6ebeda7b645eb85a2ed8cecf2e2fd565ebcff5387584ba3552cc05,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/indexer.c,1319,29,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_shorten(&filename, strlen(""pack""));",c062634aca2330c0e58e39f76dbbfbb8e0c36cbdad3b62c901d7eb216b1ef94c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/iterator.c,55,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		iter->start_len = strlen(iter->start);,9b6d4d0b1507f37c4b97b5778b6a68deaa8f15610eb6eff00b1a4a07937746b7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/iterator.c,62,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		iter->end_len = strlen(iter->end);,8ae3c16327036856835b5f2724a756009cf2520d7ee5ae0eaac5f5a710222ca6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/iterator.c,194,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	path_len = strlen(path);,9bddd7ffcdbe9941587daad7c8768d3eaeaa39b5f8d260b7e7691fb294e02e80,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/iterator.c,240,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	path_len = strlen(path);,9bddd7ffcdbe9941587daad7c8768d3eaeaa39b5f8d260b7e7691fb294e02e80,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/iterator.c,248,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		p_len = strlen(p);,a73b1c5178f9fe62c2c300577280b4a32c88cd41d91bd7bf075ac86d07573c67,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/iterator.c,1952,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	root_len = strlen(root);,9cdb50606cbeced780866139f8632a42a8f339acebb71ada4efe32485eca3557,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/mailmap.c,224,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		real_name, real_name ? strlen(real_name) : 0,",0c64d09fc880f6d1c28e937c2b0d1697e0266c783798cfa8d5034d61959f852f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/mailmap.c,225,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		real_email, real_email ? strlen(real_email) : 0,",0d92eb5b4e7c1234609cb09cae3fa4e53867724985160e507a15e84d283d9e4f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/mailmap.c,226,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		replace_name, replace_name ? strlen(replace_name) : 0,",6e4b7cc6e65d21085d85b175201f89eee44152360d849ca1e03a4d4a7636c0a4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/mailmap.c,227,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		replace_email, strlen(replace_email));",9088b3ff600cf4b9c2d978d17c7227e7e1d7cb109c6beaae11b6e7bddda4a254,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,613,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (strlen(line) != git_oid_hexsize(repo->oid_type)) {,3722b07c3068544d41207345c40afb7d1569db796d5e85dc0c095ddd71412616,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,1646,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t child_len = strlen(child);,524455b2d6a8430144b1d08493f9a5e0e09f0c2d07fda92a1deaf69830da35eb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,1647,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t parent_len = strlen(parent);,31200a943d07a69b1faf35288dfdbe81479a8f82509de6c12570ea863dd38334,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,2558,65,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git__strncmp(GIT_REFS_HEADS_DIR, entry->merge_head->ref_name, strlen(GIT_REFS_HEADS_DIR)) == 0);",82715c2eafbc95a0dad6483d9907ef07b676b8922f48a7f118b1dfc69519690f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,2570,67,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git__strncmp(GIT_REFS_REMOTES_DIR, entry->merge_head->ref_name, strlen(GIT_REFS_REMOTES_DIR)) == 0);",f7fcbc9d9cc9952a3553b76ef238affce596d176ad6772a369f0ba36432156a5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,2582,64,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git__strncmp(GIT_REFS_TAGS_DIR, entry->merge_head->ref_name, strlen(GIT_REFS_TAGS_DIR)) == 0);",916274fbfaa46b076c10a7c66e65ef3892103c9020021949cfe7b758ae8d0210,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,2592,65,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git__strncmp(GIT_REFS_HEADS_DIR, entry->merge_head->ref_name, strlen(GIT_REFS_HEADS_DIR)) == 0)",fd936ca7cf0530b6b69affeccb42a45588e0d7a84b12c5cc8328f13fbcddd95f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,2694,25,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		""branch"", ""branches"", strlen(GIT_REFS_HEADS_DIR), NULL, sep);",af4f221d35885730348032148b8feb58e72506b7198db6801ac59b2689504cd2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,2712,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		""tag"", ""tags"", strlen(GIT_REFS_TAGS_DIR), NULL, sep);",e7f1ca11b85019c91ab6d7304232281d736f1ddab742c650652b6f64f136d591,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge.c,2728,25,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		""branch"", ""branches"", strlen(GIT_REFS_HEADS_DIR), source, sep);",b243510eee860d99fa4c8f56026cbcf96fb227ef9ce240d02cd9e58aeaab75db,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/merge_driver.c,188,58,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	entry = git__calloc(1, sizeof(git_merge_driver_entry) + strlen(name) + 1);",bd6976dc6d6bbc86d726bc71b98c256f9ea50da2a59c0d2efae8a1777ba89e21,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/message.c,32,29,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	const size_t message_len = strlen(message);,1332d79c29f9ca1bc464f37f6c120056ef8bdb26fc615122e6548c14548c842f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/message.c,38,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	for (i = 0; i < strlen(message); i += line_length) {,0108d06165189d0709f4e5ea4005b6f71ae828914897a8fcbdca23b835fdcf02,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/midx.c,77,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (strlen(packfile_name) <= strlen("".idx"") || git__suffixcmp(packfile_name, "".idx"") != 0)",326009aa0e7d62f078903103f7c5809473d0492afc5d0902e3e1467fa12ab8a6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/midx.c,77,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (strlen(packfile_name) <= strlen("".idx"") || git__suffixcmp(packfile_name, "".idx"") != 0)",326009aa0e7d62f078903103f7c5809473d0492afc5d0902e3e1467fa12ab8a6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/midx.c,744,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (path_len <= strlen("".pack"") || git__suffixcmp(git_str_cstr(&relative_index), "".pack"") != 0) {",322c71325dee7b580f8dd600d797dea2b48ecc7bcf90b449a7da79c3f24f6254,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/midx.c,750,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		path_len -= strlen("".pack"");",b311d45bb9bba69584da9e5742b083cd7cf565541a94c8a733b9a7feec5ac0ce,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/notes.c,45,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			&& strlen(git_tree_entry_name(entry)) == 2,afa3a5cc636da13f647ee9d01bb5371bf6f8e1f3b7f81e95af917a10650e3830,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/notes.c,187,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"	strncpy(subtree_name, annotated_object_sha + fanout, 2);",07b3870ff3e20259c158a03640bdd83b7a2ed3fc1b367ddbd5eb274077bd7ae5,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/notes.c,291,61,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if ((error = git_blob_create_from_buffer(&oid, repo, note, strlen(note))) < 0)",d32228c1bb84208dcdedb200823bf7134ef3f193b95e3fcd31e6531e7c5094b0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/object.c,320,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	return git_object_stringn2type(str, strlen(str));",2ed4254fddcaf9bfef74836d8ff042b486eb56aa7da7a7795b835a8e9136befa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/object.c,652,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	const size_t header_len = strlen(header);,eb2a8f49e2983c8337fa03050d252031dcf32270a97ef983feb3c6e920248e75,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb.c,1342,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",		if (b->read != NULL) {,185b9146c8e6a74dd3867c3ff4674658f4e603fea7119cf572d5e960901400c0,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb.c,1343,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","			error = b->read(&raw.data, &raw.len, &raw.type, b, id);",3de3784e171a98f78837585f89e544a45436d58dd732e788b7126893efd3525a,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb.c,1772,17,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	return stream->read(stream, buffer, len);",0824eb198c7b3a183d6bbf8464a38b1f09fcda1d71cb90bc600aa42dc299eb03,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,507,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t dir_len = strlen(objects_dir), alloc_len;",4eae58c23a7fe1332d21a80ea030572bb877661ddc047024eb3cb36e91a37e8d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,721,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (strlen(ptr) != backend->oid_hexsize + 1),8e61999a3af311bf92ec36a24ccb882dcc53c67feed963d557f6ccebae30d1c5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_loose.c,1178,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	objects_dirlen = strlen(objects_dir);,a9f1de4ae52d9310e873e910dcbb46c512296b680995997df07f128dad2e5e46,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_pack.c,244,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (cmp_len <= strlen("".idx"") || git__suffixcmp(path_str, "".idx"") != 0)",553ce656a4108f3be957103d7fc78e510b188d68f06727b60d58269919ee32b0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_pack.c,247,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cmp_len -= strlen("".idx"");",58fbf8396a05836a1168ddda1828b6203153aa31993c1c48fd8d895e5283c836,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_pack.c,422,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (git_str_len(&pack_path) <= strlen("".idx"") || git__suffixcmp(git_str_cstr(&pack_path), "".idx"") != 0)",33360763ad919e8e971fa80dafe3d49b9e80509336e55449b69e84d654ef4e49,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_pack.c,425,93,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_attach_notowned(&index_prefix, git_str_cstr(&pack_path), git_str_len(&pack_path) - strlen("".idx""));",1c77f39e49c1f30150f740fdbc6d1a417f121ad601200ca27a8f89c9dfcf524d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_pack.c,781,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (path_len <= strlen("".pack"") || git__suffixcmp(git_str_cstr(idx_path), "".pack"") != 0)",1a012f70390f30aa7f396b13a4274d7a7a1330a3daa82b5c2699f7c269eae651,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_pack.c,783,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	path_len -= strlen("".pack"");",b311d45bb9bba69584da9e5742b083cd7cf565541a94c8a733b9a7feec5ac0ce,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_pack.c,784,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	error = git_str_splice(idx_path, path_len, strlen("".pack""), "".idx"", strlen("".idx""));",d03bf537391adfc36eb3f6e0cc670387565121505be3d704b2590f8039097bea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/odb_pack.c,784,70,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	error = git_str_splice(idx_path, path_len, strlen("".pack""), "".idx"", strlen("".idx""));",d03bf537391adfc36eb3f6e0cc670387565121505be3d704b2590f8039097bea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/oid.c,104,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	return git_oid_from_prefix(out, str, strlen(str), GIT_OID_SHA1);",602d3a880bd2b63cdd54108f3f2ef451b0221e536c73c1e402fdfbbc1b94f55a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/pack.c,316,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	name_len = strlen(p->pack_name);,33985d0c294a3e861259fd2a2b4ba930f277236a326b50fbe94626ede80a84fd,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/pack.c,317,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	GIT_ASSERT(name_len > strlen("".pack""));",b00ccfb815bcb233b96748cd572cbcfb1c89f57309fdc31e198d4c220d69f889,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/pack.c,322,50,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_put(&idx_name, p->pack_name, name_len - strlen("".pack""));",2670bd08ed6966221d4a50c09d56a36b083ea0a7a73488a3690d9e5650aa71c4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/pack.c,1163,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	path_len = strlen(path);,9bddd7ffcdbe9941587daad7c8768d3eaeaa39b5f8d260b7e7691fb294e02e80,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/pack.c,1165,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (path_len < strlen("".idx""))",6addfe56f932c28548753b636ccc560a91b49e65368e19d2011c71a06772534a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/pack.c,1168,57,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (git_str_printf(&buf, ""%.*s.pack"", (int)(path_len - strlen("".idx"")), path) < 0)",2910deda56c489081f36c59835d81b3f02d1a09544e4fb9d35fa1d23f3aac2bc,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/pack.c,1182,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t path_len = path ? strlen(path) : 0, alloc_len;",011f6764c155b4c98efa53c94156b714e5422c78fc39df8358a0cbc2d0df695c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/pack.c,1186,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (path_len < strlen("".idx""))",6addfe56f932c28548753b636ccc560a91b49e65368e19d2011c71a06772534a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/pack.c,1202,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		size_t root_len = path_len - strlen("".idx"");",44de90db75b12c4133b1c8320ebb87ad732bc01b8697b1e45177861f91546e63,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/parse.h,48,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_parse_advance_expected(ctx, str, strlen(str))",0caac27adb17e1d2d7adef08a7df20338849b350854497a79f0a29cfdd39c77d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,517,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t old_len = *old_path ? strlen(*old_path) : 0;,d67f3b9bd62f3a74e576046b6debea77ac4420966ba6332b9f5fa02a1ba0cbbc,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/patch_generate.c,518,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t new_len = *new_path ? strlen(*new_path) : 0;,5a2ab54aeab4b93f8834225c029c0f31f160263be7b5034c47d95c665974a99f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/patch_parse.c,453,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			size_t op_len = strlen(transition->str);,49b93b44af8f809c689d343838716bdfc3a33b689e78f9de65a6ea209644535f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/reader.c,260,17,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	return reader->read(out, out_id, out_filemode, reader, filename);",a09c1b38c8842d06c070c2ef252846daafe0f9eeeb6ca616275c905c89b88c53,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/reader.h,28,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	int (*read)(git_str *out, git_oid *out_oid, git_filemode_t *mode, git_reader *reader, const char *filename);",919d11c69ea02b8cb69351867f1407430dfb8550574be88b51c595b9bef9ab5e,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/rebase.c,1226,4,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			strlen(rebase->options.rewrite_notes_ref));,50d608f3b6ec9c71f485c91ef3232b8c4cba1ecf136f95326f3a56c364ecb305,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/rebase.c,1334,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (strlen(fromstr) != git_oid_hexsize(rebase->repo->oid_type) ||,0be32c3acbae8517a831865d8e22354f46779f5898d2ee74933df17df3d4354a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/rebase.c,1335,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		    strlen(tostr) != git_oid_hexsize(rebase->repo->oid_type) ||,91030770c2071d4eda9cb28f3a01b2222f94a95777e2562ef6dbe1ca9dee9798,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,315,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	file_path = full_path->ptr + strlen(backend->gitpath);,cfa309be5dbe51df54c2173e84de3a36fd94db5bb94ed0c48a6626c9b1b5c7d2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,383,48,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	const unsigned int header_len = (unsigned int)strlen(GIT_SYMREF);,2d6577092ae1ad48291550bc82ed741542270153251409d48af7c4ee57ab6032,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,473,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t hdr_sz = strlen(traits_header);,836a0e1acf3adb8ea56ccdae681f1eac21867b9a0ca6404fa748b763e8cf18d0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,485,51,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (git__memmem(data, eol - data, fully_peeled, strlen(fully_peeled)))",b9594a04f72594de01fc39408055f237e27a874d99b7d79a7703161338c6d068,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,487,50,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		else if (git__memmem(data, eol - data, peeled, strlen(peeled)))",f7d89cafea02a4aea0d03a7b804e8d00fb30dc29bb0374c301b2d8baf2f8ce6a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,490,67,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		backend->sorted = NULL != git__memmem(data, eol - data, sorted, strlen(sorted));",32e7afa8627fb34655e28543b1cc0a5d7be83d778440deaf35585f0c1fa72d3a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,632,25,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	const size_t ref_len = strlen(ref_name);,ec2f7bc1a525d3b2f87c07ab3abfccdb13949dd63bfd08b87a7ae226485c629e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,1087,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t reflen = strlen(this_ref);,9e7eb75f54101db951f425b717542c330f478487c2101722a500997583b843ca,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,1088,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t newlen = strlen(new_ref);,b48717dd466c43c1d8c517e28147574cb7487abfc985de1b3500b66c99c877b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,1697,94,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if ((commonlen = git_fs_path_common_dirlen(""refs/heads/"", git_str_cstr(&relative_path))) == strlen(""refs/heads/"") ||",b19cc6d36a101bb98ddce10947314795bf58d65c2f7aa202b4926160e29a56e6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,1698,90,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		(commonlen = git_fs_path_common_dirlen(""refs/tags/"", git_str_cstr(&relative_path))) == strlen(""refs/tags/"") ||",7ca4e923da67dcd48aa2bd3fee09d0f32d57d97923713d4cfada96f5ff813d82,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refdb_fs.c,1699,93,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		(commonlen = git_fs_path_common_dirlen(""refs/remotes/"", git_str_cstr(&relative_path))) == strlen(""refs/remotes/"")) {",12f9a618e352b40f7ea53b971dec472fbc972de9eddec1c56ca663ea10494da8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/reflog.c,93,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		size_t i, msglen = strlen(msg);",be6853b87285150651184165b9024627ba236facbc775c63abe3bc92adb02ab0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refs.c,38,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t namelen = strlen(name), reflen;",356d3353a672218512de8fc4ae67d4a49a6a0252b7072ba81ba54a18f2233d47,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refs.c,111,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	namelen = strlen(name);,1f4b1483c38accb094376087f7c4b3e1210095e7e98070338ecc40c62b4f45e7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refs.c,843,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	const int lock_len = (int)strlen(GIT_FILELOCK_EXTENSION);,d8e90ad8af479504706c16f33ba79b17a8d0a9b3fcc17d4f3a780ce734f90c4a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refs.c,937,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t namelen = strlen(current);,38da67530319b47a5e610f355cd1bade60d2053945495b2a2c8792111771ef57,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refs.c,1370,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		return name + strlen(GIT_REFS_HEADS_DIR);,9a44ab46e7d2e8285f1145c1e9d4cb9616b3f87eecb346179d07aa8d2d9c4d41,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refs.c,1372,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		return name + strlen(GIT_REFS_TAGS_DIR);,921eb48cd0c531bbdb92f97796c258b85a9a561fe3b9f927d827d9fd7cbca430,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refs.c,1374,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		return name + strlen(GIT_REFS_REMOTES_DIR);,0a65cd77c2a7ba6899f57cc2ffb467d08d010dfd9d154bf0716c79e84acfa468,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refs.c,1376,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		return name + strlen(GIT_REFS_DIR);,903846470d7f0fa19b1ca61bf525e2460aac245222665f4c7d31bc8f29c04530,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refspec.c,60,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t rlen = strlen(++rhs);,28d05b464e92dee81a69a5d1f53771a395fe459332020cdf4d4d3791db229797,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refspec.c,67,42,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	llen = (rhs ? (size_t)(rhs - lhs - 1) : strlen(lhs));,cf8dc556a58a6bb41ddd7e1fae30bf1d5416743cbba8cf8e5a1aeb188fe66500,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refspec.c,292,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	replacement_len = strlen(name + star_offset) - strlen(from_star + 1);,9dab0930deb795b145935e54cba78a707c6f7f47f66981fb8a6d86160554c4d3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refspec.c,292,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	replacement_len = strlen(name + star_offset) - strlen(from_star + 1);,9dab0930deb795b145935e54cba78a707c6f7f47f66981fb8a6d86160554c4d3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/refspec.c,359,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	return (spec->src[strlen(spec->src) - 1] == '*');,b9475f7c6e3c208cc686ab207f25db799134c2a0de25f9d156fb3a3dc92ce69e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,144,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (in == NULL || strlen(in) == 0) {,ded62f78d50a615578c6bfe371f02037da062e367591a9c70f7b29354d2677c4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,505,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (found && strlen(val) > 0) {,e8eda906e103c6f2d81c19478b73c6f616cc29f45eac703b4f899649a3962a0a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,526,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (found && strlen(val) > 0) {,e8eda906e103c6f2d81c19478b73c6f616cc29f45eac703b4f899649a3962a0a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,1070,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t len = strlen(url->path);,691b7070d9c08a1a5d0f88957c9483c4e2467f03ca17df9cd92a5232aedb0d1e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,2240,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	const char *name = entry->name + strlen(""remote."");",0786cd24b7968e82603d14166e72c50261def69442d7e5a84049c96aa9237836,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,2241,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t namelen = strlen(name);,788ce53db6a95e504401a3290bb1d6fe837e4f63cb666440f4718d60133a1b2f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,2418,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	pfx_len = strlen(GIT_REFS_REMOTES_DIR) + strlen(old_remote_name) + 1;,3f2ec26b1a02de3791d2b5ffc95fb13fc26a4cd1a10a3dc7fa1b6f1883918d8e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,2418,43,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	pfx_len = strlen(GIT_REFS_REMOTES_DIR) + strlen(old_remote_name) + 1;,3f2ec26b1a02de3791d2b5ffc95fb13fc26a4cd1a10a3dc7fa1b6f1883918d8e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,2741,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	prefix_len = strlen(""remote."");",93587e96b64bb3c076d7b2f8c4026ea4299ba56e7ec145a2d29b19dac86254ad,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,3092,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	prefix_length = strlen(PREFIX) + 1;,2a438dd85409724172f6dc98e840f1519e9e215b476020ae8ec1d24fbd84bbee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,3095,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		suffix_length = strlen(SUFFIX_FETCH) + 1;,97076d2f698421a04fd5651485dc81a4db9852c4859fa22b2b68e429928d9524,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,3098,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		suffix_length = strlen(SUFFIX_PUSH) + 1;,43c954767a69bde3bdbb24f15d857ec5930e3c435f4b0034d3afdd7054973e4b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,3114,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if ((n = strlen(entry->value)) <= match_length),f106a7603f0d5cf0cea911d3ee0c7a437bb84eba4aabea49050765523b29d9ee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/remote.c,3122,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		    strlen(entry->name) - (prefix_length + suffix_length);,308de08eff92ddba2deb0c1da4e2c2018422b15f21c17cf2a9c5c8cb487b2e77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,495,3,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"		strncpy(buf, ceil, len);",c75e633208ef6ad8c29b314c5edf547725f2ea97e3916e147fff88c2800f8d71,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/repository.c,501,9,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		len = strlen(buf2);,b54cead2f002532af2b4927b45f6896975509897764c92b5b3bf82c3fc8df53a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,525,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t  prefix_len = strlen(GIT_FILE_CONTENT_PREFIX);,21c6d4365a5b24ba53d5f6b75c2388d9b88a4379e0e25c0aefc53e200d86f556,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,610,41,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (strncmp(test_path, ""%(prefix)//"", strlen(""%(prefix)//"")) == 0)",477390211196b37d809a2b7d715993b578cacf025fa2d82d3cb3d4aad33e1cae,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,611,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			test_path += strlen(""%(prefix)/"");",639ed9d78c25a94fdd19c431094b089e45d86bdbb1512d92b04264e7c6344ae4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,711,4,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			strlen(path) : git_fs_path_dirlen(path);,95f6e495f7f884eb8f5eb6558ade76db59c537738786e5e90aac731bda87e004,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,1207,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = strlen(wt->gitlink_path);,3f703a83b93893da985cc504c1872d26391f0eff8f29a3a7a5f65572ec5d0c0d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,1751,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	name_len = strlen(name);,ab8fc1a7f95ed37b490689eb6ed6a8a1fa549b0400664e9fafbd494f137cc7b2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,2449,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		error = p_write(fd, content, strlen(content));",2933d328240d74c799debd0ffd9c6f1478faf79bc26ab8527219b7f6b909e167,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,2735,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		wd_path->size + strlen(GIT_DIR) == repo_path->size &&,ccd3fd2f0c2c991b217ac46b192fe9616c0a5056ebe53239c7542873c35fd324,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,3479,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			as_path = full_path.ptr + strlen(workdir);,88537f9a9d0c264084ed2ffc6bb6a71900ed5f0097eb2c5c4b635f4e8a0f087e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/repository.c,3485,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (strlen(as_path) > 0) {,931a5aee2f01df078cd44a77c195a318625e7660833ca0f807f55dde60a63540,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/revparse.c,37,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t speclen = strlen(spec);,759726ca8c586269ad8e70857703d434ab5c6cb2185a034e0670774ddd218e1e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/revparse.c,47,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t speclen = strlen(spec);,759726ca8c586269ad8e70857703d434ab5c6cb2185a034e0670774ddd218e1e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/revparse.c,120,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if ((strlen(spec) < git_oid_hexsize(repo->oid_type)) &&,8aee4dafe0d863e3c8744d59fee01043a2f0406b95188200bbb32a71427d3183,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/revparse.c,136,53,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (git__strntol32(&content, curly_braces_content, strlen(curly_braces_content),",7868dce00b906678afc345a8e59c7857de28159cadddebeaa56ea6c74f02b154,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/revparse.c,608,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			if (git__strntol32(&parsed, spec + *pos, strlen(spec + *pos), &end_ptr, 10) < 0)",911dabfa2c8b94bd479530ce8a5e89dab9870088df0b10b15599fc106a38b52e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/signature.c,88,34,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	p->name = extract_trimmed(name, strlen(name));",86880a7cac9255db765074aa84f9e7e40f2c02fba500b277955cdb9b5fca5f66,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/signature.c,90,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	p->email = extract_trimmed(email, strlen(email));",f7d7f422ac5038086034717724c6daa9b62489bd8924d3518a6c94c89f3c0461,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/signature.c,335,29,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		const size_t header_len = strlen(header);,eb2a8f49e2983c8337fa03050d252031dcf32270a97ef983feb3c6e920248e75,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/signature.c,414,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	buf_end = buf + strlen(buf);,8c3388535c9496b5be26488c924664a5d78bc200e22c47892ebb250dd2165cf3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/stash.c,91,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			git_reference_name(head) + strlen(GIT_REFS_HEADS_DIR));,0853022818dab6a72de615452a709616cb6c8899804d1add50ec0c30e32fd796,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/stream.h,50,13,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	return st->read(st, data, len);",d85a48942c2aa976258e369e42a2ed35718155580190faa64e5b0cb747d4bf4c,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl.c,283,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	return bio_write(b, str, strlen(str));",a4bbc6dde9ed99ddb7fb5269d3d73cd1f02b530a66ea30bdce66b27589c739b9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/streams/openssl_dynamic.c,32,50,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","int (*BIO_meth_set_read)(BIO_METHOD *biom, int (*read) (BIO *, char *, int));",3868c87de8db62a06a8ccd636f36bec7efcf96427feeb95a01eae81cb7d31923,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl_dynamic.h,135,57,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","extern int (*BIO_meth_set_read)(BIO_METHOD *biom, int (*read) (BIO *, char *, int));",21050c5f0a7873feb0bf6c0a3e2cb0301bacfd04db9fcb71e31425099b3fad98,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl_legacy.c,63,55,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","int BIO_meth_set_read__legacy(BIO_METHOD *biom, int (*read) (BIO *, char *, int))",bf95f3c599ce59bcf6257fe12aaf8273e4cdadc8c9dd4025ad484ad3dc60f4ad,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl_legacy.c,65,16,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",	biom->bread = read;,522a711070325d1f76c04318ed5c0982e976cb8682a6bb6ab76f368d8dca4655,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/openssl_legacy.h,48,62,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","extern int BIO_meth_set_read__legacy(BIO_METHOD *biom, int (*read) (BIO *, char *, int));",e5c5db7073a76dc8b78faf0aa17e8c4601c077e6a9330ec1a291bf16ccc26db2,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/streams/stransport.c,335,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	    (ret = SSLSetPeerDomainName(st->ctx, host, strlen(host))) != noErr) {",5619c58e7dc287b4bf915088ba3ee22141a19501eb4bb31671bdcf2afbc21d21,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/submodule.c,448,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git_str_attach_notowned(&buf, name, strlen(name));",b2fd455bd0be0b7c268c08f282790696b4e240c79783f8295d9233a79ce662e4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/submodule.c,849,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		path += strlen(git_repository_workdir(repo));,14875a9d8bb36fdbf67121db7a4607182881d0ec69b55084a7248748c0c50195,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/submodule.c,1871,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (!name || !(namelen = strlen(name))) {,30caeb530d3583961afe4afcb70a7fe67b736a66e99ba97e1756ac7281a9e3e9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/submodule.c,2101,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	namestart = entry->name + strlen(""submodule."");",a590b645ea6dfe74b7dc4d50d2067fdeefa9a287fcfcd97e8761138c87cf6bc6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/sysdir.c,61,16,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t len = wcslen(mock_sysdir);,6cf41884e0e0d97f15e54fb6eb4a9837b6a499c8fce48381dd21c2a0ead299c8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/sysdir.c,144,12,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	out_len = wcslen(out);,dbb29a2b1326ef5dca7657fbe791627d22cdbaf2a64453948f7426cf223a2123,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/sysdir.c,534,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	expand_path += strlen(PATH_MAGIC);,3e2d05215d4a89510b6782cf285e3c2491c0f4e2861978b40c7b2c3082f49c55,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tag.c,96,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t type_length = strlen(tag_types[i]);,df9106fd9d955b9890f4130b088478b3453f6de9104a8fb6162ad69b7b5d0b71,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tag.c,390,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (tag_parse(&tag, buffer, buffer + strlen(buffer), repo->oid_type) < 0)",76d1a1b1a72f5e1aa477d07382345ede10b3f675646a6d80d100f80dc011ca3f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tag.c,422,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			&stream, odb, strlen(buffer), GIT_OBJECT_TAG)) < 0) {",8ee07b5cfde85383a00cdcda263a823bf355267ca3ac182bbc127eda9adbcee6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tag.c,427,53,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (!(error = git_odb_stream_write(stream, buffer, strlen(buffer))))",9076a318d0506efa49457286bec6da30b14381d20ba4ab4716f073056858f3f2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tag.c,515,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,#define GIT_REFS_TAGS_DIR_LEN strlen(GIT_REFS_TAGS_DIR),70405a226217248370811da3b172bf1c40b8ac4c64a86b4d1ee95f68d982b9a4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/trailer.c,40,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		return str + strlen(str);,a65f625bbe042a76523f741e8807bf3784aa2e226b7b1e65c30a0cfb5b469156,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transport.c,58,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (strncasecmp(url, d->prefix, strlen(d->prefix)) == 0) {",18743343b6d223e5729318a5a9cdf972bd9d7a6799569febcdf122e3a094d3ce,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transport.c,67,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (strncasecmp(url, d->prefix, strlen(d->prefix)) == 0) {",18743343b6d223e5729318a5a9cdf972bd9d7a6799569febcdf122e3a094d3ce,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/auth_gssapi.c,136,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	challenge_len = ctx->challenge ? strlen(ctx->challenge) : 0;,40058800a9ca905a547deadf4f61fa5b139752de82beb46fbb0e5b319c741f78,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/auth_ntlmclient.c,95,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	challenge_len = ctx->challenge ? strlen(ctx->challenge) : 0;,40058800a9ca905a547deadf4f61fa5b139752de82beb46fbb0e5b319c741f78,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/auth_sspi.c,77,25,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t challenge_len = strlen(challenge);,ef1f2f45cda198fa45195c6178a9b736d05e2263922cdd1acf75d96ee60eefd5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/credential.c,73,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t pass_len = strlen(c->password);,d9e35d2eb7e368fbb75a27753145cec8c52a3c79cd6cb71b7ff38858752981f1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/credential.c,125,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t key_len = strlen(c->privatekey);,7c009b44fe3de127317e527a4bdd68a8b023dea7bdede56a74495d2f5076af6d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/credential.c,132,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t pass_len = strlen(c->passphrase);,876bc52a764ab05ce35ead92b6826f11af6a955e7d97d10dacc483a4ef06d384,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/credential.c,139,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t key_len = strlen(c->publickey);,5b9fc65b4a74d98e35e55f8c322e7eadc8a9c8db347d010c609fd2705f1863a0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/credential.c,164,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t key_len = strlen(c->publickey);,5b9fc65b4a74d98e35e55f8c322e7eadc8a9c8db347d010c609fd2705f1863a0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/credential.c,377,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = strlen(username);,b8e4ca233c28bb1346a2d132967cfe0b8595d986658601c2f7150861d145a250,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/git.c,60,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = 4 + strlen(cmd) + 1 + strlen(repo) + 1 + strlen(host) + (delim - url) + 1;,58ed2c67c0a814a27154dbba2ea6c783739ba2bca0a2e57e949584039fa8993f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/git.c,60,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = 4 + strlen(cmd) + 1 + strlen(repo) + 1 + strlen(host) + (delim - url) + 1;,58ed2c67c0a814a27154dbba2ea6c783739ba2bca0a2e57e949584039fa8993f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/git.c,60,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = 4 + strlen(cmd) + 1 + strlen(repo) + 1 + strlen(host) + (delim - url) + 1;,58ed2c67c0a814a27154dbba2ea6c783739ba2bca0a2e57e949584039fa8993f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/git.c,201,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		stream_url += strlen(prefix_git);,fed68282f0c58d18380bbf2253faa266ab72ef9bc5d61ffc5a0877703bc87aa2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/git.c,257,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		stream_url += strlen(prefix_git);,fed68282f0c58d18380bbf2253faa266ab72ef9bc5d61ffc5a0877703bc87aa2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/httpclient.c,286,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t scheme_len = strlen(scheme_name);,1709650c281f8bac70053f82101a77703196fa8f1442b87ddcadd9ce33628164,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart.c,29,27,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	ret = t->current_stream->read(t->current_stream,",988ac95e316eac585489b43e44c6c9e4c142c235cd67219d127dce926c7e15e0,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/libgit2/transports/smart_pkt.c,322,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (strlen(pkt->head.name) < len) {,ea4b216bb33e7e3718f9f6cdf1c6242cebbf0cc45fa02b5f09585b2941f6a13e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,96,9,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ptr += strlen(GIT_CAP_SYMREF);,8cfb523185dc190a2e69fcee33dc4fdcf2e189446c28f9126a0d3beb1d4d0166,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,155,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_OFS_DELTA);,25222609ace0689f6f3f38f262611d602dcb98bd50d05a57f12da5d14efa57b5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,162,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_MULTI_ACK_DETAILED);,43d5f5bc3adcc366e6e833c6d7c433f6b47b598d0403d15d3ac50f5dcb40ae1b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,168,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_MULTI_ACK);,88bb8a7ae5a9d41ca3f72c726737f205e1dac9598cc98f34ad00b92e48d5b2c8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,174,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_INCLUDE_TAG);,8bece6eae79d22f3f8595db5ca34d3d7729e03191e412d539ab7a41d750b143e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,181,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_SIDE_BAND_64K);,6800f620633bc5e7f7c0a9528b51d8f959104354a125baaabf468560bd1e3e09,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,187,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_SIDE_BAND);,9df28ea1959b4397bf0c9ead45af6e289083be23bad9b752fd0d92d92d6a0b07,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,193,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_DELETE_REFS);,14762c125f6f0d1c49e07107705f55ed55cd1aaccadf47d8f78dc15ea69a0444,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,199,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_PUSH_OPTIONS);,c57c157faa998153b1fa9f033405876f290aa90af8d96c96a2e2c6ae6c6ee8d1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,205,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_THIN_PACK);,ea4dc6841f2ae81325c865c27654ba1b5c10ec9f5d4e98531c24cca33521e313,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,220,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_WANT_TIP_SHA1);,3cf7a885b0d152fa0f2fd1dd871ef52f88a4fb131f5f1fa16ebe20915d58b8eb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,226,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_WANT_REACHABLE_SHA1);,f283784b2dda73a8100a1eb874934f320b430f210e6d680dac51f3254d1110ea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,231,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_OBJECT_FORMAT);,5f3a2d32a7327eceb6e36058f65003b3abf8813866845b75f9b74243a4838de6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,242,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_AGENT);,fd658b73915cf329cacae2dd3ba36e9f3c47bb0823fc8a1033c65969b5022d9b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,254,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(GIT_CAP_SHALLOW);,b4f38d323993e82913cbc36e5aa39d0ef61c13f457f6d886418cdb9f7d05eae6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,804,9,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		len = strlen(spec->refspec.dst) + 7;,5dfb6be030d3a69eaf827ac8a3f3640a7492ff349389d2d9208f588c4a77cfab,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,811,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				len += strlen(GIT_CAP_REPORT_STATUS) + 1;,091b024c25241dd79c90b74a597a42b97376cdbdf1a443ef05e574e901b36624,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,814,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				len += strlen(GIT_CAP_PUSH_OPTIONS) + 1;,94bd7b8d547b127accdb4b2f1f7823a3fbf07341d16be8ebbc13fe843cf11d86,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,816,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			len += strlen(GIT_CAP_SIDE_BAND_64K) + 1;,02b43dab48bf91ae8f1f5823b6dc82fa40a7ad7d6401d32172614d2eeede4889,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/smart_protocol.c,856,40,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			git_str_printf(buf, ""%04""PRIxZ""%s"", strlen(option) + 4 , option);",468041220089d84b73476f297e213813d8483309c6f2f6b7967c3ab587f46b41,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,357,5,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"				strlen(c->username),",049f3dbb29d7116d2dff8ed047737157041f220574a4f85497563b018672d7a1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,359,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"				c->publickey ? strlen(c->publickey) : 0,",aafeda3fcdfd10445be7c6833338712d211391ce49b650337da91e88ad26df9d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,361,5,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"				strlen(c->privatekey),",3bc917d7321c0d298d24518fa3f06e97621bbf05971d1fdd11158ea550a96955,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,818,41,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if (git__strntol32(&port, s->url.port, strlen(s->url.port), NULL, 10) < 0)",ee406a0e5f44f80211694b787a5fe0371e4fa6837de7e6a35c8b8a33f074b233,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,1020,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			(unsigned int)strlen(username));,55faea3717a0d240cdcda3b3280ae0b73dc60155d0be0eada76de5ad54e35285,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,1039,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(SSH_AUTH_PUBLICKEY);,3934b9ea5a23e4bf4725658971a6bc0ac338dca9a4fdec243102d089bd0596a4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,1045,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(SSH_AUTH_PASSWORD);,4cd08d6713c48f83cdc0b8e9551c1bf0ee5e88beffc739e60761f5deaa60e418,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/ssh_libssh2.c,1051,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			ptr += strlen(SSH_AUTH_KEYBOARD_INTERACTIVE);,45f914294aa45fb89309b0d6bc5a3a73f420016b5d9f823a05a5d260baa7102a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/winhttp.c,799,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			   strlen(t->server.url.port), NULL, 10) < 0)",1ad056b516c2c9d34e786c351e1764787bcdeee9f2712c600c41c38e99176a5c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/transports/winhttp.c,1403,8,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = wcslen(buffer);,c34e60eeb0d6dd1b00be07ec9fdf44af7b9de9c302e6774ff418593cec0f80f3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree-cache.c,16,50,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t i, dirlen = end ? (size_t)(end - path) : strlen(path);",6e885d81646d7c55c808d61850bd51ce0ee51e5282eb5918597fc85190cee1b2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree-cache.c,251,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	name_len = strlen(name);,ab8fc1a7f95ed37b490689eb6ed6a8a1fa549b0400664e9fafbd494f137cc7b2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree.c,316,40,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	return entry_fromname(tree, filename, strlen(filename));",fe6bc81c429606c7e180e7b280bb222ade1cd8caac854cf83150b0121fe4adb6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree.c,463,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	dirlen = strlen(dirname);,6ae40592e626713c1d28db5085f135e60ed79c597b438c6551488a64ae114f98,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree.c,466,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (strlen(entry->path) < dirlen ||,701f1066776969efd891bea439ef6beac55ff11da694dfbb3fafb16df62eb419,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree.c,572,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	entry = alloc_entry(filename, strlen(filename), id);",c06eca872b7cf3c1f6afc941da57f1fa004c20a53b2b460b7ae9c6556bfa16b1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree.c,597,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t dirname_len = strlen(dirname);,5ce51562da767cdc5f8bb4523a77ee1a9d14d3bb73572ce5741914cb3ddf0b50,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree.c,626,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (strlen(entry->path) < dirname_len ||,a1cc024bd34be73bc4b55dbbae699c9db0f182896c2166543d9edfb9c6a1de0b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree.c,801,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		entry = alloc_entry(filename, strlen(filename), id);",c06eca872b7cf3c1f6afc941da57f1fa004c20a53b2b460b7ae9c6556bfa16b1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/tree.c,910,10,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		return strlen(path);,67dee4964f1a874fae786a53b514efae06ff116a341ec86d98cd338c1234d5b5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/libgit2/worktree.c,449,41,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git_str_attach_notowned(&buf, reason, strlen(reason));",ed1c6144a8ced1b761516d2764e0686fdb9dd6c9568eccd998e0b3004e4875be,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/alloc.c,54,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t len = strlen(str) + 1;,23e06e180d03df7fab7919a6f99122079f89c4c3393b8563105b01282477e561,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/date.c,175,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (match >= 3 || match == strlen(timezone_names[i].name)) {,5b1dbcd8fb2a9cf17acc8105a58dabc12b1552410f2602f2f7ab81ebee494168,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/date.c,698,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t len = strlen(s->name);,51ac3fe821444c614e2a85acb9b88c28d5419f56265ade31591a306e3ae17a15,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/date.c,708,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			size_t len = strlen(number_name[i]);,ddfeba4b532e66df3cdc71eff0f40af7dbb5fa083dd9ba6b69f2992627cc2626,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/date.c,724,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t len = strlen(tl->type);,f44682f2217b386a0459b59d562a68fe11046b711ba9eecb112e981de2ab19b0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,117,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	endp = path + strlen(path) - 1;,72aea5f1f6b724232748c0b5fcc8adb4fe65ba5f7903e3b538a25761ba59b56a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,190,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	endp = path + strlen(path) - 1;,72aea5f1f6b724232748c0b5fcc8adb4fe65ba5f7903e3b538a25761ba59b56a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,343,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		root = (ssize_t)strlen(base);,762b5546b093d900469bfd13c8645010616bceb1d2d19bd1688554b551d0f564,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,424,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t len = strlen(path);,979e51cc7bcbdcf2ad1b1340511dd9d9a13bf4635aec36616da71e36e929ebbe,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,434,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t end = strlen(path);,b120477bfa4a71ec08979492c3a97dba3b0e33b6be0b75298eec4d1e12531138,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,449,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = (int)strlen(input);,e50ae76de7d5774cdc139e046260443024e6558bb5e1e13a2992034c52db8520,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,539,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			stop = (ssize_t)strlen(ceiling);,1c905e4412d17133554b7fa17009d0fc1e82a2d48de3a1528e719f784e064bc5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,738,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t sub_size = strlen(sub);,b869f5b90292dd433457228549109afa0be6bffb295235b728e64637e7016047,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,1165,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t de_len = strlen(de_path);,73c0e23fbe6cfc2e48ff2d37a1d19179f6c14a38ce3429972eea9b06d8e6ea0a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,1265,17,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	filename_len = wcslen(diriter->current.cFileName);,ecf05ba953577d76a550d54ea8a1e680775a3cdcf93eb3859f40472a81c518e6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,1433,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	filename_len = strlen(filename);,80fb51206e89669d2e3358d4c91b10bac7c5a66f006827fdbf8142336636a0d7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/fs_path.c,2035,47,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		error = git_str_put_w(fullpath, fullpath_w, wcslen(fullpath_w));",7a2073ff9b1e43bedf38b54e19a1e03c502480bb29ea5e3226f17e52044e8fa1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/futils.c,834,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (strlen(path) <= data->baselen),51eaf528256dcd2cb5ab661eabfab9d7ff343a0cc558082ec481bbfb4340729a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/futils.c,868,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	data.baselen = base ? strlen(base) : 0;,11816575464fafb6735196277697d7f5958a92417fcd98af11ae6cee1d8db4c9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/futils.c,893,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		retcode = p_write(fd, target, strlen(target));",836bcab1401b0e281d7003e7d05bb6b228176f661b26d7b67fc4405ad2c342f4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/net.c,832,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		two_len = strlen(two);,b3c1a9fa76003b2e571a989f1442fb4823a4c2c33c91447fbdd802cb4548d50a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/net.c,836,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	one_len = one->path ? strlen(one->path) : 0;,f226c142fe2ea4cddfae2b0f73eb08ae93271a199477a7efcfdfa7b2315615d0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/net.c,894,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t full_suffix_len = strlen(service_suffix);,4cc2e21cae58d6d27ee6ad493e924a65c69dd91c7c7c8bc87397931656d16616,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/net.c,897,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t path_len = strlen(url->path);,a858317cf589cb91af787738a05dbdf6c3e3f6503446aac9613d2f9c823b37b2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/net.c,1108,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if ((host_len = strlen(url->host)) < domain_len ||,feb046f95c6a4d0d08dcaddf2c83923425fc4ee6083c64748ba504f5e4cebf29,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/net.c,1122,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	return matches_pattern(url, pattern, strlen(pattern));",3696be3e51e9a0f35c81bfd3343031a15cec93600324c46ad0cbd850a0dcda3f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/net.c,1147,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git__memzero(url->username, strlen(url->username));",d6dec8f458a0a5cbb4aebf174577b567cab157831143824326d1fdbdc61adfff,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/net.c,1150,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git__memzero(url->password, strlen(url->password));",f4a97815b37a22e8a978b142e79452f128ca070b1bef8bc517a2397f9c0beb0e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/pool.c,229,37,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	return git_pool_strndup(pool, str, strlen(str));",589918d4e5dada4d7e8d6eacbb03276ef2f97d047fdddaacefbbe9943c6680e3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/pool.c,245,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len_a = a ? strlen(a) : 0;,04a2e537886cc24b0748446461f67309faa422b187693cbc8589f6360565ac4b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/pool.c,246,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len_b = b ? strlen(b) : 0;,1ddc6b394f528bb8bdf208c517fa0cef81493f782635a44272e1b147e40f0353,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/posix.c,183,7,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		r = read(fd, b, cnt > INT_MAX ? INT_MAX : (unsigned int)cnt);",b4373ffddaa2199244cf7c6ae65c9d63f344112a742a6068b490852f7963f099,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/posix.c,185,7,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		r = read(fd, b, cnt);",9105160e1fa610c83758af1a66569e79f5fc53403cc227e14fdf45d731cfb540,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/posix.h,135,20,1,1,access,umask,"Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732).",,,CWE-732,#define p_umask(m) umask(m),de98c04b04c74d870811993bf4fd953fa844347d622fa9027b38b536b73dbd12,2.0.19,FF1041,https://cwe.mitre.org/data/definitions/732.html
repos_cpp/libgit2/src/util/rand.c,97,17,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		ssize_t ret = read(fd, seed, sizeof(uint64_t));",c2f7a0e0d3ba6755b0f8c76a1d7654297d3079d4b4ee99d4ee3c7c69dc6c6021,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/regexp.c,37,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if ((error = pcre_exec(*r, NULL, string, (int) strlen(string), 0, 0, NULL, 0)) < 0)",ff4013c460338323ed82e1b3afcbdb29a042654505aa244e523d05d61b1ac15c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/regexp.c,55,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if ((error = pcre_exec(*r, NULL, string, (int) strlen(string), 0, 0, ovec, (int) nmatches * 3)) < 0)",fdb56376ca8441975455925f7af74d9e3cad101e5edf30b15e275f6b051d1299,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/regexp.c,111,58,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	error = pcre2_match(*r, (const unsigned char *) string, strlen(string), 0, 0, data, NULL);",941d2b415b228d315f3ae9ee53588df270fc4879308b4067a65f5331d3a6808e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/regexp.c,131,63,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	if ((error = pcre2_match(*r, (const unsigned char *) string, strlen(string),",06031f88fd4c5d1f5fbac22e1a83f33b766aae99ef90ded257c914d5c25fd902,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/sortedcache.c,22,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	pathlen = path ? strlen(path) : 0;,9f8a4d70d78e199cae99044513bce294c504c9a96b70a10bf7f8237131a6e588,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/sortedcache.c,279,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	keylen  = strlen(key);,2854db240671fd3762d695f1cce17e44e65d435ffe957335d5c0f039223d2775,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,171,43,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	return git_str_set(buf, string, string ? strlen(string) : 0);",ceb1f3c2cdc5c1a70f59ed9036852cbec3433610014e07cf1315edcb45e2d400,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,217,34,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	return git_str_put(buf, string, strlen(string));",e4fdd7f3bc231aefe71e142e10930d4008286920dbd5bfc349ff66e7d37d9f99,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,507,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	GIT_ERROR_CHECK_ALLOC_MULTIPLY(&expected_size, strlen(format), 2);",74863f6cdd227336ed0017f9548ad37b52a2c9d77e58295b7218240beddbee3e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,647,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		buf->size = strlen(ptr);,dd8f5f0b76ebf6d7cd09b9f9460936c9e42eb254394033d14f0a8b9fbd489eeb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,693,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		segment_len = strlen(segment);,a673e65976e936aad2563e54006e8430eebfa5a6b99074fd1a3306d798972b73,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,731,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			segment_len = strlen(segment);,a673e65976e936aad2563e54006e8430eebfa5a6b99074fd1a3306d798972b73,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,766,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t strlen_a = str_a ? strlen(str_a) : 0;,8dbea029b09957d26eb1e3de71fe77801cc6db0cab98aa0f681de7053b3b9b6d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,767,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t strlen_b = strlen(str_b);,01829c6eb55e6bd337a82bb75c3332bb76faac7daf077ee1f7de04ea3f357400,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,816,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t len_a = strlen(str_a),",6d171b4aff9ee30b245bec29d480fe74f69d6165e88cc1d91743fc1e3ef6cd04,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,817,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		len_b = strlen(str_b),",a2a9b957c4eb48808abb785eec077972ab1af656b7c5d6a4b86f93a64abd5246,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,818,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		len_c = strlen(str_c),",b0fae169bdcf5e8d3856412bb6b145f5b36b5c0520f2a11deab3d838cc6642cd,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/str.c,1071,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t total = 0, esc_len = strlen(esc_with), count, alloclen;",139d15fca57a98d8a9d1f4103b11b02ef4ccdd1916da210804ba4ecc14d2552b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/unix/process.c,179,9,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		ret = read(fd, buf + read_len, len - read_len);",b9f08ae0c779d7e605bebdc77e47c64f263af2a02d27518301d7de3c2117ed55,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/unix/process.c,257,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	fn_len = strlen(fn);,20e260031115abdf00ea24fb4d6e134d1f84329ae0d41dc547bd61f1bb7fa9f9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/unix/process.c,398,13,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	if ((ret = read(fd, buf, count)) < 0) {",cbf3804ef8805b9c6c6c4baec30a38b25538d83ad27dea242854692544ed61e3,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/src/util/util.c,215,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git__strntolower(str, strlen(str));",1fe69af90bf6d61005f208503b22198bbe825d8c5a47d50df61e35a6cd4c9ba0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/util.c,274,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t a = strlen(str);,d93e0ef25295310a8c7a43a8b94815aac06b725e54a4d4337a09f819f04f4e70,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/util.c,275,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t b = strlen(suffix);,ca3457242c0e19dc2aa7d1591a2a0c82492bc80fe5af18627e97694bac7ff7c2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/win32/dir.c,22,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	dirlen = strlen(dir);,128a0c8b5687e483bfd2589905af198bd94d536350a5aaab8ec3ab46d8955b56,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/win32/path_w32.c,260,28,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t dir_len, exe_len = wcslen(exe);",0060b3026af7bec1c21e0d8d86548607800bf1c95cc9e63dc6c08f3cfe1a5b15,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,341,21,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t path_len = wcslen(path);,172ac077b41aad4efb1d08d2dbe8908874f70f7b07e78d953fb7a183d4ee8d68,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/win32/posix_w32.c,649,39,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_win32_path_remove_namespace(cwd, wcslen(cwd));",5f1ae58dc57be5d35ceb5a62b2ca6be36bba0436b8396a36c646eb4810331395,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/win32/process.c,137,12,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			e_len = wcslen(e);,e9d3953ee172fc5724b3d5671d027baba594b6e480ec44364116527232bab3ce,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,153,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		detail_len = strlen(detail);,943974ba7e0de9f2950278008da67b29edbe0aa809690b2661c9aa5dd85b197e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,170,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		detail_len = strlen(detail);,943974ba7e0de9f2950278008da67b29edbe0aa809690b2661c9aa5dd85b197e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/src/util/win32/w32_leakcheck.c,352,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	fwrite(buf, strlen(buf), 1, stderr);",6e6df241324528687b80ec61853499f97765170d9297445700a2f3aa7d09b7ba,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar.c,69,11,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,#		ifndef strncpy,af45ade14569679d563767b087b27c7857a8edc46094fb198bb05290303363f0,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar.c,70,12,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"#			define strncpy(to, from, to_size) strncpy_s(to, to_size, from, _TRUNCATE)",dbb39e1e2184d584e3b80656200e002f85274c04d235c904ff95612fb1ab6b55,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar.c,383,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t suitelen = strlen(suite->name);,6b448d43d3052639ff58925912a131323f20d3729bce712d9667fbec309ea0d4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar.c,384,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		matchlen = strlen(filter);,72c6c4db8378b1e433f9369dc04e5437b4b5ee36867fc08945085a52d9cc9c82,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar.c,391,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			matchlen = strlen(filter);,72c6c4db8378b1e433f9369dc04e5437b4b5ee36867fc08945085a52d9cc9c82,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar.c,404,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (exact && strlen(test[i].name) != matchlen),311dc02260578ccc8c5fb8da89f98a6c59b4c6fcd29e943012fb88c11c7651d3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar.c,471,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			arglen = strlen(argument);,4abaa3c6cefdebff6a8117dc99dec3ebaad196c22381074d25bfa94133dfcd3d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar.c,478,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				arglen = strlen(argument);,4abaa3c6cefdebff6a8117dc99dec3ebaad196c22381074d25bfa94133dfcd3d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar.c,482,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				suitelen = strlen(_clar_suites[j].name);,58e336012fc86f182623a1d0ac5b25e53f831ea565e2de16b72902e4cd7a5005,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar.c,854,4,1,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).","Consider strcat_s, strlcat, snprintf, or automatically resizing strings.",Risk is low because the source is a constant string.,CWE-120,"			strncat(buf, "" != "", sizeof(buf) - offset);",12b1aa77d24ab7b2d774d8824d31531ebc3fa6bc04ff9d095cbd132982abcc44,2.0.19,FF1010,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar.c,870,4,1,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).","Consider strcat_s, strlcat, snprintf, or automatically resizing strings.",Risk is low because the source is a constant string.,CWE-120,"			strncat(buf, "" != "", sizeof(buf) - offset);",12b1aa77d24ab7b2d774d8824d31531ebc3fa6bc04ff9d095cbd132982abcc44,2.0.19,FF1010,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/fixtures.h,8,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	root_len = strlen(base);,6d337487020e5d49bb82b2e730dd80465c0547f72dbbfc0825d7139d7f8b3943,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/fixtures.h,9,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"	strncpy(_path, base, sizeof(_path));",10048e4b568377280c1b9a9e2fafa009a856f8a6c357e70af2725bd6932fbe42,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/fixtures.h,17,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"	strncpy(_path + root_len,",1262c1651212f5002e8dad91665b6c30d2ed85e0d8b185b52eb7e1abb2412d14,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/fs.h,58,16,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,    path_len = wcslen(path);,d59e791fe927ede9b79a13bef644c2bdca448280cdd7cfa7f1dfac4c52add8ae,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/fs.h,89,22,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	buffer_prefix_len = wcslen(buffer);,c6443c33d5a377bb5f969359c8222826ae83c09034e8fefd7253669fec9893c5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/fs.h,198,26,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	buf_source_prefix_len = wcslen(buf_source);,7a0a94f562d6fcb6bc33bc64fe8382aa4aa9bb9b82fca10b267abd81bbe38184,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/fs.h,203,24,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	buf_dest_prefix_len = wcslen(buf_dest);,bc8f68591db4eb1ce00521e1f0df34e98f4ac0f854fa208487e1c3606b3fd0b5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/fs.h,320,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t in_len = strlen(in), start_pos;",be28226e27dfd4022577f174a3bf3b420eb335c84d9090f083ea3366b43a1337,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/fs.h,322,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	for (in_len = strlen(in); in_len; in_len--) {,00846af55423f16f88fe1fa8c7d39c2cf03e4c52ab4bb7380de54e27eed1fa36,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/fs.h,349,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t bl = strlen(base);,afa38d139bcc6c6c770d57de340f035071499a1accabef729513b78653184073,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/fs.h,355,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = strlen(dir) + base_len + 2;,d51e5f9d7427b99e8fe9d3c47181659ea44927f2a4f71b5225642c5b030fc0f9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/fs.h,416,17,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		while ((ret = read(in, buf, sizeof(buf))) > 0) {",2bd949f66d12f802441d7dcb5ef2ffa10561b672860deaf1ac226c669cc7d74d,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,31,10,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	return (strlen(path) < CLAR_MAX_PATH);,6838cac11eac988fc267a081b9c40a43599970bff24e686426897ab4e39cd6ff,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,52,4,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"			strncpy(buffer, env, length - 1);",b8f10d2fd5ba6cc8ac680fe9c0005360017a5fabf22fd399bcd532f2aadd7082,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,60,3,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"		strncpy(buffer, ""/tmp"", length - 1);",773198fd57fa9cda4cd45232f8724c04239d3f720996d3aaebc54b27c2c28d88,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,77,3,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant character.,CWE-120,"		strncpy(buffer, ""."", length - 1);",27732d1c961a4e78b632df22abfd5198f2c6890ef9668632c581043430924dd0,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,145,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	len = strlen(_clar_tempdir);,89f7447ca4ea2432edff102a6520c9a0e26411b7cebe64ed5c55ac988d3f63c0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,147,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (len + strlen(path_tail) + 2 > CLAR_MAX_PATH),a7c2d5e07ae882763223b7a4f9e82f3eac35bc459fd39a14e16dbea65d6134c6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,153,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"	strncpy(_clar_tempdir + len, path_tail, sizeof(_clar_tempdir) - len);",1b709e269856a68c5c6a1fe9245bf63e7177daaed6198f2b05a70564b0b0530e,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,178,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	_clar_tempdir_len = strlen(_clar_tempdir);,8490602823e1244aa77fc32a7cff3e9abc481eb894e956fc45f6fb492e8a8776,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,230,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(strlen(_clar_tempdir) + strlen(suite_name) + strlen(test_name) + 3 < CLAR_MAX_PATH);,b5a290ec3b0ae078a0765aa3f4514d46231a832ecb3ff2c3c6080a674f3298b2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,230,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(strlen(_clar_tempdir) + strlen(suite_name) + strlen(test_name) + 3 < CLAR_MAX_PATH);,b5a290ec3b0ae078a0765aa3f4514d46231a832ecb3ff2c3c6080a674f3298b2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,230,57,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(strlen(_clar_tempdir) + strlen(suite_name) + strlen(test_name) + 3 < CLAR_MAX_PATH);,b5a290ec3b0ae078a0765aa3f4514d46231a832ecb3ff2c3c6080a674f3298b2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar/sandbox.h,244,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(strlen(_clar_tempdir) + 9 < CLAR_MAX_PATH);,edc99da2898e46b78d7f91d883ddcafd8450780ec9007d656de8c4cd480e11bc,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,33,37,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_must_pass(p_write(fd, content, strlen(content)));",e2fe4d423e20682349b442a9bf2705acd619fa64f4d435fd814299a904cf162f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,35,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_must_pass(p_write(fd, filename, strlen(filename)));",b43583a8b51ee5010a0b5f04bc65ab3f905f3b18b88e0ffdcde2baec9b3dc103,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,50,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		content_len = strlen(content);,3ac1b2ebb05d2f05f5d56e1e1739627154525256a2b4c38dd94324803fbc5aac,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,317,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"	strncpy(url, git_str_cstr(&url_buf), sizeof(url) - 1);",339f93de98cc9d9ad2c0d53f4c8a38675b07162c03bd3f9436f1e70f636ea76e,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,393,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	data.filename_len = strlen(filename);,a721e5f8f06f14379af3c27781636b5c71710e1a9fce7a53574fa34ea4946bbf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,442,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git_oid_tostr(buf + strlen(CL_COMMIT_MSG),",995f645a725985d0a9ff44630cd018a246069fe3345d851a4e6b31b0796bd1d2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,443,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			sizeof(buf) - strlen(CL_COMMIT_MSG), &tree_id);",1c5dcf5a7c5fecb1c27dcf7aaf426c4ec1bcf99f530055195d5da009c7878334,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar_libgit2.c,540,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		expected_bytes = strlen(expected_data);,326edce9d57441ebe2e05424aeced600cf2af3621f9e64792ed13f86ac530d42,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/clar/clar_libgit2.h,280,23,1,1,obsolete,usleep,"This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).",Use nanosleep(2) or setitimer(2) instead.,,CWE-676,# define cl_msleep(x) usleep(1000 * (x)),4e9db395c9129e67e64f0f75e7afe976b18ff71dadb91dabcbd2e5886c3e2f16,2.0.19,FF1069,https://cwe.mitre.org/data/definitions/676.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,82,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MODIFY_TWO_FILES, strlen(DIFF_MODIFY_TWO_FILES)));",c50a068db78885171baa99a79bd25df90f723f1e3af4fdd715f732e67270f1c6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,106,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_DELETE_FILE)));,bb16e326598ceac71a28260af334501cfc99b98bd519ce3c4e9f13d074f249ea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,132,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_ADD_FILE, strlen(DIFF_ADD_FILE)));",ecf5632343bd883e9936851808a9a1b6dc736c87d06e3cabc9e9ee453639954d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,164,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,201,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,218,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	    strlen(DIFF_MODIFY_TWO_FILES)));,e10550ad61b2f958470616bbba27ffd1dc9ed509ef718e4397586ddad1114ebc,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,251,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,304,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,344,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,394,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,419,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_FILE)));,fcb08c1f1e5a44ce54b4844ea58e5cb0d3a5f87c9bf0b3ba82f7c163f5ca79be,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,444,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_AND_MODIFY_FILE)));,145ff55e315eee9ff71984fcaf6dabac214996b379e66c669221d65f516d690b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,469,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_A_TO_B_TO_C)));,5886f03f5c6eb3cd52c909d555277ca2e437f43799bb899019d5555c6d32a67e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,494,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_A_TO_B_TO_C_EXACT)));,a90affc5672731be275bed410f162b95737cd6ea6e42fa793531882270ad0040,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,519,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_CIRCULAR)));,9029c9bf04b50bc703970b4354fafdc8c85c6c54dfcc8dd9a780e77a73b8b8d3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,543,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_2_TO_1)));,5a91ce82c8bf7c40701f6fbe168fd3c77a382ae068c2be22b18b1dd265ded568,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,569,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_1_TO_2)));,4c4c78a392ac4e9ed110d4c8e2fc27bf922090511ad99468515f30e82bea8f8f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,594,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_TWO_DELTAS_ONE_FILE)));,b401424cf73e74a39f6ecf828872f2631e1618d618c8b751fe24e1c270d96cf0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,620,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_TWO_DELTAS_ONE_NEW_FILE)));,0aaa32e43e5bad777e5b9740451a4fe8347fc9d45588e2feccf91e56eb99bbad,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,645,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_AND_MODIFY_DELTAS)));,5bca08f29472091494f45cf6be46479956707dd058025ef135de76e38577bc1b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,671,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_AFTER_MODIFY)));,576c1d5f9447cfcb5de6d71ab22cb041b11b8311afb5933020e5dbb6f0d01974,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,685,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_AFTER_MODIFY_TARGET_PATH)));,59d4285495590eefde0726d9c8abf49a94615341d21aa13c1f3548b87aff824d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,696,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_RENAME_AND_MODIFY_SOURCE_PATH)));,f1753827e664605db285cf5546bcfcd87499915db4a53fbf69e3a4ded5fb737a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,718,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_DELETE_AND_READD_FILE)));,2cbd1d365b7f462176d436dae1ef929641f4d7cd51c4418bd607cdcb9541128e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,732,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_REMOVE_FILE_TWICE)));,f374875b36b1a70f8be4bf69ac705d560d64b4d0503bf38b4671b7f10482ad2f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/both.c,743,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_ADD_INVALID_FILENAME)));,6939ea52b21b37dfc5e0fc9bc978621e5980f35cf9bb7aa9465858f35e209f5e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/callbacks.c,44,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MODIFY_TWO_FILES, strlen(DIFF_MODIFY_TWO_FILES)));",c50a068db78885171baa99a79bd25df90f723f1e3af4fdd715f732e67270f1c6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/callbacks.c,83,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MODIFY_TWO_FILES, strlen(DIFF_MODIFY_TWO_FILES)));",c50a068db78885171baa99a79bd25df90f723f1e3af4fdd715f732e67270f1c6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/callbacks.c,121,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MANY_CHANGES_ONE, strlen(DIFF_MANY_CHANGES_ONE)));",bd6a9941d7385ff5d4ce26d2cf18fd009b9e94ddb059921cd2f72051ee242cd7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/check.c,64,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MODIFY_TWO_FILES, strlen(DIFF_MODIFY_TWO_FILES)));",c50a068db78885171baa99a79bd25df90f723f1e3af4fdd715f732e67270f1c6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/check.c,81,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,       strlen(DIFF_MODIFY_TWO_FILES_BINARY)));,30cfb664a4746b81339e7e0c5ad229369a5910689c7177e1130e6ed0c861385f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/check.c,115,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromdiff.c,85,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		o.size = strlen(old);,9336259d5f84e4808ee56cb69130c803fd7f0715d10708a2645bd734e0a66e16,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromdiff.c,91,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		n.size = strlen(new);,3f3ed80752621ab4882fee3ac37ca77e98bc61fb93a29817a6cf8757ddeda025,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,39,55,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_patch_from_buffer(&patch, patchfile, strlen(patchfile), NULL));",63cf5cd46f739fb972335f6cf0f04e0894d0be97bd3aa6cddc490339b00631fb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,93,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,94,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE, strlen(FILE_CHANGE_MIDDLE),",0c5060266672c185850334b939158c809e0e404c9b990831ba38bbd104cb8c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,105,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,106,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE, strlen(FILE_CHANGE_MIDDLE),",0c5060266672c185850334b939158c809e0e404c9b990831ba38bbd104cb8c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,115,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,116,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_FIRSTLINE, strlen(FILE_CHANGE_FIRSTLINE),",98a7ca5022dcd58d7524873d929a661d283d2f919a2e9ca29cb0d63bf79aa274,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,124,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,125,25,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_LASTLINE, strlen(FILE_CHANGE_LASTLINE),",ff67acbbb42aa473a82d4a47f4c447e53d3be396ebf64e7e0494614120af2b56,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,133,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,134,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE_SHRINK, strlen(FILE_CHANGE_MIDDLE_SHRINK),",44d88b42e36ec9f5dcc2bcf7b924ee34285ab480486e01852bec73ef833c096a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,145,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,146,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE_SHRINK, strlen(FILE_CHANGE_MIDDLE_SHRINK),",44d88b42e36ec9f5dcc2bcf7b924ee34285ab480486e01852bec73ef833c096a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,154,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,155,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE_GROW, strlen(FILE_CHANGE_MIDDLE_GROW),",12127999d9b0f15b082a1e0d8723b5b2975922a66a1408c63ce58669505877b6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,166,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,167,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE_GROW, strlen(FILE_CHANGE_MIDDLE_GROW),",12127999d9b0f15b082a1e0d8723b5b2975922a66a1408c63ce58669505877b6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,175,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,176,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_PREPEND, strlen(FILE_PREPEND),",5facc89ae3ba8a05b59ce1b4dcbef6b3c784d19471c8dbfc224ae32e0315a196,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,186,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,187,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_PREPEND, strlen(FILE_PREPEND),",5facc89ae3ba8a05b59ce1b4dcbef6b3c784d19471c8dbfc224ae32e0315a196,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,195,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,196,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_APPEND, strlen(FILE_APPEND),",16070f11a635b2b4c67138d613bb10ae69933817c2aafa43e66dee614a9372c0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,206,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,207,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_APPEND, strlen(FILE_APPEND),",16070f11a635b2b4c67138d613bb10ae69933817c2aafa43e66dee614a9372c0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,215,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,216,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_PREPEND_AND_APPEND, strlen(FILE_PREPEND_AND_APPEND),",0777e84c984b2df937b29e633c216825116cff7f26dff1a117325735059656a3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,224,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,233,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,241,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,248,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,257,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,258,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,265,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,266,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE, strlen(FILE_CHANGE_MIDDLE),",0c5060266672c185850334b939158c809e0e404c9b990831ba38bbd104cb8c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,273,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,274,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE, strlen(FILE_CHANGE_MIDDLE),",0c5060266672c185850334b939158c809e0e404c9b990831ba38bbd104cb8c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,281,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,282,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,289,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,290,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE, strlen(FILE_CHANGE_MIDDLE),",0c5060266672c185850334b939158c809e0e404c9b990831ba38bbd104cb8c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,297,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,298,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE, strlen(FILE_CHANGE_MIDDLE),",0c5060266672c185850334b939158c809e0e404c9b990831ba38bbd104cb8c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,305,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,306,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_CHANGE_MIDDLE, strlen(FILE_CHANGE_MIDDLE),",0c5060266672c185850334b939158c809e0e404c9b990831ba38bbd104cb8c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,314,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_TRUNCATED_1), NULL));",8c508dd254d796ef3394756b929c00b62364d650e777b03709e267a5351bd91d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,321,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_TRUNCATED_2), NULL));",d49ea5594d7ec3fb862f9e9108b50b2249930c76f7cb179d2a93c8812fb2dcf4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,328,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_TRUNCATED_3), NULL));",2ec70ffdd0b036c5b11176af3529c24ae669bffdf011814a981c797121726075,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,335,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_GIT_HEADER), NULL));",225836cabe98528275270e80ed5547c12fa91ec625cf5b9561a70f56a5c8e95d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,341,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_EMPTY_CONTEXT_ORIGINAL, strlen(FILE_EMPTY_CONTEXT_ORIGINAL),",965c0bed1867f06d6b7d831a08e15d4173f919c5287a5e956f6c9c853a442b58,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,342,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_EMPTY_CONTEXT_MODIFIED, strlen(FILE_EMPTY_CONTEXT_MODIFIED),",b6eadcc5c33b912c05eef6eac571574a9800efca58d86535f33b7f4daf07000a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,350,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_ORIGINAL, strlen(FILE_ORIGINAL),",6de838ca8af3f7a8e818be74a30ff5a968d149925c46bbbf47c77d61861712bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,351,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		FILE_APPEND_NO_NL, strlen(FILE_APPEND_NO_NL),",f1acb39785f827075b301c9d1d3452ae5cca309d324913b1b312b509715ce163,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,360,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_MISSING_NEW_FILE), NULL));",dc8cead7d14f99b2e318834c83fca8893cd8b4756f2f892da7f8efe88780a813,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,368,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_MISSING_OLD_FILE), NULL));",67826055db292e6fa24e13efdcfb1f68abb49adf57c904d463d8eeba71aed74f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,376,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_NO_CHANGES), NULL));",d3ae30d5e3099e05d0551e91253f776b9b77eb5399ac7c814e9d6116d758734c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,384,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_MISSING_HUNK_HEADER), NULL));",6c7247d76ad3aa7365c6de21c21a824e72238881e8d66ee9b4644cd17051deac,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/fromfile.c,391,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_NOT_A_PATCH), NULL));",eb1cff25e61945f469923a1e878fac5b001ec189d946d8abdb9de7e4f3abc9ea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/index.c,82,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MODIFY_TWO_FILES, strlen(DIFF_MODIFY_TWO_FILES)));",c50a068db78885171baa99a79bd25df90f723f1e3af4fdd715f732e67270f1c6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/index.c,106,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_DELETE_FILE)));,bb16e326598ceac71a28260af334501cfc99b98bd519ce3c4e9f13d074f249ea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/index.c,132,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_ADD_FILE, strlen(DIFF_ADD_FILE)));",ecf5632343bd883e9936851808a9a1b6dc736c87d06e3cabc9e9ee453639954d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/index.c,172,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/index.c,204,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/index.c,243,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/index.c,288,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/index.c,314,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/partial.c,92,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t oldsize = strlen(old);,42cbf2a1816f00125286022ab65db8cd1f2101532b9d4261b250490ab5708429,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/partial.c,93,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t newsize = strlen(new);,9017cfdef16e5c4a59f44053ed33576a78693759ebaceebc12b7f68b2ae49d57,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/tree.c,85,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_ADD_FILE, strlen(DIFF_ADD_FILE)));",ecf5632343bd883e9936851808a9a1b6dc736c87d06e3cabc9e9ee453639954d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,81,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MODIFY_TWO_FILES, strlen(DIFF_MODIFY_TWO_FILES)));",c50a068db78885171baa99a79bd25df90f723f1e3af4fdd715f732e67270f1c6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,105,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(DIFF_DELETE_FILE)));,bb16e326598ceac71a28260af334501cfc99b98bd519ce3c4e9f13d074f249ea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,131,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_ADD_FILE, strlen(DIFF_ADD_FILE)));",ecf5632343bd883e9936851808a9a1b6dc736c87d06e3cabc9e9ee453639954d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,180,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,211,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,237,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MODIFY_TWO_FILES, strlen(DIFF_MODIFY_TWO_FILES)));",c50a068db78885171baa99a79bd25df90f723f1e3af4fdd715f732e67270f1c6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,271,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,298,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_file, strlen(diff_file)));",0d6f9984b045506478474da4bf5db6034749e6b09c8747c486f5266b14ef052a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,325,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MANY_CHANGES_ONE, strlen(DIFF_MANY_CHANGES_ONE)));",bd6a9941d7385ff5d4ce26d2cf18fd009b9e94ddb059921cd2f72051ee242cd7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/apply/workdir.c,351,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		DIFF_MANY_CHANGES_TWO, strlen(DIFF_MANY_CHANGES_TWO)));",22af29280ee9a9ef541eb1b9cbb18ded3f9bce84b6d2069dc138ca737e6d77aa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/attr/file.c,51,34,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert(rule->match.length == strlen(""pat0""));",8d613434fbf27c8c7ed1b55197c7dd7382c817175390488b017dd2c0551d4ac8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/attr/file.c,60,34,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert(rule->match.length == strlen(""pat1""));",4faebba2e2b8b4ac57744f96549c25166c9529bc0aa0f91f9948a37839eca0b6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/attr/file.c,65,34,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert(rule->match.length == strlen(""pat2""));",07b573f941feebc63fb3225f2b38147e55089f6e9b0f7bec10b4c565a0caccef,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/attr/file.c,90,34,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert(rule->match.length == strlen(""pat8 with spaces""));",bd9caee2552eb394a9bc29fc11acca612a2f83d4ad9ccb49bbff06dce8ab65fa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,40,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,73,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,104,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,141,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,173,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,202,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,222,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,258,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,296,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,321,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,346,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,363,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,386,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/blame/buffer.c,412,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blame_buffer(&g_bufferblame, g_fileblame, buffer, strlen(buffer)));",99b67e721d2e1b97c716382ac8ec12923ccf54a80715a453aaf3b7ca5e6f9893,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/conflict.c,122,4,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			strlen(entries[i].ancestor) == 0 ? NULL : entries[i].ancestor,",2f1d8fbf08b79008b0bd57e49cbb2361e1971b4e7df9fbbb34de4dc88c2f79b8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/conflict.c,123,4,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			strlen(entries[i].ours) == 0 ? NULL : entries[i].ours,",a15abd137395adb66ae609f69a1c773a144969ab5e6d8ea750f4884038a66c88,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/conflict.c,124,4,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			strlen(entries[i].theirs) == 0 ? NULL : entries[i].theirs));,57220a8a4b60662c54e415fc21c2a77a16c6a69f2f49362d418131363bd6ccb2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/crlf.c,248,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(entry->file_size == strlen(ALL_LF_TEXT_RAW));,d80f197dd02cfa5ebd7869ce10e612c177d9ce77771c9f0543b29661513eed18,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/crlf.c,251,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(entry->file_size == strlen(ALL_CRLF_TEXT_RAW));,c7fe02733f34811b37cb23104e0c65460ce696f7b22fa4e7d010e4f6e1e59210,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/crlf.c,302,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_sz(strlen(ALL_LF_TEXT_AS_CRLF), entry->file_size);",46a0946fe3760a8b5f5e3a63c73bd6c26a592555340dcc4009a25630fc51a7b7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/crlf.c,305,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_sz(strlen(ALL_CRLF_TEXT_RAW), entry->file_size);",ae443a3109b9b8afaa95ac86bf0628ef6a500a2dc3720f911962e1481ab82d2f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/icase.c,81,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	expected_len = strlen(expected);,2aaadc21e30e5664991080e712fd595094294efcbee37b1973b445c65a8af7ab,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/icase.c,82,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	actual_len = strlen(actual);,301385f72f017d8f50583e4e45e0794ff3be86c9a5dfb45196a64c9c262cb4f6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/index.c,256,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(link_size, strlen(""new.txt""));",bd0c438bd04a7b3c3b86c272f2b96ecfd442c56a335399e7621ab39daedc710e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/checkout/index.c,312,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(link_size, strlen(""new.txt""));",bd0c438bd04a7b3c3b86c272f2b96ecfd442c56a335399e7621ab39daedc710e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/clone/nonetwork.c,283,58,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_write(&entry.id, odb, file_content, strlen(file_content), GIT_OBJECT_BLOB));",ff39f4d56834ee57b630c583b825c5a8efe2027ced8ec3e5122a79ec01405fd6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/commit/parse.c,57,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		const char *line_end = line + strlen(line);,3e88b3b0af85293d7ce7c18565acb495e026eb88b14d6c2e287afd9224d5ddf8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/commit/parse.c,67,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		const char *line_end = line + strlen(line);,3e88b3b0af85293d7ce7c18565acb495e026eb88b14d6c2e287afd9224d5ddf8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/commit/parse.c,154,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t len = strlen(passcase->string);,34875639ce340e16e6123d6cce7581a5b57e14caa382b3d2ae654b064e30e570,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/commit/parse.c,168,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t len = strlen(failcase->string);,09980a625529966f72f99682b508024ec83c95c804021e7bb8aa47242df2bdf4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/commit/parse.c,288,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	fake_odb_object.cached.size = strlen(fake_odb_object.buffer);,09eb60611193e9c9b009d49abdc68e2b94653a2e2166fba417bb3671e5e56a13,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/commit/parse.c,519,70,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_write(&commit_id, odb, passing_commit_cases[4], strlen(passing_commit_cases[4]), GIT_OBJECT_COMMIT));",9b7f80891e64d6c77e743ac53bce102eef38f172d488da83242baffcf9f385a5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/commit/parse.c,541,70,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_write(&commit_id, odb, passing_commit_cases[1], strlen(passing_commit_cases[1]), GIT_OBJECT_COMMIT));",e50a1569cabd63411c97f5d4fb624a773d889245f239cd4464926d1c94372e9e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/commit/parse.c,546,64,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_write(&commit_id, odb, oneline_signature, strlen(oneline_signature), GIT_OBJECT_COMMIT));",e765b8f79a8dc000a575560ad2d0d631799bfd931cf49c7bdeb86f790ac532e2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/commit/signature.c,59,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	header_end = header + strlen(header) - 2;,c1847c5d497ab57f215c728bf8559216872a2f3f4c97c5f9977cc7301a6e4f99,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/memory.c,74,60,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_config_backend_from_string(&backend, cfg, strlen(cfg), &opts));",7a1e66ffe51b0b7800044cb95751f877502b912af25d0dfe71726e8064730deb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/memory.c,118,60,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_config_backend_from_string(&backend, cfg, strlen(cfg), &opts));",7a1e66ffe51b0b7800044cb95751f877502b912af25d0dfe71726e8064730deb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/snapshot.c,162,70,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_config_backend_from_string(&backend, configuration, strlen(configuration), &opts));",132b55f13c02268e405cbe500f3e826912df30f600a693fe6643c12eb4c3071b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/write.c,572,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(SECTION_FOO, n, strlen(SECTION_FOO));",540709e0a7c596fd03f96450e6255a7f6a27825a33c718fc82864969f7fff127,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/write.c,573,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	n += strlen(SECTION_FOO);,598e55904eaed86fcd3edd47ce924c5534e3f9038d7cf7d4ba4c969853edbf09,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/write.c,574,50,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(""\tother = otherval\n"", n, strlen(""\tother = otherval\n""));",309cc95357c0b3802ce8b429641fbcb2234dfa2cda2f6cebf68eb8f7e1cd5971,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/write.c,575,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	n += strlen(""\tother = otherval\n"");",b8cecb4d1f9046a89ad70ac09460b483b7891cf9104bf05d75cfd895fde52ec6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/write.c,576,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(FOO_COMMENT, n, strlen(FOO_COMMENT));",a55460190d65ecf9690a2f10e83cbcc41268ae45ee26190787669fd7d55e92a0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/write.c,577,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	n += strlen(FOO_COMMENT);,0c8cef024957f1236bbc059824af8c851ee6ed9dd01a6bc9482537e59c30513b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/write.c,579,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(SECTION_BAR, n, strlen(SECTION_BAR));",3203a640c8476b9a69f5ec4d925423798603bf94928c041406fb9a0e8216b227,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/config/write.c,580,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	n += strlen(SECTION_BAR);,cb2200f6c792433f09751a7c3c1ed7e0fa8241c1ad9d32288640ead2d0ad1232,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/core/env.c,89,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t testlen = strlen(testname);,f51531bc504a80866636f9c22ccde79986780acfa0837ffa0f2bf8f8e8555b64,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/core/env.c,91,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"	strncpy(testfile, testname, sizeof(testfile));",97c750d457197a9873a7f17d13c026353acb0b21edd26242cb5eae9c1bed0ee3,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/core/env.c,256,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t testlen = strlen(testname);,f51531bc504a80866636f9c22ccde79986780acfa0837ffa0f2bf8f8e8555b64,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/core/env.c,258,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"	strncpy(testfile, testname, sizeof(testfile));",97c750d457197a9873a7f17d13c026353acb0b21edd26242cb5eae9c1bed0ee3,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/core/oid.c,25,61,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&idp_sha1, str_oid_sha1_p, strlen(str_oid_sha1_p), GIT_OID_SHA1));",74d0a34a2f55e01241a10a80364001cb1d33910603ec8bc26ab440546348bb0a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/core/oid.c,26,61,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_fail(git_oid_from_prefix(&idm_sha1, str_oid_sha1_m, strlen(str_oid_sha1_m), GIT_OID_SHA1));",66d7eef4451293cc7aed32508859f7a13f43301ec8a9df3ca145b744afc051ee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/core/oid.c,30,65,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&idp_sha256, str_oid_sha256_p, strlen(str_oid_sha256_p), GIT_OID_SHA256));",14d5ce4657ea894b3d8269bdba0ef8d59381b7ddd474f66db2876fd484d406af,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/core/oid.c,31,65,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_fail(git_oid_from_prefix(&idm_sha256, str_oid_sha256_m, strlen(str_oid_sha256_m), GIT_OID_SHA256));",01375e7fa869bdd32de445a889c2e2710887519db1d9894563767d70c8624929,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,29,9,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		len = strlen(str);,c95613eeca47f6b37402164cfa450e4e2a5ea915533c35b65c74b31c9a7c2904,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,702,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&p, a, NULL, b_content, strlen(b_content), NULL, &opts));",b1fc6560bed3eb362a752176f564321b0f3baca0a7a2918af3b978c624b5f4bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,719,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&p, a, NULL, a_content, strlen(a_content), NULL, &opts));",993978e042a1e3c4b79eadf981a33092382173adbc4e78b7064c0156235042e1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,727,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&p, NULL, NULL, a_content, strlen(a_content), NULL, &opts));",238afd81823fc5a00c1345e9b251297b711046ba0faadf90eac823243fa101ed,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,923,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&p, nonbin, ""zzz.normal"", changed, strlen(changed), NULL, &opts));",a557cc78bc28f97a03610a2719a9c97d37f7e08e67761941a84c113e25d86eaa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,938,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&p, nonbin, ""zzz.binary"", changed, strlen(changed), NULL, &opts));",cd818f5b0f16b0e10b1a91225699f90f45efed55d64d7667550a810e133e3242,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,948,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&p, nonbin, ""zzz.alphary"", changed, strlen(changed), NULL, &opts));",8f19b95b3343218a5172b990aad357d9449814a2707404ba9656e54d6d6054b8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,963,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&p, nonbin, ""zzz.numary"", changed, strlen(changed), NULL, &opts));",6dc9ffff4a59f9895773381791b873efa5db9c0faab0b6de38ccf7ac676be22c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,1051,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		a, strlen(a), NULL, b, strlen(b), NULL, &opts,",09509d8389781317a65b17f635a5d16c93500cafdeca84de410c6e7c8b4a7286,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,1051,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		a, strlen(a), NULL, b, strlen(b), NULL, &opts,",09509d8389781317a65b17f635a5d16c93500cafdeca84de410c6e7c8b4a7286,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,1060,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		a, strlen(a), NULL, b, strlen(b), NULL, &opts,",09509d8389781317a65b17f635a5d16c93500cafdeca84de410c6e7c8b4a7286,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/blob.c,1060,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		a, strlen(a), NULL, b, strlen(b), NULL, &opts,",09509d8389781317a65b17f635a5d16c93500cafdeca84de410c6e7c8b4a7286,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/diff_helpers.c,9,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t len = strlen(partial_oid);,9b86c958c672c83116be3d9b555fcace953ba77dd6e6d811cd1bd4046d9f887e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/drivers.c,199,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		extension = path + strlen(""files/file."");",00d6a08f5ffd31be898a80adf8730f9d82ffeb9cc54884e511e78146e847c2f2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,24,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(not)));,1e8ac5a8c3d579a9af7a3bf21dfb54aa55db934209575afee9f30abd0777b620,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,28,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(not_with_leading)));,c9dd7fffc46ef3c2248ff3ff96d7e462e549c51cec8a4753e4530b8586c21c5b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,32,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(not_with_trailing)));,f5ac796ab0625bb7e038d65bc5873abadfc80f4d4dc6b473c44ff0cc1e458cf1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,36,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(not_with_both)));,c47bd946b9797f772c1c70278074c24e03671fc171d7db165b691cbfbff199bb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,76,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&diff, content, strlen(content)));",623ec77dbc88dbe547e534cf57af18a9e32eec586770aeb5a57db52a33e9eb52,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,96,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&diff, content, strlen(content)));",623ec77dbc88dbe547e534cf57af18a9e32eec586770aeb5a57db52a33e9eb52,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,106,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&diff, content, strlen(content)));",623ec77dbc88dbe547e534cf57af18a9e32eec586770aeb5a57db52a33e9eb52,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,129,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&diff, content, strlen(content)));",623ec77dbc88dbe547e534cf57af18a9e32eec586770aeb5a57db52a33e9eb52,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,297,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, patch, strlen(patch)));",8249e6942a41503cfad68e7a43701de27fb7a21c828a28f2d700b09b6b62e5e5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,320,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, patch, strlen(patch)));",8249e6942a41503cfad68e7a43701de27fb7a21c828a28f2d700b09b6b62e5e5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,340,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, patch, strlen(patch)));",8249e6942a41503cfad68e7a43701de27fb7a21c828a28f2d700b09b6b62e5e5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,355,51,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_patch_from_buffers(&patch, buf1, strlen(buf1), ""obj1"", buf2, strlen(buf2), ""obj2"", NULL));",588897d826c599dd98e98bd0f3b98ecec003580f8e9bfffc9c8311a643f3e9f9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,355,79,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_patch_from_buffers(&patch, buf1, strlen(buf1), ""obj1"", buf2, strlen(buf2), ""obj2"", NULL));",588897d826c599dd98e98bd0f3b98ecec003580f8e9bfffc9c8311a643f3e9f9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,400,44,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, text, strlen(text)));",f89e011964322623d0868a173fdcf319e8cac5242b163985daeda5906ea999f1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,421,44,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, text, strlen(text)));",f89e011964322623d0868a173fdcf319e8cac5242b163985daeda5906ea999f1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,447,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, content, strlen(content)));",dcf5b4f34a43a282cedbd98487e23d1e986ea5e278ea8bbd63bc1f509c967cae,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,465,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, content, strlen(content)));",dcf5b4f34a43a282cedbd98487e23d1e986ea5e278ea8bbd63bc1f509c967cae,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,478,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, content, strlen(content)));",dcf5b4f34a43a282cedbd98487e23d1e986ea5e278ea8bbd63bc1f509c967cae,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/parse.c,492,44,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, text, strlen(text)));",f89e011964322623d0868a173fdcf319e8cac5242b163985daeda5906ea999f1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/patch.c,171,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_sz(strlen(expected), git_patch_size(patch, 1, 1, 1));",acf2fdba2e867720aea0ea77cb6e4bb41a7a01a5ba532a72a3619b355ae391a5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/patch.c,481,4,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			strlen(expected), git_patch_size(patch, 1, 1, 1));",7da8a81de7c32191e1a6b3d6dbf0ab79e3362ed929f2afea14ef6dfe6ce19f25,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/patch.c,696,48,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_patch_from_buffers(&patch, a, strlen(a), NULL, b, strlen(b), NULL, &opts));",6372ce474036a6a7d23ba01352e6cbc772605e366e0f7881f9502c3c08662727,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/patch.c,696,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_patch_from_buffers(&patch, a, strlen(a), NULL, b, strlen(b), NULL, &opts));",6372ce474036a6a7d23ba01352e6cbc772605e366e0f7881f9502c3c08662727,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/patchid.c,11,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, diff_content, strlen(diff_content)));",d5bf0e857c53b26bed10979db80be4b10ae6aabca83b67d2d49295372ffe49bb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/stats.c,392,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(diff_from_buffer(&diff, input, strlen(input)));",be92696a76d47f06182a67e2bdfe5b4c3e52fd811f91c21f14e9198f0c2af26b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/submodules.c,519,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		pathlen = strlen(opts.pathspec.strings[i]);,6b344d9a64604a5f6777cc4042819d861fbd244018170eb9aaedf48090338742,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/tree.c,538,66,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blob_create_from_buffer(&blob, g_repo, content, strlen(content)));",686a90acd027f5fdead76c20ff33472c25d8d2d64660d2ecb50dd54da1fe2c51,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/diff/workdir.c,1947,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			data[i].size = strlen(data[i].ptr);,a0729bea1c7e3849fc31e2d9f3253b6393aeb21dae11b312a9b26e8b0c697d61,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/fetch/local.c,62,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(""5b5b025afb0b4c913b4c338a42934a3863bf3644\t\t'5b5b025afb0b4c913b4c338a42934a3863bf3644' of ""));",bd090e9fbb48d96680c09c14ab2605c1defc94836f8ef43a417e5398c8de5536,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,38,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,65,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,95,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,102,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,109,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,116,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,145,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,152,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,160,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,188,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,195,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,202,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,231,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,238,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/crlf.c,246,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(in);,f77c4ac6a869001c98f647da3d4ecafac0b165ba4b249204c913ccaba5858aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/custom.c,105,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(workdir_data);,96d7259dbf29786af91060a7fa054732fadcd7d7fb32681c2eab164367d4bfab,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/custom.c,133,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(workdir_data), out.size);",df5a58711ced9d7e55d755f8c24b326bd2c267e3f812cc051faf3ef77b061a4e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/filter/custom.c,262,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	in_len = strlen(workdir_data);,96d7259dbf29786af91060a7fa054732fadcd7d7fb32681c2eab164367d4bfab,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/grafts/parse.c,33,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_grafts_parse(grafts, string, strlen(string)));",43336753c143c3f1a76ab8b92a1b9e7730252ae02508f112d30732f77179ad9d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/grafts/parse.c,39,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_fail(git_grafts_parse(grafts, string, strlen(string)));",0c29d3d40c22e39e432b8d7d1b3b2dc73f40c62519590183abd9b0bcaaae83fe,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/ignore/status.c,229,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t repolen = strlen(reponame) + 1;,0d3e7945a8d6d5296d0ded80790a4bf588bc20d71ec929d789d6eb6ca683943b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/crlf.c,185,56,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		bool skip = strncasecmp(basename, "".git"", 4) == 0 && strlen(basename) == 4;",144a3fcaa31b0fb40abd76a9c4de84ed38c09b753e8204e3b176e6321b6a5f28,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/filemodes.c,191,71,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		clar__assert(!git_index_add_from_buffer(index, &new_entry, content, strlen(content)),",bf2d04f434806c31e5961827083282499d1d629f79ca571e066c034cf1d2f976,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/filemodes.c,274,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&new_entry, content, strlen(content)));",3a4122ed24627536ff5bdf3146d8aefc638bee7f701955a63a78808338e43471,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/filemodes.c,285,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&new_entry, content, strlen(content)));",3a4122ed24627536ff5bdf3146d8aefc638bee7f701955a63a78808338e43471,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/filemodes.c,296,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&new_entry, content, strlen(content)));",3a4122ed24627536ff5bdf3146d8aefc638bee7f701955a63a78808338e43471,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/filemodes.c,307,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&new_entry, content, strlen(content)));",3a4122ed24627536ff5bdf3146d8aefc638bee7f701955a63a78808338e43471,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/filemodes.c,315,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&new_entry, content, strlen(content)));",3a4122ed24627536ff5bdf3146d8aefc638bee7f701955a63a78808338e43471,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/tests.c,314,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		content, strlen(content)));",8d3af97b52e26a14376f1068654b338cdebeb66192f284760fbf07cf0072b167,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/tests.c,443,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_filebuf_write(&file, old_content, strlen(old_content)));",9aef210fe6b9b7c051e5ae29b43d603a1669df083adf83a70033e0d1f083ec70,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/tests.c,459,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		content, strlen(content)));",8d3af97b52e26a14376f1068654b338cdebeb66192f284760fbf07cf0072b167,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/tests256.c,330,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		content, strlen(content)));",8d3af97b52e26a14376f1068654b338cdebeb66192f284760fbf07cf0072b167,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/tests256.c,465,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_filebuf_write(&file, old_content, strlen(old_content)));",9aef210fe6b9b7c051e5ae29b43d603a1669df083adf83a70033e0d1f083ec70,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/tests256.c,481,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		content, strlen(content)));",8d3af97b52e26a14376f1068654b338cdebeb66192f284760fbf07cf0072b167,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/index/version.c,60,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,						     strlen(paths[i]) + 1));,dfc168b95a82c8a2e424c894c2fb69a8409ba3f01317bfaac4304309fc153d57,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/iterator/iterator_helpers.c,44,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			size_t expect_len = strlen(expect_path);,6a005ab6868488635504762c5bcee4bade0913f256d71366aeefa0fd7ec3299a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/iterator/iterator_helpers.c,75,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			size_t expect_len = strlen(expect_path);,6a005ab6868488635504762c5bcee4bade0913f256d71366aeefa0fd7ec3299a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/iterator/workdir.c,473,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			buf[strlen(buf) - 5] = '\0';,11f589c8798e1936794999fcf36c6038df8508448153ec4b798130254d28004f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/iterator/workdir.c,489,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,				size_t sublen = strlen(sub);,6248bf6402ee4306012bf072a9a214a05e22546c7cb86949612be2f51a272f91,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/mailmap/basic.c,31,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&mailmap, TEST_MAILMAP, strlen(TEST_MAILMAP)));",e4916af895273f92f004f180c287227793c0de4768b035bd02371f41c00cb8f1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/mailmap/parsing.c,93,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		&g_mailmap, string_mailmap, strlen(string_mailmap)));",21f1255d0168ebbb40b084e3c19c01e9ffc4d968f49da1da281d5f693b610313,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/mailmap/parsing.c,110,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_attach_notowned(&unixbuf, string_mailmap, strlen(string_mailmap));",5900ea86ff9db5130188a79e0532430a3e7e416034ccd80121099db91d769bfd,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/driver.c,163,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_file(expected, strlen(expected),",cbfc6f3be761510adea2b77ce6a4ef5926bc1c671cc108e581d73f229b35221b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/driver.c,173,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_file(expected, strlen(expected),",cbfc6f3be761510adea2b77ce6a4ef5926bc1c671cc108e581d73f229b35221b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/driver.c,310,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_file(expected, strlen(expected),",cbfc6f3be761510adea2b77ce6a4ef5926bc1c671cc108e581d73f229b35221b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/driver.c,332,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_file(expected, strlen(expected),",cbfc6f3be761510adea2b77ce6a4ef5926bc1c671cc108e581d73f229b35221b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,46,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ancestor.size = strlen(ancestor.ptr);,162a8bb9a902c11432d687753dd26a28fe4f403ef2b0019343e5845a278a0c32,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,51,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ours.size = strlen(ours.ptr);,eef514bc70015119bbd6d7b0b4b25dc7f65e2ff697996129d18649d47d7c5b16,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,56,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	theirs.size = strlen(theirs.ptr);,3aee67fb50fbc6f1751391a489ba22ad69992af7dc3f5b72b0198d7edf8f72c4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,67,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(expected), result.len);",f9dab6cb3f0a211b0105f765bd5367c369108fa6441ef39b739fcb3cd4b51c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,82,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ancestor.size = strlen(ancestor.ptr);,162a8bb9a902c11432d687753dd26a28fe4f403ef2b0019343e5845a278a0c32,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,87,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ours.size = strlen(ours.ptr);,eef514bc70015119bbd6d7b0b4b25dc7f65e2ff697996129d18649d47d7c5b16,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,92,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	theirs.size = strlen(theirs.ptr);,3aee67fb50fbc6f1751391a489ba22ad69992af7dc3f5b72b0198d7edf8f72c4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,103,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(expected), result.len);",f9dab6cb3f0a211b0105f765bd5367c369108fa6441ef39b739fcb3cd4b51c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,117,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t expected_len = strlen(expected);,1c906d24a21989370ab7d50e89a962ca02ca17c578f81769b0427236e7456c83,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,120,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ancestor.size = strlen(ancestor.ptr);,162a8bb9a902c11432d687753dd26a28fe4f403ef2b0019343e5845a278a0c32,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,125,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ours.size = strlen(ours.ptr);,eef514bc70015119bbd6d7b0b4b25dc7f65e2ff697996129d18649d47d7c5b16,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,130,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	theirs.size = strlen(theirs.ptr);,3aee67fb50fbc6f1751391a489ba22ad69992af7dc3f5b72b0198d7edf8f72c4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,172,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(AUTOMERGEABLE_MERGED_FILE), result.len);",0bd1d3214b2642b261d3dfd7b77d190e2e88c0eb41fbaeaa91834bfacea8c434,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,188,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ancestor.size = strlen(ancestor.ptr);,162a8bb9a902c11432d687753dd26a28fe4f403ef2b0019343e5845a278a0c32,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,193,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ours.size = strlen(ours.ptr);,eef514bc70015119bbd6d7b0b4b25dc7f65e2ff697996129d18649d47d7c5b16,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,198,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	theirs.size = strlen(theirs.ptr);,3aee67fb50fbc6f1751391a489ba22ad69992af7dc3f5b72b0198d7edf8f72c4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,210,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(expected), result.len);",f9dab6cb3f0a211b0105f765bd5367c369108fa6441ef39b739fcb3cd4b51c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,226,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ancestor.size = strlen(ancestor.ptr);,162a8bb9a902c11432d687753dd26a28fe4f403ef2b0019343e5845a278a0c32,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,231,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ours.size = strlen(ours.ptr);,eef514bc70015119bbd6d7b0b4b25dc7f65e2ff697996129d18649d47d7c5b16,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,236,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	theirs.size = strlen(theirs.ptr);,3aee67fb50fbc6f1751391a489ba22ad69992af7dc3f5b72b0198d7edf8f72c4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,248,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(expected), result.len);",f9dab6cb3f0a211b0105f765bd5367c369108fa6441ef39b739fcb3cd4b51c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,264,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ancestor.size = strlen(ancestor.ptr);,162a8bb9a902c11432d687753dd26a28fe4f403ef2b0019343e5845a278a0c32,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,269,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ours.size = strlen(ours.ptr);,eef514bc70015119bbd6d7b0b4b25dc7f65e2ff697996129d18649d47d7c5b16,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,274,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	theirs.size = strlen(theirs.ptr);,3aee67fb50fbc6f1751391a489ba22ad69992af7dc3f5b72b0198d7edf8f72c4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,286,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(expected), result.len);",f9dab6cb3f0a211b0105f765bd5367c369108fa6441ef39b739fcb3cd4b51c77,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,391,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t expected_len = strlen(expected);,1c906d24a21989370ab7d50e89a962ca02ca17c578f81769b0427236e7456c83,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,397,30,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t expected_diff3_len = strlen(expected_diff3);,ad7ff6818260c1de962b4e2bc8bd510eb0730015a17f69a207fd3a0ca3cf5c67,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,442,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t expected_zdiff3_len = strlen(expected_zdiff3);,6207f52f2f0a0195ff4ee3b1aadb8fcb0f495db8d23dc894d8390762f0229868,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,445,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ancestor.size = strlen(ancestor.ptr);,162a8bb9a902c11432d687753dd26a28fe4f403ef2b0019343e5845a278a0c32,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,450,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	ours.size = strlen(ours.ptr);,eef514bc70015119bbd6d7b0b4b25dc7f65e2ff697996129d18649d47d7c5b16,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/files.c,455,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	theirs.size = strlen(theirs.ptr);,3aee67fb50fbc6f1751391a489ba22ad69992af7dc3f5b72b0198d7edf8f72c4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.c,167,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (strlen(expected->oid_str) != 0) {,22727d459b192fbbaa3424ffdf6e7bb179b76467de436431eb5f1828fc806ade,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.c,178,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (actual->mode == 0 && (actual->path != NULL || strlen(expected->path) > 0)),073131c1d32027b2565f473a97d385b625853ec5254f309c44b2f25586e1c1f1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/merge_helpers.c,189,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (strlen(expected) == 0),924e150207bda0345ab2684ff4745386a8c75a7ab7f912d1d44374f57764611d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/trees/automerge.c,100,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(entry->file_size == strlen(AUTOMERGEABLE_MERGED_FILE));,6f43050989d433b8fe2061573dae8420ecbfd8691383d1d2081d99958a744575,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/trees/commits.c,63,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(entry->file_size == strlen(AUTOMERGEABLE_MERGED_FILE));,6f43050989d433b8fe2061573dae8420ecbfd8691383d1d2081d99958a744575,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/workdir/simple.c,165,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(entry->file_size == strlen(AUTOMERGEABLE_MERGED_FILE));,6f43050989d433b8fe2061573dae8420ecbfd8691383d1d2081d99958a744575,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/merge/workdir/simple.c,240,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(entry->file_size == strlen(AUTOMERGEABLE_MERGED_FILE_CRLF));,94d07fdc1554a71993b2783bc7364d433325f8a218e0a85928cf64226956be23,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/network/remote/remotes.c,110,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		error = git_buf_set(url_resolved, ""pushresolve"", strlen(""pushresolve"") + 1);",ee3b5a427cd94f4a9f6fc6b1526f50c09ff4fb1e07841961de651cc53aa88f55,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/network/remote/remotes.c,112,53,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		error = git_buf_set(url_resolved, ""fetchresolve"", strlen(""fetchresolve"") + 1);",ca0db9f77555a867a9ee6196d8995ac05d6e277c272c9765f20db32e1b3b8591,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/blob/filter.c,59,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			g_crlf_raw_len[i] = strlen(g_crlf_raw[i]);,4df94cd62f9851845f47c92abe63390954c75ecbb60fc9730306e15a30f848b2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/blob/fromstream.c,34,54,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_git_pass(stream->write(stream, textual_content, strlen(textual_content)));",902fb5935d28e3240bfda42f89f02b9407e657d7943fbe4b889c291dd6e63424,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/blob/fromstream.c,72,54,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_git_pass(stream->write(stream, textual_content, strlen(textual_content)));",902fb5935d28e3240bfda42f89f02b9407e657d7943fbe4b889c291dd6e63424,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/commit/parse.c,19,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		datalen = strlen(data);,a6309e8204942026524f8fa185c91c4a0d0e471257a29bd9a0ecd90c6501a451,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/commit/parse.c,73,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		datalen = strlen(data);,a6309e8204942026524f8fa185c91c4a0d0e471257a29bd9a0ecd90c6501a451,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/commit/parse.c,244,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		commit, strlen(commit) - strlen(""ncoding foo\n""),",36ee594813f31daa3cd1f3236e3b22a4eb5fd9c24cfe27888ab02f4cc7d4b242,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/commit/parse.c,244,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		commit, strlen(commit) - strlen(""ncoding foo\n""),",36ee594813f31daa3cd1f3236e3b22a4eb5fd9c24cfe27888ab02f4cc7d4b242,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/commit/parse.c,468,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		commit, strlen(commit) - strlen(""ncoding foo\n""),",36ee594813f31daa3cd1f3236e3b22a4eb5fd9c24cfe27888ab02f4cc7d4b242,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/commit/parse.c,468,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		commit, strlen(commit) - strlen(""ncoding foo\n""),",36ee594813f31daa3cd1f3236e3b22a4eb5fd9c24cfe27888ab02f4cc7d4b242,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/lookup.c,45,48,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, commit, strlen(commit), GIT_OID_SHA1));",b2438163ee776e0a69f325ebe07fcddbffd697ac5f5ac958522b2b4a623b3377,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/lookup.c,47,66,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		GIT_ENOTFOUND, git_object_lookup_prefix(&object, g_repo, &oid, strlen(commit), GIT_OBJECT_TAG));",a56514024282cc69eaa1cf6fa850ab432b1d2bbb9b45b4a5c73ff7b93fc1b6c2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/lookup256.c,62,48,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, commit, strlen(commit), GIT_OID_SHA256));",619fb5f1db8148e0ed45b9dd038bf5c52d98a272fb03ee93fa2b2956c30686e7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/lookup256.c,64,66,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		GIT_ENOTFOUND, git_object_lookup_prefix(&object, g_repo, &oid, strlen(commit), GIT_OBJECT_TAG));",a56514024282cc69eaa1cf6fa850ab432b1d2bbb9b45b4a5c73ff7b93fc1b6c2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/raw/hash.c,33,48,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_hash_update(&ctx, hello_text, strlen(hello_text)));",a0ec50d7514fd27fd60bce2e50416046f81ab0fb9c8d5a205072ee0535123771,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/raw/hash.c,41,46,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_hash_update(&ctx, bye_text, strlen(bye_text)));",ed9f2b5ed624e1d51624baea7dc2f18b0b7d2703eea5be232978a3117c170627,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/raw/hash.c,56,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_hash_buf(hash, hello_text, strlen(hello_text), GIT_HASH_ALGORITHM_SHA1));",24e0894681f37e4e5805eaf49a369c82d159b839efdd6c1c302978946e904f74,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/raw/hash.c,72,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	vec[1].len  = strlen(hello_text)-4;,6cb6284966f261a43d6b54a11d0a7ee6e5bc998974962513accb1bf76cbc3239,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/raw/short.c,37,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		git_hash_buf(hashbuf, numbuf, strlen(numbuf), GIT_HASH_ALGORITHM_SHA1);",a11a5c7c150f5f0b0718498b0a0dba9ca5611242fd263cd33e521d0a82fef2f7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/tag/parse.c,15,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		datalen = strlen(data);,a6309e8204942026524f8fa185c91c4a0d0e471257a29bd9a0ecd90c6501a451,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/tag/parse.c,56,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		datalen = strlen(data);,a6309e8204942026524f8fa185c91c4a0d0e471257a29bd9a0ecd90c6501a451,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/tag/parse.c,216,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	assert_tag_fails(tag, strlen(tag) - strlen(""\n\nMessage""));",04a2a2affe84b74c66fe373a99b4fc80b4bdbd09a01acddf39e7164edbaa3966,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/tag/parse.c,216,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	assert_tag_fails(tag, strlen(tag) - strlen(""\n\nMessage""));",04a2a2affe84b74c66fe373a99b4fc80b4bdbd09a01acddf39e7164edbaa3966,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/tag/read.c,173,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_write(&id, odb, silly_tag, strlen(silly_tag), GIT_OBJECT_TAG));",c7dbd075399eba897f8fe71a3f3b384b27ae17e161fe5b946e3be1deabb1382e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/tree/parse.c,28,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		datalen = strlen(data);,a6309e8204942026524f8fa185c91c4a0d0e471257a29bd9a0ecd90c6501a451,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/object/tree/parse.c,53,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		datalen = strlen(data);,a6309e8204942026524f8fa185c91c4a0d0e471257a29bd9a0ecd90c6501a451,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/backend/backend_helpers.c,75,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	*len_p = strlen(obj->content);,9264f9917c6d4db7cbd14ec90eb9e87e30193ab74e69e7c08191df679d322d17,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/backend/backend_helpers.c,97,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	*len_p = strlen(obj->content);,9264f9917c6d4db7cbd14ec90eb9e87e30193ab74e69e7c08191df679d322d17,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/backend/backend_helpers.c,119,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	*len_p = strlen(obj->content);,9264f9917c6d4db7cbd14ec90eb9e87e30193ab74e69e7c08191df679d322d17,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/backend/mempack.c,31,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_write(&_oid, _odb, data, strlen(data) + 1, GIT_OBJECT_BLOB));",e63bcf3239a0c4e4d56f8c49e0962e26c7258a0d5cbd3e860d7a565d6319554c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/backend/mempack.c,50,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_write(&_oid, _odb, data, strlen(data) + 1, GIT_OBJECT_BLOB));",e63bcf3239a0c4e4d56f8c49e0962e26c7258a0d5cbd3e860d7a565d6319554c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/backend/mempack.c,58,62,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_blob_create_from_buffer(&_oid, _repo, data, strlen(data) + 1));",949459d64717e154d35e67d9cd6a701a49a45c5db603778b961b82d04b07855c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/backend/mempack.c,73,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_write(&_oid, _odb, data, strlen(data) + 1, GIT_OBJECT_BLOB));",e63bcf3239a0c4e4d56f8c49e0962e26c7258a0d5cbd3e860d7a565d6319554c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/backend/simple.c,125,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&_oid, hash, strlen(hash), GIT_OID_SHA1));",e9190af6a3f23c06320e5ff5f699fd137bc83cfb0a0d2e24881c74dbef4cc8bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,50,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"	strncpy(hex, ""dea509d0"", sizeof(hex));",b8be8145012d432b76531d089ef1cd5414d73fc3c6549554c1c2b503e3b99ea8,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,51,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, hex, strlen(hex), GIT_OID_SHA1));",1bab48b6553620298d2cab90319e1c406e7b6290d37820f500c500d7e854e7b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,53,57,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		GIT_EAMBIGUOUS, git_odb_read_prefix(&obj, _odb, &oid, strlen(hex)));",9aeadca389babfb62a773e2839a00a6cc69033164faf8a8ef13722b608b70293,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,55,61,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		GIT_EAMBIGUOUS, git_odb_exists_prefix(&found, _odb, &oid, strlen(hex)));",c3570c61212a24a7c876f642795bbc65fff1e7d5a6868a6aab7218d287c0d74b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,57,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"	strncpy(hex, ""dea509d09"", sizeof(hex));",dd0ba51693bc5e92222c5d358d9eca3c6386f2a0b43c59f8aeb69b4440bdb01f,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,58,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, hex, strlen(hex), GIT_OID_SHA1));",1bab48b6553620298d2cab90319e1c406e7b6290d37820f500c500d7e854e7b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,59,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_read_prefix(&obj, _odb, &oid, strlen(hex)));",1afc7e55749c341be6641f1c9f66f0d9a3bef82b79b1bbcf7fb09a33afaa8aaf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,60,56,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_exists_prefix(&found, _odb, &oid, strlen(hex)));",14293bf4aa70453a5260d3eea7765c471c3131f2d963787cba5eb14214886a9e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,64,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"	strncpy(hex, ""dea509d0b"", sizeof(hex));",c640ad93c8f5b86e2ef8b73f3c24602f478a8d6862ccbde3bb8e34d60766084b,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,65,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, hex, strlen(hex), GIT_OID_SHA1));",1bab48b6553620298d2cab90319e1c406e7b6290d37820f500c500d7e854e7b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,66,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_read_prefix(&obj, _odb, &oid, strlen(hex)));",1afc7e55749c341be6641f1c9f66f0d9a3bef82b79b1bbcf7fb09a33afaa8aaf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,71,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"	strncpy(hex, ""81b5bff5"", sizeof(hex));",3bfb4f6ca6c81977fa8e07f655cc184d80bb798a12c4521ce568c41bc0ba7b89,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,72,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, hex, strlen(hex), GIT_OID_SHA1));",1bab48b6553620298d2cab90319e1c406e7b6290d37820f500c500d7e854e7b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,74,57,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		GIT_EAMBIGUOUS, git_odb_read_prefix(&obj, _odb, &oid, strlen(hex)));",9aeadca389babfb62a773e2839a00a6cc69033164faf8a8ef13722b608b70293,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,76,61,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		GIT_EAMBIGUOUS, git_odb_exists_prefix(&found, _odb, &oid, strlen(hex)));",c3570c61212a24a7c876f642795bbc65fff1e7d5a6868a6aab7218d287c0d74b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,78,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"	strncpy(hex, ""81b5bff5b"", sizeof(hex));",e27c46098055d1bb8981a18b8c05ad3bd2b141e30ec046e07b222b10d810d279,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,79,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, hex, strlen(hex), GIT_OID_SHA1));",1bab48b6553620298d2cab90319e1c406e7b6290d37820f500c500d7e854e7b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,80,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_read_prefix(&obj, _odb, &oid, strlen(hex)));",1afc7e55749c341be6641f1c9f66f0d9a3bef82b79b1bbcf7fb09a33afaa8aaf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,81,56,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_exists_prefix(&found, _odb, &oid, strlen(hex)));",14293bf4aa70453a5260d3eea7765c471c3131f2d963787cba5eb14214886a9e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,85,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"	strncpy(hex, ""81b5bff5f"", sizeof(hex));",60f55b7e4d6a912d90f1c094edd683ff82f0ce943f8db4434fbc5823fd3e35a3,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,86,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, hex, strlen(hex), GIT_OID_SHA1));",1bab48b6553620298d2cab90319e1c406e7b6290d37820f500c500d7e854e7b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,87,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_read_prefix(&obj, _odb, &oid, strlen(hex)));",1afc7e55749c341be6641f1c9f66f0d9a3bef82b79b1bbcf7fb09a33afaa8aaf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,92,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"	strncpy(hex, ""0ddeaded"", sizeof(hex));",494335e08d9ce54dc41bf56ea0e5254c6ea400b7ba93edb05f0a895f0bdde886,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,93,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, hex, strlen(hex), GIT_OID_SHA1));",1bab48b6553620298d2cab90319e1c406e7b6290d37820f500c500d7e854e7b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,95,57,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		GIT_EAMBIGUOUS, git_odb_read_prefix(&obj, _odb, &oid, strlen(hex)));",9aeadca389babfb62a773e2839a00a6cc69033164faf8a8ef13722b608b70293,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,97,61,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		GIT_EAMBIGUOUS, git_odb_exists_prefix(&found, _odb, &oid, strlen(hex)));",c3570c61212a24a7c876f642795bbc65fff1e7d5a6868a6aab7218d287c0d74b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,99,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"	strncpy(hex, ""0ddeaded9"", sizeof(hex));",1d18cffec29b702e20200c19f5657be7d6f2cbaa741f34a3eb738c261d4becf5,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,100,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, hex, strlen(hex), GIT_OID_SHA1));",1bab48b6553620298d2cab90319e1c406e7b6290d37820f500c500d7e854e7b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,101,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_read_prefix(&obj, _odb, &oid, strlen(hex)));",1afc7e55749c341be6641f1c9f66f0d9a3bef82b79b1bbcf7fb09a33afaa8aaf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,102,56,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_exists_prefix(&found, _odb, &oid, strlen(hex)));",14293bf4aa70453a5260d3eea7765c471c3131f2d963787cba5eb14214886a9e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,106,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"	strncpy(hex, ""0ddeadede"", sizeof(hex));",2d61e5aa3de5556f59b4c1acae734ed2e9e01b70388521d5e5591389a330680d,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,107,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&oid, hex, strlen(hex), GIT_OID_SHA1));",1bab48b6553620298d2cab90319e1c406e7b6290d37820f500c500d7e854e7b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,108,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_odb_read_prefix(&obj, _odb, &oid, strlen(hex)));",1afc7e55749c341be6641f1c9f66f0d9a3bef82b79b1bbcf7fb09a33afaa8aaf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/mixed.c,171,16,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		size_t len = strlen(expand_id_test_data[i].lookup_id);,23eb09bdc216d3addcd81d6faa061e7d9322860034306a2ab98dd167f8526f1e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/odb/sorting.c,101,27,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	cl_assert_equal_p(loose->read, backend->read);",a0b59336b88a5d51ae2e89df5b0189ea6fcad3c1a71dd98d8dc88a7478738261,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/sorting.c,101,42,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	cl_assert_equal_p(loose->read, backend->read);",a0b59336b88a5d51ae2e89df5b0189ea6fcad3c1a71dd98d8dc88a7478738261,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/sorting.c,104,28,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	cl_assert_equal_p(packed->read, backend->read);",133cdcacd6a5ee318636a8e429c0bde7b932aca530cb8cb67bed6698aa3c1668,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/odb/sorting.c,104,43,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	cl_assert_equal_p(packed->read, backend->read);",133cdcacd6a5ee318636a8e429c0bde7b932aca530cb8cb67bed6698aa3c1668,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/online/clone.c,484,50,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_encode_base64(&auth, creds, strlen(creds)));",944e1807da5f4670514d9b2df58f64957530d221bcb792d89159a269cd013cb6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/online/clone.c,862,70,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_oid_from_prefix(&expected, _remote_ssh_fingerprint, strlen(_remote_ssh_fingerprint), GIT_OID_SHA1));",067a8dfc462ea26c0d5f61963b5c2ebb45a20acc6967cb8ce93067bd76bc2cc5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/online/clone.c,871,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	if (strlen(_remote_ssh_fingerprint) == 32 && key->type & GIT_CERT_SSH_MD5) {,71299c1c8c57f3277c87e00dbfac8aafd7446030176417b6a67eb2e54bd3cfad,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/online/clone.c,873,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	} else 	if (strlen(_remote_ssh_fingerprint) == 40 && key->type & GIT_CERT_SSH_SHA1) {,36fe7584e0dc946b1210d2847978378c6a35eff0864f017027d7d55de35d057e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/online/clone.c,1012,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		host_len = strlen(_remote_proxy_host);,7e68d32ea9d0118f95cf65f1931385be4373f54926650fa441fe270283c5249d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/online/clone.c,1015,6,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	    strlen(host) == host_len &&,11f3819ba62eae8b0f7bffe362070f9819ea399cec7fca4047eb12258048f50f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/pack/indexer.c,208,11,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",		ssize_t read;,1b6b33bd3cd7f7aa2a9798a835afff787e110d334941cf89445f31a9ba360c1e,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/pack/indexer.c,224,13,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",		cl_assert(read != -1);,872038db08e1e7249285474695f030dc907e700b27420bce41e84279c7cc0938,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/pack/indexer.c,227,47,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","		cl_git_pass(git_indexer_append(idx, buffer, read, &stats));",ca0848e7782c2c5f151a0474c78baae5180ba1e02b60266cd5cdbc3229035a4a,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,35,53,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_patch_from_buffer(&patch, content, strlen(content), NULL));",cb34e6610eaf5fc4f043a403ad3df42e0956e7717b6f85776ba6e9acbbeca2e0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,37,41,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(buf.ptr, content, strlen(content));",dfce905b3a0b378e3d0572e54323e4fe1eadcce548e7083bf01d364f0e6ac926,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,49,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_ORIGINAL_TO_CHANGE_MIDDLE), NULL));",4baf271f2f525056f7686a05043f19681be3630e2e0433751fa248ef02c3f9fd,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,69,53,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_patch_from_buffer(&patch, leading, strlen(leading),",ed9509799a5a6b076f71fa93c32d34c355a0953334a85f48f1d481fc849b1bf0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,74,54,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_patch_from_buffer(&patch, trailing, strlen(trailing),",f0a641426c2c81787c9ffa983e2ad6f23e3b1e6c65f5ca1848e3c68088b0306f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,79,50,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_patch_from_buffer(&patch, both, strlen(both),",780b78c9db2430a9619b7e07d9e3a16f5e8f1b99319c46bdc1ed1f21f6a6365d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,91,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_NOT_A_PATCH), NULL));",eb1cff25e61945f469923a1e878fac5b001ec189d946d8abdb9de7e4f3abc9ea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,100,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_GIT_HEADER), NULL));",225836cabe98528275270e80ed5547c12fa91ec625cf5b9561a70f56a5c8e95d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,104,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_MISSING_NEW_FILE), NULL));",dc8cead7d14f99b2e318834c83fca8893cd8b4756f2f892da7f8efe88780a813,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,108,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_MISSING_OLD_FILE), NULL));",67826055db292e6fa24e13efdcfb1f68abb49adf57c904d463d8eeba71aed74f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,111,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_NO_CHANGES), NULL));",d3ae30d5e3099e05d0551e91253f776b9b77eb5399ac7c814e9d6116d758734c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,115,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(PATCH_CORRUPT_MISSING_HUNK_HEADER), NULL));",6c7247d76ad3aa7365c6de21c21a824e72238881e8d66ee9b4644cd17051deac,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,158,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"					  strlen(PATCH_BINARY_FILE_WITH_MISSING_PATHS), NULL));",a409b5a8d6c4db1faf558b6f089d0105f8458d5559e3116ff58a11da51c2368b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,165,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"					  strlen(PATCH_BINARY_FILE_WITH_WHITESPACE_PATHS), NULL));",e635c5c54939a403b1d47fb48e15d25283d250cc97afbe61cc38fb66e7d4c249,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,172,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"					  strlen(PATCH_BINARY_FILE_WITH_QUOTED_EMPTY_PATHS), NULL));",c8825861f8bf099b7ed19f344abb1c3e3bd89d14f67a637cf65b2faa26d69676,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,179,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"					  strlen(PATCH_BINARY_FILE_PATH_WITH_SPACES), NULL));",186ea57a9c57715cddcd73a7dd03059b6bb9e157026675ae6ce31fd97a5cbbd2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,186,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"					  strlen(PATCH_BINARY_FILE_PATH_WITHOUT_BODY_PATHS), NULL));",0afcfabad20229dc00819cf246818d8a777e1d74dcd7e95a7b8cb8a6b234eba5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,193,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"					  strlen(PATCH_BINARY_FILE_WITH_TRUNCATED_DELTA), NULL));",751cc785d2762c5db95970794f11987ac496a9967c839075ef565e7db8b7b774,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,200,70,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_fail(git_patch_from_buffer(&patch, PATCH_MULTIPLE_OLD_PATHS, strlen(PATCH_MULTIPLE_OLD_PATHS), NULL));",7c86fd8c70ab72cbe2b0f5bdfa30d1bccea1ce8748a5f069f09ce197ba20a801,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,205,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t len = strlen(PATCH_APPEND_NO_NL) - strlen(""at end of file\n"");",22f8f81fd9d404cea7f654cd734ecae18c7584ecd5b0e70b270f3e325a814fe1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,205,44,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t len = strlen(PATCH_APPEND_NO_NL) - strlen(""at end of file\n"");",22f8f81fd9d404cea7f654cd734ecae18c7584ecd5b0e70b270f3e325a814fe1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/parse.c,219,68,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_fail(git_patch_from_buffer(&patch, PATCH_INTMAX_NEW_LINES, strlen(PATCH_INTMAX_NEW_LINES), NULL));",89910f75961d45181c38c83daa68227b179c5e69fa6ffb90de0c7c5d2c427159,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,29,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_CHANGE_MIDDLE));,928e06a5d4f40e392ee7a2d92d73b4e2bd0d2ee2603368f3be3874c7767a4663,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,35,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_CHANGE_MIDDLE_NOCONTEXT));,e8984762eb26f6201d9cf97cfb46f8ff2f33300d67395bfaf21ce77b3a26160d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,41,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_CHANGE_FIRSTLINE));,94032a00b060dbb37d0f527b590e8271d61ae44741eb30fcf4a9824f4250bbeb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,47,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_CHANGE_LASTLINE));,1cbbc9e7e676fcd1212192abf14743d7495640535cacf5433adc6f94008f0dfe,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,53,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_PREPEND));,e33242364ee3e75aa44a95156b4789df10c169c1be6d30de2bc034eb9ab14b10,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,59,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_PREPEND_NOCONTEXT));,72cbe59d1de4a84abee391b0058bc85defdb2cc4859bdee08711935e5310e7df,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,65,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_APPEND));,d5242e67826b7b6bebfce22148ad0bb7915d568c25c68c6cb050a12984c1a5ff,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,71,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_APPEND_NOCONTEXT));,718a6606a33effa849aaea4cd303cba23c351377309f26063ce4c156bac3b40f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,77,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_PREPEND_AND_APPEND));,f0864811c72f0d004e2f79545e6d4d1d1f19ef2af5d9c200c107b8cc27a59107,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,83,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ORIGINAL_TO_EMPTY_FILE));,06eeed1f882506e4c2c4df32c88913b6951896935c00d8fdf2ceb05372bb672e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,89,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_EMPTY_FILE_TO_ORIGINAL));,5a67ce43c6fc0e411607b42d44d72e7694b63783d8e2b43e79b3dab60b210b8a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,95,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ADD_ORIGINAL));,c8304fc474c53b6cff39771a142d09e9936a6260e2c522727987575e84d66378,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,101,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_DELETE_ORIGINAL));,c8dd854d001768df9eb8621203c86f612a0ee1b8021488cc0ca518dbe6d27eb5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,107,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_RENAME_EXACT));,831d839d3fff5f66b8b1531ec984c34c73cfaab70006b8e2e159279a5f90d338,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,113,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_RENAME_EXACT_WITH_MODE));,52947a486d13c8d33fd03766167dfbe7fab32409034606f802e8b4e47fb1e330,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,119,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_RENAME_SIMILAR));,6e621cb110c60a1889102ed761deac240b959dd13f2aa50e383503e352f2c926,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,125,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_RENAME_EXACT_QUOTEDNAME));,90c696ccc69710a950f9a96bd24401086b8ac4afbec092c4777f2b7c752a313b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,131,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_RENAME_SIMILAR_QUOTEDNAME));,11851c517eaad511b2e626d1c89cc8cb84aa359c453ea372f9808237a6b6cee0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,137,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_MODECHANGE_UNCHANGED));,868a5aaaed5814989f9a044ff692c4a540ea6c1f94cb0617bdc688c29789a247,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,143,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_MODECHANGE_MODIFIED));,c4c1720ad3b178e5b2f06e92ea362fe47ee4f248117412894bb791d6f417007b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,149,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_BINARY_LITERAL));,53d7b1f61e595ea889f89a8aea860e8b8df13153677d0cab742bc44c969fd6bb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,155,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_BINARY_DELTA));,98998e43d0cbf9fde15e34451556eed6fa2d67dbcfe1f43186280d9f0dfcdd2c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,161,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_BINARY_ADD));,fda1386df7d4a3d074d09dc066b39a76598a5831c4843c625d056fe73ba5030c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,167,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_BINARY_DELETE));,1b2a168707ca2226286e47d76ea52854d3e2a7f8c2a000a816b711ec03908c1c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,173,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_BINARY_NOT_REVERSIBLE));,501df6bd17937194418ea236c5eee03a4f2768e4a24c7663e268baa452cc59d7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,179,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_BINARY_NOT_PRINTED));,54558c272d221a0977168e154b381997be8c0bdd5a63bb54f70dc47cad4e1838,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/patch/print.c,185,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(PATCH_ADD_BINARY_NOT_PRINTED));,2887955f29529ef2595d7e2416565cb913910cd01f1c560c0e0d1e65ec2f722d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/rebase/merge.c,145,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_file(expected_merge, strlen(expected_merge), ""rebase/asparagus.txt"");",99fb2d26bcea03cd73cd0c6dc3513c0f64b2a807002730177fa443f6697577b9,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/rebase/sign.c,350,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_buf_set(signature, gpg_signature, strlen(gpg_signature) + 1));",c5b9843569e251a2d22b1af499a412bb5adee1be94ca3f8135ae815d8129d482,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/rebase/sign.c,437,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(signature_content) + 1));,21d8daaaad0816de31f35c19882242e398a82785aa27c583e5f9772eeb111cdb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/rebase/sign.c,439,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(signature_field_content) + 1));,d6d68739a42ba23ef81f25b7cb4bd8bc0957011b6a7f868a500ffa9f1e00128e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/refs/basic.c,59,40,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	base_len = git_utf8_char_length(base, strlen(base));",b56dff72c27efaa9b00734fc7f6d526d7d9d534464e87ae3b95d5c28d2a8ba18,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/refs/branches/remote.c,14,37,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	expected_remote_name_length = (int)strlen(expected_remote_name) + 1;,173b5c73c3f040e6f07a48691760adfe86152c63686a5ef6ae791866256b329b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/repo/discover.c,57,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	error = p_write(file, content, strlen(content) * sizeof(char));",cfeca7d590e417a374520e7496460fa3c0745dfc7564bd73939d31dc2d5a178a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/revwalk/mergebase.c,204,54,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_git_pass(git_oid_from_prefix(&oid, partial_oid, strlen(partial_oid), GIT_OID_SHA1));",ff4ac62d2442a8b1d1f85d76eaff6cb9a28b3ebdcc030746576851e7c4215c25,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/revwalk/mergebase.c,206,62,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_git_pass(git_object_lookup_prefix(&object, _repo, &oid, strlen(partial_oid), GIT_OBJECT_COMMIT));",d59dd0a5b720b227b147fcd031557b48c4db1937fad4b9bbd6b4fe5cb32be9d6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/revwalk/mergebase.c,268,54,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_git_pass(git_oid_from_prefix(&oid, partial_oid, strlen(partial_oid), GIT_OID_SHA1));",ff4ac62d2442a8b1d1f85d76eaff6cb9a28b3ebdcc030746576851e7c4215c25,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/revwalk/mergebase.c,270,62,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_git_pass(git_object_lookup_prefix(&object, _repo, &oid, strlen(partial_oid), GIT_OBJECT_COMMIT));",d59dd0a5b720b227b147fcd031557b48c4db1937fad4b9bbd6b4fe5cb32be9d6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/stress/diff.c,108,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_git_pass(git_index_add_bypath(index, tmp + strlen(""renames/"")));",60b1d9b7a991a68e8af412209ee9c6bc0f2499e93980c37a4a350a61b3050103,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/stress/diff.c,140,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_git_pass(git_index_add_bypath(index, tmp + strlen(""renames/"")));",60b1d9b7a991a68e8af412209ee9c6bc0f2499e93980c37a4a350a61b3050103,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/submodule/submodule_helpers.c,31,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"			scan += strlen(""path ="");",3c3ad8af9e7bbd6fc09c7f934e30a59f7dd1c92abb1a2d000a6aebb08f83fb02,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/submodule/submodule_helpers.c,55,11,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		scan += strlen(""url ="");",c9cd2423a314b38ecaaaa62da05a9e971c123b5fae6dfcf32cbde31d517a11be,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,11,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,25,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,40,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,55,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,70,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,88,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,102,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,109,55,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(pkt->comment, expected_comment, strlen(expected_comment));",e5106d38ea03535ec25532f8a618d0dd8dccb116502e29c0cf28e81054266017,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,116,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,123,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(pkt->ref, expected_ref, strlen(expected_ref));",fa1ce7cbc684700e10c522b3b31f9f5a7dcae997c898ce9f316e0c1cd8e66b4e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,130,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,144,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t linelen = strlen(line) + 1;,0eaa30c6f57a6865ccfd57d077fe23f0df023b54a4d19e1cece4dea864ea036d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,151,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(pkt->ref, expected_ref, strlen(expected_ref));",fa1ce7cbc684700e10c522b3b31f9f5a7dcae997c898ce9f316e0c1cd8e66b4e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,152,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(pkt->msg, expected_msg, strlen(expected_msg));",78026d8266dfd49787b0dc2e8a0409eeb0a12f1b41c033a6725ade9e78d71c80,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,173,53,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_strn(pkt->head.name, expected_ref, strlen(expected_ref));",7ce88cb81be26baec66eca40815cffb75f1b3ee0e6e1957d62a1256d6169868d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,175,66,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_assert_equal_strn(pkt->capabilities, expected_capabilities, strlen(expected_capabilities));",7e42647beee1d013527f67a2617db772de68e078d8394ff783a44d122314079f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/transports/smart/packet.c,188,54,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_fail(git_pkt_parse_line(&pkt, &endptr, line, strlen(line) + 1, &pkt_parse_data));",e1ac3f6bccecfbe5d0246a158cff978b0cefef102ce8e43760e6503ae8e7d866,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/libgit2/win32/longpath.c,16,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t base_len = strlen(base);,1f4a0372397be444f9217543c0c8e5bd4d133a83768bb8d4472a14621af33c44,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/copy.c,18,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_assert_equal_sz(strlen(content), (size_t)st.st_size);",1b0cd61fb48f0f067cf3a8c87e1b7e711f05cee751d8da793f24297484d7f5f2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/copy.c,45,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_assert_equal_sz(strlen(content), (size_t)st.st_size);",1b0cd61fb48f0f067cf3a8c87e1b7e711f05cee751d8da793f24297484d7f5f2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/copy.c,109,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		cl_assert_equal_sz(strlen(content), (size_t)st.st_size);",1b0cd61fb48f0f067cf3a8c87e1b7e711f05cee751d8da793f24297484d7f5f2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/dirent.c,291,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"	strncpy(root_path, sandbox_path, root_offset + 1);",381a7730d77e3fadc781f935e0335dd6da8dba33d62753b4cda9df35ee42b496,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/util/errors.c,79,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert(strlen(str_in_error) > strlen(""stat failed: ""));",67f769688c8f3356f6c32f1aa0613d6a931bbac1bcf818f820dfcdaa19c4c24a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/errors.c,79,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert(strlen(str_in_error) > strlen(""stat failed: ""));",67f769688c8f3356f6c32f1aa0613d6a931bbac1bcf818f820dfcdaa19c4c24a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/errors.c,92,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert(strlen(str_in_error) > strlen(""GetProcessId failed: ""));",d64f230ff4a989efdec1efd05965bd6b4946902b34dece89405727bde59cad04,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/errors.c,92,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert(strlen(str_in_error) > strlen(""GetProcessId failed: ""));",d64f230ff4a989efdec1efd05965bd6b4946902b34dece89405727bde59cad04,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/futils.c,100,2,1,1,access,umask,"Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732).",,,CWE-732,	umask(0);,fd811c39bee8e23905a680aba71554b3b303b72d54bd913f72220d65fd51d946,2.0.19,FF1041,https://cwe.mitre.org/data/definitions/732.html
repos_cpp/libgit2/tests/util/futils.c,107,2,1,1,access,umask,"Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732).",,,CWE-732,	umask(077);,db2babcf8edf7abba1ee97c19be3cde2beeaebad2e29ca00a638c6c1fbce1f72,2.0.19,FF1041,https://cwe.mitre.org/data/definitions/732.html
repos_cpp/libgit2/tests/util/gitstr.c,192,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		cl_assert(strlen(git_str_cstr(&buf)) == (size_t)((i + 1) * 2));,585223c783951abf856392c70edf5f368e948ce2f419beb453c9a7def5df117f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,373,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(a.size == strlen(fun));,85446ba091aa30bfab1a41a2ea223fcd4d7a93e0ebc78c88617c868dcec1d786,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,374,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(a.asize == strlen(fun) + 1);,830e5353170fd86b6dc8e66047025a84881b3edcfc649b249e33c81393586971,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,379,24,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_attach(&a, b, strlen(fun) + 1);",a5c4914125f43e07a189e42a97852e87b94a0cc100ebe929ef1c55d646cec4fb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,382,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(a.size == strlen(fun));,85446ba091aa30bfab1a41a2ea223fcd4d7a93e0ebc78c88617c868dcec1d786,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,383,23,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(a.asize == strlen(fun) + 1);,830e5353170fd86b6dc8e66047025a84881b3edcfc649b249e33c81393586971,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,718,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_sz(strlen(expected), buf.size);",30c103695c8507cd8689a2df1ad8e58ae5fd1858e280d39cfc4cafb5b6b5c418,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,791,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		strlen(""this is base 85 encoded"")));",79c8f2bcb591b89ebc501ce8ed9d5cd47d36a6e1ded7877d0b306a749dc69aee,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,869,21,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_sz(strlen(expected), buf.size); } while (0)",612a1d3a5e09bb1b9f5250cf63f4a1b3b0d844bca82c2a4fd8be339fc79df6ea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,1002,44,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_str_attach_notowned(&buf, somestring, strlen(somestring) + 1);",5a85bfdfa99050f2df0da717a7ad5538d10097de775cf1ca4ad440e6d4f8adf8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/gitstr.c,1005,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(somestring) + 1, buf.size);",188d283a61d3e99d1f58c1be53af898ab5856aae78b5a8bdc4421b5723763d5c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/iconv.c,28,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t datalen = strlen(data);,2f5e64e27f2d132408a9297e2d71421c664726203f5dacef713668bda0d2d3cb,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/iconv.c,42,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	size_t datalen, nfdlen = strlen(nfd);",e821da888864933fd230d1d11162eb745ff96e7bad0ce3decdb2beddae7ceaab,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/iconv.c,68,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t datalen = strlen(nfc);,94a7968e8c2e285f1f23c58bc9533dc521e66d8559414ef4add0925199af06cf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/link.c,96,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	for (i = 0; i < strlen(old); i++),f9eb231d8310aad2ea2079cc1211a70ee4121a65f389a3cdf375f2570b4725aa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/link.c,159,3,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		strlen(reparse_data) + 1;,8bede82870fc60cc81ae370895bc77d0eb1181601793deab4476c1bda00687bc,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/link.c,165,42,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	reparse_buf->ReparseDataLength = (WORD)(strlen(reparse_data) + 1);,a17039e2d51bbafc7d748ae0bcac0fb5701604976a799bfcf058b8489f2dc6d8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/link.c,181,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		reparse_data, strlen(reparse_data) + 1);",50dd3309da5688a2298d4e135831dcc4f544ba0b0ebd54129fe6b9cd8dee6d85,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/link.c,362,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(""lstat_nonexistent""), st.st_size);",a25d227008ddc5698e08fb958a42e2c449f3d75b49b4adb3d53a49c84ba94ac0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/link.c,378,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(""lstat_nonexistent""), st.st_size);",a25d227008ddc5698e08fb958a42e2c449f3d75b49b4adb3d53a49c84ba94ac0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/memmem.c,5,53,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_p(git__memmem(haystack, haystack ? strlen(haystack) : 0,",1175534f403c086ecc53e299578a4e975fe0130e1893e1c4f43a34edd2fe7fc3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/memmem.c,6,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"				      needle, needle ? strlen(needle) : 0),",5340b3a46cea78a60832f640105f6dd558eb361fa24acaa2f01f05627536ad93,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/memmem.c,12,53,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_p(git__memmem(haystack, haystack ? strlen(haystack) : 0,",1175534f403c086ecc53e299578a4e975fe0130e1893e1c4f43a34edd2fe7fc3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/memmem.c,13,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"				      needle, needle ? strlen(needle) : 0),",5340b3a46cea78a60832f640105f6dd558eb361fa24acaa2f01f05627536ad93,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/path/core.c,223,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t len = strlen(path);,979e51cc7bcbdcf2ad1b1340511dd9d9a13bf4635aec36616da71e36e929ebbe,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/path/core.c,227,2,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"	strncpy(buf, path, len + 2);",c33af3fb71064f12bd7772fb7b6385fbe8053f029b5afe18822ec98eb3483c28,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
repos_cpp/libgit2/tests/util/path/core.c,864,13,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	str.size = strlen(str.ptr);,54fdea0303aff379d964aabc2499b37b6ea8e104893c2f58076280bb655160e8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/path/win32.c,16,20,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(wcslen(utf16_expected), path_utf16len);",29f0a1de690605adbe88a1d643dc0a1ba3d59aabbbbf12812aea1cc4d0f448fc,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/path/win32.c,26,20,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(wcslen(utf16_expected), path_utf16len);",29f0a1de690605adbe88a1d643dc0a1ba3d59aabbbbf12812aea1cc4d0f448fc,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/path/win32.c,166,12,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(wcslen(in) < MAX_PATH);,486ceabb3e751f09197f2efa9aa48ba9acea2581c94dfb58bc583fac1fb8d549,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/path/win32.c,179,12,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(wcslen(in) < MAX_PATH);,486ceabb3e751f09197f2efa9aa48ba9acea2581c94dfb58bc583fac1fb8d549,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/path/win32.c,182,45,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	git_win32_path_remove_namespace(canonical, wcslen(in));",7b48c1285027da518d0fcaf8c765dcbec4875efb09498261e07a167f064db61e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/process/env.c,57,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (strlen(tok) && tok[strlen(tok) - 1] == '\r'),cad919ae6c1c6de0f116edffcfa61ca9f7db0334d13989f3ec5a9356aa4123b5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/process/env.c,57,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (strlen(tok) && tok[strlen(tok) - 1] == '\r'),cad919ae6c1c6de0f116edffcfa61ca9f7db0334d13989f3ec5a9356aa4123b5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/process/env.c,58,8,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,			tok[strlen(tok) - 1] = '\0';,308fbff5b5fdfe736ac6d145acdcdfde4149ec7dd065ea936f01906b72cc9218,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/process/start.c,83,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	size_t buf_len = strlen(buf);,ec860885f77fcea83403bb51972071194955afa0a9e6d517717e8a105579b7c6,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/basic.c,13,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(strlen(git_str_cstr(&buf1)) == strlen(test_string) * 2);,77d3b01f94014a8d0bda36ae0b6789d07233bc2bb64aafc3258f291070cb4859,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/basic.c,13,43,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	cl_assert(strlen(git_str_cstr(&buf1)) == strlen(test_string) * 2);,77d3b01f94014a8d0bda36ae0b6789d07233bc2bb64aafc3258f291070cb4859,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/percent.c,15,51,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_decode_percent(&out, in.ptr, strlen(encoded)));",70613117ff3d720ddfca4e97cd3b8240197dacd197ca940d7294df28c6536fcd,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/percent.c,18,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(expected), git_str_len(&out));",32cddb1cfdfbd53d3a85187a106df05cfbe82d17191535455ee06013cc64d95f,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/quote.c,11,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(expected), git_str_len(&buf));",7424cebf8f8d13b85759f3b28a0690e65fcbc146f5e81c080c44a1da9566963e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/quote.c,38,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_assert_equal_i(strlen(expected), git_str_len(&buf));",7424cebf8f8d13b85759f3b28a0690e65fcbc146f5e81c080c44a1da9566963e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,17,57,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, 0, 0, ""Hello Dolly"", strlen(""Hello "")));",7f311107fa87bc96223381d337fa665c142942ac72a2fe8ad009f706faff5411,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,26,70,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, git_str_len(&_buf), 0, "" world!"", strlen("" world!"")));",22d39ab43e3154f3c39f7b9421e653260ec12e57673acbd52136b8caff3e10e2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,35,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hell""), 0, ""o"", strlen(""o"")));",6c81840f103bcdd4816b5ebe592d5e9890a295e06b7967bd855b503ab264bbea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,35,60,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hell""), 0, ""o"", strlen(""o"")));",6c81840f103bcdd4816b5ebe592d5e9890a295e06b7967bd855b503ab264bbea,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,44,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hello world""), strlen("" of warcraft""), """", 0));",09038dfd5b4eff70be84eb0b6d927c9dbc68f8684baed8400d4a312a28c681b8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,44,59,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hello world""), strlen("" of warcraft""), """", 0));",09038dfd5b4eff70be84eb0b6d927c9dbc68f8684baed8400d4a312a28c681b8,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,53,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hell""), strlen(""0 w0""), ""o wo"", strlen(""o wo"")));",870707277ea1baeea347943b808146f96fb59628c2f39c3e7937b87c77a8e7fa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,53,52,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hell""), strlen(""0 w0""), ""o wo"", strlen(""o wo"")));",870707277ea1baeea347943b808146f96fb59628c2f39c3e7937b87c77a8e7fa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,53,76,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hell""), strlen(""0 w0""), ""o wo"", strlen(""o wo"")));",870707277ea1baeea347943b808146f96fb59628c2f39c3e7937b87c77a8e7fa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,62,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hello ""), strlen(""you""), ""world"", strlen(""world"")));",f752ed4c99c96761149cfa2a176ba17daa761d2a179825655a8925019b872eb3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,62,54,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hello ""), strlen(""you""), ""world"", strlen(""world"")));",f752ed4c99c96761149cfa2a176ba17daa761d2a179825655a8925019b872eb3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,62,78,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hello ""), strlen(""you""), ""world"", strlen(""world"")));",f752ed4c99c96761149cfa2a176ba17daa761d2a179825655a8925019b872eb3,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,71,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, 0, strlen(""Brave new""), ""Hello"", strlen(""Hello"")));",c8cab9f7afa60fd97ec67f739dd92bd2fb039ed18f88bb2058b2627bfc731b1d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,71,69,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, 0, strlen(""Brave new""), ""Hello"", strlen(""Hello"")));",c8cab9f7afa60fd97ec67f739dd92bd2fb039ed18f88bb2058b2627bfc731b1d,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,80,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hello world!""), strlen(""!""), """", 0));",62efb0dddecea7736a3d0f582c9bce35cce95c3ca07772321c4a74003fbebce5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/str/splice.c,80,60,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_str_splice(&_buf, strlen(""Hello world!""), strlen(""!""), """", 0));",62efb0dddecea7736a3d0f582c9bce35cce95c3ca07772321c4a74003fbebce5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/strtol.c,6,41,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git__strntol32(&i, string, strlen(string), NULL, base));",72c906aba3fd13e988756133435ae3f1cb91938eb3f19b3c0d9f3a0ea916379e,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/strtol.c,13,41,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_fail(git__strntol32(&i, string, strlen(string), NULL, base));",75ce3fc9c0d1a2da9ce2fd3ebb92f7b7b9a86c98808f0525f23ecac196f464f4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/strtol.c,19,41,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git__strntol64(&i, string, strlen(string), NULL, base));",3b3095af931273888954ac925152059a6273bba4ff84fd9f485b9f982d7a5fa4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/strtol.c,26,41,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_fail(git__strntol64(&i, string, strlen(string), NULL, base));",5ddded2e343923b6996116b1d2a8a21de72be1ed0e15eb17f22849cf782c5403,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/zstream.c,51,46,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_zstream_set_input(&z, data, strlen(data) + 1));",6952ad21368697d877d4f189bd7955236e3a1470cc62d74eeb9bf89d9101e6b5,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/zstream.c,57,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	assert_zlib_equal(data, strlen(data) + 1, out, outlen);",6e614a19410766c4e87cc940d923ebae2f1349acf4d6be872c5509c9bc6eded2,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/zstream.c,82,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	cl_git_pass(git_zstream_deflatebuf(&out, data, strlen(data) + 1));",1da1e8a1f34985e4b0bc182a4bd0f6b0cfac1879c0b4ceb764d25843d0a278cf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/zstream.c,83,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"	assert_zlib_equal(data, strlen(data) + 1, out.ptr, out.size);",03456b30ae72ce0de5967704724499caa78bfc8d76fca0fca42323b3e12a171c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
repos_cpp/libgit2/tests/util/zstream.c,154,39,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"				git_str_put(&in, BIG_STRING_PART, strlen(BIG_STRING_PART)));",c28c2cbf9a04cdd2713e0aaaa02411e6783e00d738a6c8b1c57e89a9d2261a23,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
